

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 09 11:40:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0008                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0088                     	;# 
   249     0089                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     008F                     	;# 
   254     0090                     	;# 
   255     0091                     	;# 
   256     0092                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0094                     	;# 
   261     0095                     	;# 
   262     0096                     	;# 
   263     0097                     	;# 
   264     0098                     	;# 
   265     0099                     	;# 
   266     009A                     	;# 
   267     009B                     	;# 
   268     009C                     	;# 
   269     009D                     	;# 
   270     009E                     	;# 
   271     009F                     	;# 
   272     0105                     	;# 
   273     0107                     	;# 
   274     0108                     	;# 
   275     0109                     	;# 
   276     010C                     	;# 
   277     010C                     	;# 
   278     010D                     	;# 
   279     010E                     	;# 
   280     010F                     	;# 
   281     0185                     	;# 
   282     0187                     	;# 
   283     0188                     	;# 
   284     0189                     	;# 
   285     018C                     	;# 
   286     018D                     	;# 
   287     0013                     _SSPBUF	set	19
   288     000C                     _PIR1bits	set	12
   289     0014                     _SSPCON	set	20
   290     0008                     _PORTD	set	8
   291     0005                     _PORTA	set	5
   292     0091                     _SSPCON2bits	set	145
   293     0093                     _SSPADD	set	147
   294     0091                     _SSPCON2	set	145
   295     0094                     _SSPSTAT	set	148
   296     0087                     _TRISCbits	set	135
   297     0088                     _TRISDbits	set	136
   298     0085                     _TRISA	set	133
   299     008F                     _OSCCONbits	set	143
   300     0189                     _ANSELH	set	393
   301     0188                     _ANSEL	set	392
   302                           
   303                           	psect	cinit
   304     07FA                     start_initialization:	
   305                           ; #config settings
   306                           
   307     07FA                     __initialization:
   308                           
   309                           ; Clear objects allocated to COMMON
   310     07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   311     07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   312     07FC                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315     07FC                     __end_of__initialization:
   316     07FC  0183               	clrf	3
   317     07FD  120A  118A  2FB4   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320     0070                     __pbssCOMMON:
   321     0070                     _dato_rx:
   322     0070                     	ds	1
   323     0071                     _dato_tx:
   324     0071                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327     0072                     __pcstackCOMMON:
   328     0072                     ?_setupINTOSC:
   329     0072                     ?_I2C_Start:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0072                     ??_I2C_Start:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0072                     ??_I2C_Write:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0072                     ?_I2C_Stop:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0072                     ??_I2C_Stop:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0072                     ?_I2C_Read:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0072                     ??_I2C_Read:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0072                     ?_I2C_Init_Master:	
   351                           ; 1 bytes @ 0x0
   352                           
   353     0072                     ??_I2C_Init_Master:	
   354                           ; 1 bytes @ 0x0
   355                           
   356     0072                     ?_main:	
   357                           ; 1 bytes @ 0x0
   358                           
   359     0072                     ?_I2C_Write:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0072                     I2C_Init_Master@sp_i2c:	
   363                           ; 2 bytes @ 0x0
   364                           
   365     0072                     I2C_Write@data:	
   366                           ; 1 bytes @ 0x0
   367                           
   368                           
   369                           ; 1 bytes @ 0x0
   370     0072                     	ds	1
   371     0073                     ??_setupINTOSC:
   372     0073                     ??_main:	
   373                           ; 1 bytes @ 0x1
   374                           
   375                           
   376                           ; 1 bytes @ 0x1
   377     0073                     	ds	1
   378                           
   379                           	psect	maintext
   380     07B4                     __pmaintext:	
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   383 ;;
   384 ;; *************** function _main *****************
   385 ;; Defined at:
   386 ;;		line 46 in file "maestro.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : B00/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0
   402 ;;      Temps:          1       0       0       0       0
   403 ;;      Totals:         1       0       0       0       0
   404 ;;Total ram usage:        1 bytes
   405 ;; Hardware stack levels required when called: 2
   406 ;; This function calls:
   407 ;;		_I2C_Read
   408 ;;		_I2C_Start
   409 ;;		_I2C_Stop
   410 ;;		_I2C_Write
   411 ;;		_setupINTOSC
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417     07B4                     _main:	
   418                           ;psect for function _main
   419                           
   420     07B4                     l747:	
   421                           ;incstack = 0
   422                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   423                           
   424                           
   425                           ;maestro.c: 47:     setupINTOSC();
   426     07B4  120A  118A  2779  120A  118A  	fcall	_setupINTOSC
   427     07B9                     l749:
   428                           
   429                           ;maestro.c: 49:     {;maestro.c: 51:         dato_tx = PORTA & 0x0F;
   430     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   431     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   432     07BB  0805               	movf	5,w	;volatile
   433     07BC  390F               	andlw	15
   434     07BD  00F1               	movwf	_dato_tx
   435     07BE                     l751:
   436                           
   437                           ;maestro.c: 52:         I2C_Start();
   438     07BE  120A  118A  274C  120A  118A  	fcall	_I2C_Start
   439     07C3                     l753:
   440                           
   441                           ;maestro.c: 53:         I2C_Write(0xA0);
   442     07C3  30A0               	movlw	160
   443     07C4  120A  118A  276B  120A  118A  	fcall	_I2C_Write
   444     07C9                     l755:
   445                           
   446                           ;maestro.c: 54:         I2C_Write(dato_tx);
   447     07C9  0871               	movf	_dato_tx,w
   448     07CA  120A  118A  276B  120A  118A  	fcall	_I2C_Write
   449     07CF                     l757:
   450                           
   451                           ;maestro.c: 55:         I2C_Stop();
   452     07CF  120A  118A  2756  120A  118A  	fcall	_I2C_Stop
   453     07D4                     l759:
   454                           
   455                           ;maestro.c: 56:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   456     07D4  3003               	movlw	3
   457     07D5  00F3               	movwf	??_main
   458     07D6                     u107:
   459     07D6  0BF3               	decfsz	??_main,f
   460     07D7  2FD6               	goto	u107
   461     07D8                     l761:
   462                           
   463                           ;maestro.c: 59:         I2C_Start();
   464     07D8  120A  118A  274C  120A  118A  	fcall	_I2C_Start
   465     07DD                     l763:
   466                           
   467                           ;maestro.c: 60:         I2C_Write(0xA0 | 1);
   468     07DD  30A1               	movlw	161
   469     07DE  120A  118A  276B  120A  118A  	fcall	_I2C_Write
   470     07E3                     l765:
   471                           
   472                           ;maestro.c: 61:         dato_rx = I2C_Read();
   473     07E3  120A  118A  2760  120A  118A  	fcall	_I2C_Read
   474     07E8  00F0               	movwf	_dato_rx
   475     07E9                     l767:
   476                           
   477                           ;maestro.c: 62:         PORTD = dato_rx;
   478     07E9  0870               	movf	_dato_rx,w
   479     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   480     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   481     07EC  0088               	movwf	8	;volatile
   482     07ED                     l769:
   483                           
   484                           ;maestro.c: 63:         I2C_Stop();
   485     07ED  120A  118A  2756  120A  118A  	fcall	_I2C_Stop
   486     07F2                     l771:
   487                           
   488                           ;maestro.c: 64:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   489     07F2  3003               	movlw	3
   490     07F3  00F3               	movwf	??_main
   491     07F4                     u117:
   492     07F4  0BF3               	decfsz	??_main,f
   493     07F5  2FF4               	goto	u117
   494     07F6  2FB9               	goto	l749
   495     07F7  120A  118A  2800   	ljmp	start
   496     07FA                     __end_of_main:
   497                           
   498                           	psect	text1
   499     0779                     __ptext1:	
   500 ;; *************** function _setupINTOSC *****************
   501 ;; Defined at:
   502 ;;		line 73 in file "maestro.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, pclath, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         0       0       0       0       0
   520 ;;Total ram usage:        0 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; Hardware stack levels required when called: 1
   523 ;; This function calls:
   524 ;;		_I2C_Init_Master
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530     0779                     _setupINTOSC:	
   531                           ;psect for function _setupINTOSC
   532                           
   533     0779                     l713:	
   534                           ;incstack = 0
   535                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0+pclath+cstack]
   536                           
   537                           
   538                           ;maestro.c: 75:     OSCCONbits.SCS = 1;
   539     0779  1683               	bsf	3,5	;RP0=1, select bank1
   540     077A  1303               	bcf	3,6	;RP1=0, select bank1
   541     077B  140F               	bsf	15,0	;volatile
   542                           
   543                           ;maestro.c: 78:     OSCCONbits.IRCF2 = 1;
   544     077C  170F               	bsf	15,6	;volatile
   545                           
   546                           ;maestro.c: 79:     OSCCONbits.IRCF1 = 1;
   547     077D  168F               	bsf	15,5	;volatile
   548                           
   549                           ;maestro.c: 80:     OSCCONbits.IRCF0 = 0;
   550     077E  120F               	bcf	15,4	;volatile
   551     077F                     l715:
   552                           
   553                           ;maestro.c: 83:     ANSEL = 0;
   554     077F  1683               	bsf	3,5	;RP0=1, select bank3
   555     0780  1703               	bsf	3,6	;RP1=1, select bank3
   556     0781  0188               	clrf	8	;volatile
   557                           
   558                           ;maestro.c: 84:     ANSELH = 0;
   559     0782  0189               	clrf	9	;volatile
   560     0783                     l717:
   561                           
   562                           ;maestro.c: 87:     TRISA = 0xFF;
   563     0783  30FF               	movlw	255
   564     0784  1683               	bsf	3,5	;RP0=1, select bank1
   565     0785  1303               	bcf	3,6	;RP1=0, select bank1
   566     0786  0085               	movwf	5	;volatile
   567     0787                     l719:
   568                           
   569                           ;maestro.c: 88:     TRISDbits.TRISD0 = 0;
   570     0787  1008               	bcf	8,0	;volatile
   571     0788                     l721:
   572                           
   573                           ;maestro.c: 89:     TRISDbits.TRISD1 = 0;
   574     0788  1088               	bcf	8,1	;volatile
   575     0789                     l723:
   576                           
   577                           ;maestro.c: 90:     TRISDbits.TRISD2 = 0;
   578     0789  1108               	bcf	8,2	;volatile
   579     078A                     l725:
   580                           
   581                           ;maestro.c: 91:     TRISDbits.TRISD3 = 0;
   582     078A  1188               	bcf	8,3	;volatile
   583     078B                     l727:
   584                           
   585                           ;maestro.c: 92:     PORTD = 0x00;
   586     078B  1283               	bcf	3,5	;RP0=0, select bank0
   587     078C  1303               	bcf	3,6	;RP1=0, select bank0
   588     078D  0188               	clrf	8	;volatile
   589     078E                     l729:
   590                           
   591                           ;maestro.c: 95:     I2C_Init_Master(0x80);
   592     078E  3080               	movlw	128
   593     078F  120A  118A  2795  120A  118A  	fcall	_I2C_Init_Master
   594     0794                     l43:
   595     0794  0008               	return
   596     0795                     __end_of_setupINTOSC:
   597                           
   598                           	psect	text2
   599     0795                     __ptext2:	
   600 ;; *************** function _I2C_Init_Master *****************
   601 ;; Defined at:
   602 ;;		line 5 in file "i2c.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  sp_i2c          1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  sp_i2c          1    0[COMMON] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         1       0       0       0       0
   620 ;;Total ram usage:        1 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_setupINTOSC
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629     0795                     _I2C_Init_Master:	
   630                           ;psect for function _I2C_Init_Master
   631                           
   632                           
   633                           ;incstack = 0
   634                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
   635                           ;I2C_Init_Master@sp_i2c stored from wreg
   636     0795  00F2               	movwf	I2C_Init_Master@sp_i2c
   637     0796                     l699:
   638                           
   639                           ;i2c.c: 5: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 6: {;i2c.c: 7:     TRISCbit
      +                          s.TRISC3 = 1;
   640     0796  1683               	bsf	3,5	;RP0=1, select bank1
   641     0797  1303               	bcf	3,6	;RP1=0, select bank1
   642     0798  1587               	bsf	7,3	;volatile
   643                           
   644                           ;i2c.c: 8:     TRISCbits.TRISC4 = 1;
   645     0799  1607               	bsf	7,4	;volatile
   646     079A                     l701:
   647                           
   648                           ;i2c.c: 9:     SSPSTAT = sp_i2c;
   649     079A  0872               	movf	I2C_Init_Master@sp_i2c,w
   650     079B  0094               	movwf	20	;volatile
   651                           
   652                           ;i2c.c: 10:  SSPCON = 0x28;
   653     079C  3028               	movlw	40
   654     079D  1283               	bcf	3,5	;RP0=0, select bank0
   655     079E  1303               	bcf	3,6	;RP1=0, select bank0
   656     079F  0094               	movwf	20	;volatile
   657     07A0                     l703:
   658                           
   659                           ;i2c.c: 11:     SSPCON2 = 0x00;
   660     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   661     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   662     07A2  0191               	clrf	17	;volatile
   663     07A3                     l705:
   664                           
   665                           ;i2c.c: 12:     if(sp_i2c == 0x80){
   666     07A3  3080               	movlw	128
   667     07A4  0672               	xorwf	I2C_Init_Master@sp_i2c,w
   668     07A5  1D03               	btfss	3,2
   669     07A6  2FA8               	goto	u11
   670     07A7  2FA9               	goto	u10
   671     07A8                     u11:
   672     07A8  2FAC               	goto	l709
   673     07A9                     u10:
   674     07A9                     l707:
   675                           
   676                           ;i2c.c: 13:         SSPADD = 119;
   677     07A9  3077               	movlw	119
   678     07AA  0093               	movwf	19	;volatile
   679                           
   680                           ;i2c.c: 14:     }
   681     07AB  2FB3               	goto	l65
   682     07AC                     l709:
   683     07AC  0872               	movf	I2C_Init_Master@sp_i2c,w
   684     07AD  1D03               	btfss	3,2
   685     07AE  2FB0               	goto	u21
   686     07AF  2FB1               	goto	u20
   687     07B0                     u21:
   688     07B0  2FB3               	goto	l65
   689     07B1                     u20:
   690     07B1                     l711:
   691                           
   692                           ;i2c.c: 16:         SSPADD = 29;
   693     07B1  301D               	movlw	29
   694     07B2  0093               	movwf	19	;volatile
   695     07B3                     l65:
   696     07B3  0008               	return
   697     07B4                     __end_of_I2C_Init_Master:
   698                           
   699                           	psect	text3
   700     076B                     __ptext3:	
   701 ;; *************** function _I2C_Write *****************
   702 ;; Defined at:
   703 ;;		line 57 in file "i2c.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  data            1    wreg     unsigned char 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  data            1    0[COMMON] unsigned char 
   708 ;;  b_ok            2    0        short 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  2    8[None  ] short 
   711 ;; Registers used:
   712 ;;		wreg
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         0       0       0       0       0
   719 ;;      Locals:         1       0       0       0       0
   720 ;;      Temps:          0       0       0       0       0
   721 ;;      Totals:         1       0       0       0       0
   722 ;;Total ram usage:        1 bytes
   723 ;; Hardware stack levels used: 1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731     076B                     _I2C_Write:	
   732                           ;psect for function _I2C_Write
   733                           
   734                           
   735                           ;incstack = 0
   736                           ; Regs used in _I2C_Write: [wreg]
   737                           ;I2C_Write@data stored from wreg
   738     076B  00F2               	movwf	I2C_Write@data
   739     076C                     l733:
   740                           
   741                           ;i2c.c: 57: short I2C_Write(char data);i2c.c: 58: {;i2c.c: 59:     SSPBUF = data;
   742     076C  0872               	movf	I2C_Write@data,w
   743     076D  1283               	bcf	3,5	;RP0=0, select bank0
   744     076E  1303               	bcf	3,6	;RP1=0, select bank0
   745     076F  0093               	movwf	19	;volatile
   746     0770                     l98:	
   747                           ;i2c.c: 60:     while(PIR1bits.SSPIF == 0);
   748                           
   749     0770  1D8C               	btfss	12,3	;volatile
   750     0771  2F73               	goto	u41
   751     0772  2F74               	goto	u40
   752     0773                     u41:
   753     0773  2F70               	goto	l98
   754     0774                     u40:
   755     0774                     l100:
   756                           
   757                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
   758     0774  118C               	bcf	12,3	;volatile
   759     0775                     l735:
   760     0775  1683               	bsf	3,5	;RP0=1, select bank1
   761     0776  1303               	bcf	3,6	;RP1=0, select bank1
   762     0777  0811               	movf	17,w	;volatile
   763     0778                     l101:
   764     0778  0008               	return
   765     0779                     __end_of_I2C_Write:
   766                           
   767                           	psect	text4
   768     0756                     __ptext4:	
   769 ;; *************** function _I2C_Stop *****************
   770 ;; Defined at:
   771 ;;		line 27 in file "i2c.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		None
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798     0756                     _I2C_Stop:	
   799                           ;psect for function _I2C_Stop
   800                           
   801     0756                     l739:	
   802                           ;incstack = 0
   803                           ; Regs used in _I2C_Stop: []
   804                           
   805                           
   806                           ;i2c.c: 29:     SSPCON2bits.PEN = 1;
   807     0756  1683               	bsf	3,5	;RP0=1, select bank1
   808     0757  1303               	bcf	3,6	;RP1=0, select bank1
   809     0758  1511               	bsf	17,2	;volatile
   810     0759                     l74:	
   811                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
   812                           
   813     0759  1283               	bcf	3,5	;RP0=0, select bank0
   814     075A  1D8C               	btfss	12,3	;volatile
   815     075B  2F5D               	goto	u51
   816     075C  2F5E               	goto	u50
   817     075D                     u51:
   818     075D  2F59               	goto	l74
   819     075E                     u50:
   820     075E                     l76:
   821                           
   822                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
   823     075E  118C               	bcf	12,3	;volatile
   824     075F                     l77:
   825     075F  0008               	return
   826     0760                     __end_of_I2C_Stop:
   827                           
   828                           	psect	text5
   829     074C                     __ptext5:	
   830 ;; *************** function _I2C_Start *****************
   831 ;; Defined at:
   832 ;;		line 20 in file "i2c.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		None
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0
   849 ;;      Totals:         0       0       0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859     074C                     _I2C_Start:	
   860                           ;psect for function _I2C_Start
   861                           
   862     074C                     l731:	
   863                           ;incstack = 0
   864                           ; Regs used in _I2C_Start: []
   865                           
   866                           
   867                           ;i2c.c: 22:     SSPCON2bits.SEN = 1;
   868     074C  1683               	bsf	3,5	;RP0=1, select bank1
   869     074D  1303               	bcf	3,6	;RP1=0, select bank1
   870     074E  1411               	bsf	17,0	;volatile
   871     074F                     l68:	
   872                           ;i2c.c: 23:     while(PIR1bits.SSPIF == 0);
   873                           
   874     074F  1283               	bcf	3,5	;RP0=0, select bank0
   875     0750  1D8C               	btfss	12,3	;volatile
   876     0751  2F53               	goto	u31
   877     0752  2F54               	goto	u30
   878     0753                     u31:
   879     0753  2F4F               	goto	l68
   880     0754                     u30:
   881     0754                     l70:
   882                           
   883                           ;i2c.c: 24:     PIR1bits.SSPIF = 0;
   884     0754  118C               	bcf	12,3	;volatile
   885     0755                     l71:
   886     0755  0008               	return
   887     0756                     __end_of_I2C_Start:
   888                           
   889                           	psect	text6
   890     0760                     __ptext6:	
   891 ;; *************** function _I2C_Read *****************
   892 ;; Defined at:
   893 ;;		line 66 in file "i2c.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      unsigned char 
   900 ;; Registers used:
   901 ;;		wreg
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0
   910 ;;      Totals:         0       0       0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920     0760                     _I2C_Read:	
   921                           ;psect for function _I2C_Read
   922                           
   923     0760                     l741:	
   924                           ;incstack = 0
   925                           ; Regs used in _I2C_Read: [wreg]
   926                           
   927                           
   928                           ;i2c.c: 68:     SSPCON2bits.RCEN = 1;
   929     0760  1683               	bsf	3,5	;RP0=1, select bank1
   930     0761  1303               	bcf	3,6	;RP1=0, select bank1
   931     0762  1591               	bsf	17,3	;volatile
   932     0763                     l104:	
   933                           ;i2c.c: 69:     while(PIR1bits.SSPIF == 0);
   934                           
   935     0763  1283               	bcf	3,5	;RP0=0, select bank0
   936     0764  1D8C               	btfss	12,3	;volatile
   937     0765  2F67               	goto	u61
   938     0766  2F68               	goto	u60
   939     0767                     u61:
   940     0767  2F63               	goto	l104
   941     0768                     u60:
   942     0768                     l106:
   943                           
   944                           ;i2c.c: 70:     PIR1bits.SSPIF = 0;
   945     0768  118C               	bcf	12,3	;volatile
   946     0769                     l743:
   947                           
   948                           ;i2c.c: 71:     return SSPBUF;
   949     0769  0813               	movf	19,w	;volatile
   950     076A                     l107:
   951     076A  0008               	return
   952     076B                     __end_of_I2C_Read:
   953     007E                     btemp	set	126	;btemp
   954     007E                     wtemp0	set	126
   955                           
   956                           	psect	idloc
   957                           
   958                           ;Config register IDLOC0 @ 0x2000
   959                           ;	unspecified, using default values
   960     2000                     	org	8192
   961     2000  3FFF               	dw	16383
   962                           
   963                           ;Config register IDLOC1 @ 0x2001
   964                           ;	unspecified, using default values
   965     2001                     	org	8193
   966     2001  3FFF               	dw	16383
   967                           
   968                           ;Config register IDLOC2 @ 0x2002
   969                           ;	unspecified, using default values
   970     2002                     	org	8194
   971     2002  3FFF               	dw	16383
   972                           
   973                           ;Config register IDLOC3 @ 0x2003
   974                           ;	unspecified, using default values
   975     2003                     	org	8195
   976     2003  3FFF               	dw	16383
   977                           
   978                           	psect	config
   979                           
   980                           ;Config register CONFIG1 @ 0x2007
   981                           ;	Oscillator Selection bits
   982                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   983                           ;	Watchdog Timer Enable bit
   984                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   985                           ;	Power-up Timer Enable bit
   986                           ;	PWRTE = OFF, PWRT disabled
   987                           ;	RE3/MCLR pin function select bit
   988                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   989                           ;	Code Protection bit
   990                           ;	CP = OFF, Program memory code protection is disabled
   991                           ;	Data Code Protection bit
   992                           ;	CPD = OFF, Data memory code protection is disabled
   993                           ;	Brown Out Reset Selection bits
   994                           ;	BOREN = OFF, BOR disabled
   995                           ;	Internal External Switchover bit
   996                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   997                           ;	Fail-Safe Clock Monitor Enabled bit
   998                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   999                           ;	Low Voltage Programming Enable bit
  1000                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1001                           ;	In-Circuit Debugger Mode bit
  1002                           ;	DEBUG = 0x1, unprogramme  1003     2007                     	org	8199
  1004     2007  20D4               	dw	8404
  1005                           
  1006                           ;Config register CONFIG2 @ 0x2008
  1007                           ;	Brown-out Reset Selection bit
  1008                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1009                           ;	Flash Program Memory Self Write Enable bits
  1010                           ;	WRT = OFF, Write protection off
  1011     2008                     	org	8200
  1012     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Write
    _setupINTOSC->_I2C_Init_Master

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      65
                                              1 COMMON     1     1      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          0     0      0      45
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      45
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            3     3      0      20
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _setupINTOSC
     _I2C_Init_Master

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 09 11:40:37 2023

                     l43 0794                       l70 0754                       l71 0755  
                     l65 07B3                       l74 0759                       l68 074F  
                     l76 075E                       l77 075F                       l98 0770  
                     u10 07A9                       u11 07A8                       u20 07B1  
                     u21 07B0                       u30 0754                       u31 0753  
                     u40 0774                       u41 0773                       u50 075E  
                     u51 075D                       u60 0768                       u61 0767  
                    l100 0774                      l101 0778                      l104 0763  
                    l106 0768                      l107 076A                      l701 079A  
                    l711 07B1                      l703 07A0                      l705 07A3  
                    l721 0788                      l713 0779                      l731 074C  
                    l707 07A9                      l723 0789                      l715 077F  
                    l741 0760                      l733 076C                      l709 07AC  
                    l725 078A                      l717 0783                      l743 0769  
                    l735 0775                      l727 078B                      l719 0787  
                    l751 07BE                      l729 078E                      l761 07D8  
                    l753 07C3                      l739 0756                      l771 07F2  
                    l763 07DD                      l755 07C9                      l747 07B4  
                    l765 07E3                      l757 07CF                      l749 07B9  
                    l767 07E9                      l759 07D4                      l769 07ED  
                    l699 0796                      u107 07D6                      u117 07F4  
                   _main 07B4         __end_of_I2C_Read 076B                     btemp 007E  
       __end_of_I2C_Stop 0760                     start 0000         ?_I2C_Init_Master 0072  
                  ?_main 0072                    _ANSEL 0188                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085        __end_of_I2C_Start 0756  
      __end_of_I2C_Write 0779                    status 0003                    wtemp0 007E  
        __initialization 07FA             __end_of_main 07FA                   ??_main 0073  
                 _ANSELH 0189                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013             ?_setupINTOSC 0072                ?_I2C_Read 0072  
              ?_I2C_Stop 0072  __end_of__initialization 07FC           __pcstackCOMMON 0072  
             ??_I2C_Read 0072               ??_I2C_Stop 0072               __pmaintext 07B4  
                _SSPCON2 0091                  _SSPSTAT 0094                _I2C_Start 074C  
              _I2C_Write 076B                  _dato_rx 0070                  _dato_tx 0071  
                __ptext1 0779                  __ptext2 0795                  __ptext3 076B  
                __ptext4 0756                  __ptext5 074C                  __ptext6 0760  
   end_of_initialization 07FC               ?_I2C_Start 0072               ?_I2C_Write 0072  
              _TRISCbits 0087                _TRISDbits 0088      start_initialization 07FA  
      ??_I2C_Init_Master 0072    I2C_Init_Master@sp_i2c 0072              ??_I2C_Start 0072  
            ??_I2C_Write 0072              __pbssCOMMON 0070                ___latbits 0002  
               _I2C_Read 0760                 _I2C_Stop 0756                 _PIR1bits 000C  
          ??_setupINTOSC 0073          _I2C_Init_Master 0795            I2C_Write@data 0072  
    __end_of_setupINTOSC 0795  __end_of_I2C_Init_Master 07B4               _OSCCONbits 008F  
            _setupINTOSC 0779              _SSPCON2bits 0091  
