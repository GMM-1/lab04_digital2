

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 12 19:35:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     008F                     	;# 
   126     0090                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0093                     	;# 
   132     0094                     	;# 
   133     0095                     	;# 
   134     0096                     	;# 
   135     0097                     	;# 
   136     0098                     	;# 
   137     0099                     	;# 
   138     009A                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     009F                     	;# 
   144     0105                     	;# 
   145     0107                     	;# 
   146     0108                     	;# 
   147     0109                     	;# 
   148     010C                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     0185                     	;# 
   154     0187                     	;# 
   155     0188                     	;# 
   156     0189                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     0000                     	;# 
   160     0001                     	;# 
   161     0002                     	;# 
   162     0003                     	;# 
   163     0004                     	;# 
   164     0005                     	;# 
   165     0006                     	;# 
   166     0007                     	;# 
   167     0008                     	;# 
   168     0009                     	;# 
   169     000A                     	;# 
   170     000B                     	;# 
   171     000C                     	;# 
   172     000D                     	;# 
   173     000E                     	;# 
   174     000E                     	;# 
   175     000F                     	;# 
   176     0010                     	;# 
   177     0011                     	;# 
   178     0012                     	;# 
   179     0013                     	;# 
   180     0014                     	;# 
   181     0015                     	;# 
   182     0015                     	;# 
   183     0016                     	;# 
   184     0017                     	;# 
   185     0018                     	;# 
   186     0019                     	;# 
   187     001A                     	;# 
   188     001B                     	;# 
   189     001B                     	;# 
   190     001C                     	;# 
   191     001D                     	;# 
   192     001E                     	;# 
   193     001F                     	;# 
   194     0081                     	;# 
   195     0085                     	;# 
   196     0086                     	;# 
   197     0087                     	;# 
   198     0088                     	;# 
   199     0089                     	;# 
   200     008C                     	;# 
   201     008D                     	;# 
   202     008E                     	;# 
   203     008F                     	;# 
   204     0090                     	;# 
   205     0091                     	;# 
   206     0092                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0093                     	;# 
   210     0094                     	;# 
   211     0095                     	;# 
   212     0096                     	;# 
   213     0097                     	;# 
   214     0098                     	;# 
   215     0099                     	;# 
   216     009A                     	;# 
   217     009B                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     0105                     	;# 
   223     0107                     	;# 
   224     0108                     	;# 
   225     0109                     	;# 
   226     010C                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     0185                     	;# 
   232     0187                     	;# 
   233     0188                     	;# 
   234     0189                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     008F                     	;# 
   282     0090                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0093                     	;# 
   288     0094                     	;# 
   289     0095                     	;# 
   290     0096                     	;# 
   291     0097                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009A                     	;# 
   295     009B                     	;# 
   296     009C                     	;# 
   297     009D                     	;# 
   298     009E                     	;# 
   299     009F                     	;# 
   300     0105                     	;# 
   301     0107                     	;# 
   302     0108                     	;# 
   303     0109                     	;# 
   304     010C                     	;# 
   305     010C                     	;# 
   306     010D                     	;# 
   307     010E                     	;# 
   308     010F                     	;# 
   309     0185                     	;# 
   310     0187                     	;# 
   311     0188                     	;# 
   312     0189                     	;# 
   313     018C                     	;# 
   314     018D                     	;# 
   315     0000                     	;# 
   316     0001                     	;# 
   317     0002                     	;# 
   318     0003                     	;# 
   319     0004                     	;# 
   320     0005                     	;# 
   321     0006                     	;# 
   322     0007                     	;# 
   323     0008                     	;# 
   324     0009                     	;# 
   325     000A                     	;# 
   326     000B                     	;# 
   327     000C                     	;# 
   328     000D                     	;# 
   329     000E                     	;# 
   330     000E                     	;# 
   331     000F                     	;# 
   332     0010                     	;# 
   333     0011                     	;# 
   334     0012                     	;# 
   335     0013                     	;# 
   336     0014                     	;# 
   337     0015                     	;# 
   338     0015                     	;# 
   339     0016                     	;# 
   340     0017                     	;# 
   341     0018                     	;# 
   342     0019                     	;# 
   343     001A                     	;# 
   344     001B                     	;# 
   345     001B                     	;# 
   346     001C                     	;# 
   347     001D                     	;# 
   348     001E                     	;# 
   349     001F                     	;# 
   350     0081                     	;# 
   351     0085                     	;# 
   352     0086                     	;# 
   353     0087                     	;# 
   354     0088                     	;# 
   355     0089                     	;# 
   356     008C                     	;# 
   357     008D                     	;# 
   358     008E                     	;# 
   359     008F                     	;# 
   360     0090                     	;# 
   361     0091                     	;# 
   362     0092                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0093                     	;# 
   366     0094                     	;# 
   367     0095                     	;# 
   368     0096                     	;# 
   369     0097                     	;# 
   370     0098                     	;# 
   371     0099                     	;# 
   372     009A                     	;# 
   373     009B                     	;# 
   374     009C                     	;# 
   375     009D                     	;# 
   376     009E                     	;# 
   377     009F                     	;# 
   378     0105                     	;# 
   379     0107                     	;# 
   380     0108                     	;# 
   381     0109                     	;# 
   382     010C                     	;# 
   383     010C                     	;# 
   384     010D                     	;# 
   385     010E                     	;# 
   386     010F                     	;# 
   387     0185                     	;# 
   388     0187                     	;# 
   389     0188                     	;# 
   390     0189                     	;# 
   391     018C                     	;# 
   392     018D                     	;# 
   393     0000                     	;# 
   394     0001                     	;# 
   395     0002                     	;# 
   396     0003                     	;# 
   397     0004                     	;# 
   398     0005                     	;# 
   399     0006                     	;# 
   400     0007                     	;# 
   401     0008                     	;# 
   402     0009                     	;# 
   403     000A                     	;# 
   404     000B                     	;# 
   405     000C                     	;# 
   406     000D                     	;# 
   407     000E                     	;# 
   408     000E                     	;# 
   409     000F                     	;# 
   410     0010                     	;# 
   411     0011                     	;# 
   412     0012                     	;# 
   413     0013                     	;# 
   414     0014                     	;# 
   415     0015                     	;# 
   416     0015                     	;# 
   417     0016                     	;# 
   418     0017                     	;# 
   419     0018                     	;# 
   420     0019                     	;# 
   421     001A                     	;# 
   422     001B                     	;# 
   423     001B                     	;# 
   424     001C                     	;# 
   425     001D                     	;# 
   426     001E                     	;# 
   427     001F                     	;# 
   428     0081                     	;# 
   429     0085                     	;# 
   430     0086                     	;# 
   431     0087                     	;# 
   432     0088                     	;# 
   433     0089                     	;# 
   434     008C                     	;# 
   435     008D                     	;# 
   436     008E                     	;# 
   437     008F                     	;# 
   438     0090                     	;# 
   439     0091                     	;# 
   440     0092                     	;# 
   441     0093                     	;# 
   442     0093                     	;# 
   443     0093                     	;# 
   444     0094                     	;# 
   445     0095                     	;# 
   446     0096                     	;# 
   447     0097                     	;# 
   448     0098                     	;# 
   449     0099                     	;# 
   450     009A                     	;# 
   451     009B                     	;# 
   452     009C                     	;# 
   453     009D                     	;# 
   454     009E                     	;# 
   455     009F                     	;# 
   456     0105                     	;# 
   457     0107                     	;# 
   458     0108                     	;# 
   459     0109                     	;# 
   460     010C                     	;# 
   461     010C                     	;# 
   462     010D                     	;# 
   463     010E                     	;# 
   464     010F                     	;# 
   465     0185                     	;# 
   466     0187                     	;# 
   467     0188                     	;# 
   468     0189                     	;# 
   469     018C                     	;# 
   470     018D                     	;# 
   471                           
   472                           	psect	idataBANK1
   473     00EE                     __pidataBANK1:
   474                           
   475                           ;initializer for _dw
   476     00EE  3444               	retlw	68
   477     00EF  346F               	retlw	111
   478     00F0  346D               	retlw	109
   479     00F1  3469               	retlw	105
   480     00F2  346E               	retlw	110
   481     00F3  3467               	retlw	103
   482     00F4  346F               	retlw	111
   483     00F5  3400               	retlw	0
   484     00F6  3400               	retlw	0
   485     00F7  3400               	retlw	0
   486     00F8  3400               	retlw	0
   487     00F9  344C               	retlw	76
   488     00FA  3475               	retlw	117
   489     00FB  346E               	retlw	110
   490     00FC  3465               	retlw	101
   491     00FD  3473               	retlw	115
   492     00FE  3400               	retlw	0
   493     00FF  3400               	retlw	0
   494     0100  3400               	retlw	0
   495     0101  3400               	retlw	0
   496     0102  3400               	retlw	0
   497     0103  3400               	retlw	0
   498     0104  344D               	retlw	77
   499     0105  3461               	retlw	97
   500     0106  3472               	retlw	114
   501     0107  3474               	retlw	116
   502     0108  3465               	retlw	101
   503     0109  3473               	retlw	115
   504     010A  3400               	retlw	0
   505     010B  3400               	retlw	0
   506     010C  3400               	retlw	0
   507     010D  3400               	retlw	0
   508     010E  3400               	retlw	0
   509     010F  344D               	retlw	77
   510     0110  3469               	retlw	105
   511     0111  3465               	retlw	101
   512     0112  3472               	retlw	114
   513     0113  3463               	retlw	99
   514     0114  346F               	retlw	111
   515     0115  346C               	retlw	108
   516     0116  3465               	retlw	101
   517     0117  3473               	retlw	115
   518     0118  3400               	retlw	0
   519     0119  3400               	retlw	0
   520     011A  344A               	retlw	74
   521     011B  3475               	retlw	117
   522     011C  3465               	retlw	101
   523     011D  3476               	retlw	118
   524     011E  3465               	retlw	101
   525     011F  3473               	retlw	115
   526     0120  3400               	retlw	0
   527     0121  3400               	retlw	0
   528     0122  3400               	retlw	0
   529     0123  3400               	retlw	0
   530     0124  3400               	retlw	0
   531     0125  3456               	retlw	86
   532     0126  3469               	retlw	105
   533     0127  3465               	retlw	101
   534     0128  3472               	retlw	114
   535     0129  346E               	retlw	110
   536     012A  3465               	retlw	101
   537     012B  3473               	retlw	115
   538     012C  3400               	retlw	0
   539     012D  3400               	retlw	0
   540     012E  3400               	retlw	0
   541     012F  3400               	retlw	0
   542     0130  3453               	retlw	83
   543     0131  3461               	retlw	97
   544     0132  3462               	retlw	98
   545     0133  3461               	retlw	97
   546     0134  3464               	retlw	100
   547     0135  346F               	retlw	111
   548     0136  3400               	retlw	0
   549     0137  3400               	retlw	0
   550     0138  3400               	retlw	0
   551     0139  3400               	retlw	0
   552     013A  3400               	retlw	0
   553                           
   554                           	psect	strings
   555     0003                     __pstrings:
   556     0003                     stringtab:
   557     0003                     __stringtab:
   558                           
   559                           ;	String table - string pointers are 1 byte each
   560     0003  1BFF               	btfsc	btemp+1,7
   561     0004  280D               	ljmp	stringcode
   562     0005  1383               	bcf	3,7
   563     0006  187F               	btfsc	btemp+1,0
   564     0007  1783               	bsf	3,7
   565     0008  0800               	movf	0,w
   566     0009  0A84               	incf	4,f
   567     000A  1903               	skipnz
   568     000B  0AFF               	incf	btemp+1,f
   569     000C  0008               	return
   570     000D                     stringcode:
   571     000D                     stringdir:
   572     000D  3000               	movlw	high stringdir
   573     000E  008A               	movwf	10
   574     000F  0804               	movf	4,w
   575     0010  0A84               	incf	4,f
   576     0011  0782               	addwf	2,f
   577     0012                     __stringbase:
   578     0012  3400               	retlw	0
   579     0013                     __end_of__stringtab:
   580     0013                     _dpowers:
   581     0013  3401               	retlw	1
   582     0014  3400               	retlw	0
   583     0015  340A               	retlw	10
   584     0016  3400               	retlw	0
   585     0017  3464               	retlw	100
   586     0018  3400               	retlw	0
   587     0019  34E8               	retlw	232
   588     001A  3403               	retlw	3
   589     001B  3410               	retlw	16
   590     001C  3427               	retlw	39
   591     001D                     __end_of_dpowers:
   592     0008                     _PORTDbits	set	8
   593     0006                     _PORTBbits	set	6
   594     0013                     _SSPBUF	set	19
   595     000C                     _PIR1bits	set	12
   596     0014                     _SSPCON	set	20
   597     0005                     _PORTA	set	5
   598     0008                     _PORTD	set	8
   599     0006                     _PORTB	set	6
   600     0005                     _PORTAbits	set	5
   601     0091                     _SSPCON2bits	set	145
   602     0093                     _SSPADD	set	147
   603     0091                     _SSPCON2	set	145
   604     0094                     _SSPSTAT	set	148
   605     0087                     _TRISCbits	set	135
   606     008F                     _OSCCONbits	set	143
   607     0088                     _TRISD	set	136
   608     0086                     _TRISB	set	134
   609     0085                     _TRISAbits	set	133
   610     0189                     _ANSELH	set	393
   611     0188                     _ANSEL	set	392
   612     001D                     STR_11:
   613     001D  346D               	retlw	109	;'m'
   614     001E  3469               	retlw	105	;'i'
   615     001F  346E               	retlw	110	;'n'
   616     0020  3475               	retlw	117	;'u'
   617     0021  3474               	retlw	116	;'t'
   618     0022  346F               	retlw	111	;'o'
   619     0023  3473               	retlw	115	;'s'
   620     0024  3475               	retlw	117	;'u'
   621     0025  3474               	retlw	116	;'t'
   622     0026  346F               	retlw	111	;'o'
   623     0027  343A               	retlw	58	;':'
   624     0028  3420               	retlw	32	;' '
   625     0029  3425               	retlw	37	;'%'
   626     002A  3430               	retlw	48	;'0'
   627     002B  3432               	retlw	50	;'2'
   628     002C  3475               	retlw	117	;'u'
   629     002D  3400               	retlw	0
   630     002E                     STR_3:
   631     002E  3425               	retlw	37	;'%'
   632     002F  3430               	retlw	48	;'0'
   633     0030  3432               	retlw	50	;'2'
   634     0031  3475               	retlw	117	;'u'
   635     0032  342F               	retlw	47	;'/'
   636     0033  3425               	retlw	37	;'%'
   637     0034  3430               	retlw	48	;'0'
   638     0035  3432               	retlw	50	;'2'
   639     0036  3475               	retlw	117	;'u'
   640     0037  342F               	retlw	47	;'/'
   641     0038  3432               	retlw	50	;'2'
   642     0039  3430               	retlw	48	;'0'
   643     003A  3425               	retlw	37	;'%'
   644     003B  3430               	retlw	48	;'0'
   645     003C  3432               	retlw	50	;'2'
   646     003D  3475               	retlw	117	;'u'
   647     003E  3400               	retlw	0
   648     003F                     STR_8:
   649     003F  3444               	retlw	68	;'D'
   650     0040  3469               	retlw	105	;'i'
   651     0041  3461               	retlw	97	;'a'
   652     0042  3420               	retlw	32	;' '
   653     0043  3473               	retlw	115	;'s'
   654     0044  3465               	retlw	101	;'e'
   655     0045  346D               	retlw	109	;'m'
   656     0046  3461               	retlw	97	;'a'
   657     0047  346E               	retlw	110	;'n'
   658     0048  3461               	retlw	97	;'a'
   659     0049  343A               	retlw	58	;':'
   660     004A  3420               	retlw	32	;' '
   661     004B  3425               	retlw	37	;'%'
   662     004C  3475               	retlw	117	;'u'
   663     004D  3400               	retlw	0
   664     004E                     STR_4:
   665     004E  3425               	retlw	37	;'%'
   666     004F  3430               	retlw	48	;'0'
   667     0050  3432               	retlw	50	;'2'
   668     0051  3475               	retlw	117	;'u'
   669     0052  343A               	retlw	58	;':'
   670     0053  3425               	retlw	37	;'%'
   671     0054  3430               	retlw	48	;'0'
   672     0055  3432               	retlw	50	;'2'
   673     0056  3475               	retlw	117	;'u'
   674     0057  343A               	retlw	58	;':'
   675     0058  3425               	retlw	37	;'%'
   676     0059  3430               	retlw	48	;'0'
   677     005A  3432               	retlw	50	;'2'
   678     005B  3475               	retlw	117	;'u'
   679     005C  3400               	retlw	0
   680     005D                     STR_12:
   681     005D  3453               	retlw	83	;'S'
   682     005E  3465               	retlw	101	;'e'
   683     005F  3467               	retlw	103	;'g'
   684     0060  3475               	retlw	117	;'u'
   685     0061  346E               	retlw	110	;'n'
   686     0062  3464               	retlw	100	;'d'
   687     0063  346F               	retlw	111	;'o'
   688     0064  343A               	retlw	58	;':'
   689     0065  3420               	retlw	32	;' '
   690     0066  3425               	retlw	37	;'%'
   691     0067  3430               	retlw	48	;'0'
   692     0068  3432               	retlw	50	;'2'
   693     0069  3475               	retlw	117	;'u'
   694     006A  3400               	retlw	0
   695     006B                     STR_10:
   696     006B  3448               	retlw	72	;'H'
   697     006C  346F               	retlw	111	;'o'
   698     006D  3472               	retlw	114	;'r'
   699     006E  3461               	retlw	97	;'a'
   700     006F  343A               	retlw	58	;':'
   701     0070  3420               	retlw	32	;' '
   702     0071  3425               	retlw	37	;'%'
   703     0072  3430               	retlw	48	;'0'
   704     0073  3432               	retlw	50	;'2'
   705     0074  3475               	retlw	117	;'u'
   706     0075  3400               	retlw	0
   707     0076                     STR_7:
   708     0076  3441               	retlw	65	;'A'
   709     0077  344E               	retlw	78	;'N'
   710     0078  344F               	retlw	79	;'O'
   711     0079  343A               	retlw	58	;':'
   712     007A  3420               	retlw	32	;' '
   713     007B  3425               	retlw	37	;'%'
   714     007C  3430               	retlw	48	;'0'
   715     007D  3432               	retlw	50	;'2'
   716     007E  3475               	retlw	117	;'u'
   717     007F  3400               	retlw	0
   718     0080                     STR_5:
   719     0080  3444               	retlw	68	;'D'
   720     0081  3469               	retlw	105	;'i'
   721     0082  3461               	retlw	97	;'a'
   722     0083  343A               	retlw	58	;':'
   723     0084  3420               	retlw	32	;' '
   724     0085  3425               	retlw	37	;'%'
   725     0086  3430               	retlw	48	;'0'
   726     0087  3432               	retlw	50	;'2'
   727     0088  3475               	retlw	117	;'u'
   728     0089  3400               	retlw	0
   729     008A                     STR_6:
   730     008A  344D               	retlw	77	;'M'
   731     008B  3465               	retlw	101	;'e'
   732     008C  3473               	retlw	115	;'s'
   733     008D  343A               	retlw	58	;':'
   734     008E  3420               	retlw	32	;' '
   735     008F  3425               	retlw	37	;'%'
   736     0090  3430               	retlw	48	;'0'
   737     0091  3432               	retlw	50	;'2'
   738     0092  3475               	retlw	117	;'u'
   739     0093  3400               	retlw	0
   740     0094                     STR_14:
   741     0094  3428               	retlw	40	;'('
   742     0095  346E               	retlw	110	;'n'
   743     0096  3475               	retlw	117	;'u'
   744     0097  346C               	retlw	108	;'l'
   745     0098  346C               	retlw	108	;'l'
   746     0099  3429               	retlw	41	;')'
   747     009A  3400               	retlw	0
   748     009B                     STR_9:
   749     009B  3425               	retlw	37	;'%'
   750     009C  3473               	retlw	115	;'s'
   751     009D  3420               	retlw	32	;' '
   752     009E  3420               	retlw	32	;' '
   753     009F  3420               	retlw	32	;' '
   754     00A0  3420               	retlw	32	;' '
   755     00A1  3400               	retlw	0
   756     00A2                     STR_1:
   757     00A2  3441               	retlw	65	;'A'
   758     00A3  3444               	retlw	68	;'D'
   759     00A4  3443               	retlw	67	;'C'
   760     00A5  343A               	retlw	58	;':'
   761     00A6  3420               	retlw	32	;' '
   762     00A7  3400               	retlw	0
   763     00A8                     STR_2:
   764     00A8  3425               	retlw	37	;'%'
   765     00A9  3475               	retlw	117	;'u'
   766     00AA  3420               	retlw	32	;' '
   767     00AB  3400               	retlw	0
   768     00AC                     STR_13:
   769     00AC  3425               	retlw	37	;'%'
   770     00AD  3473               	retlw	115	;'s'
   771     00AE  3400               	retlw	0
   772                           
   773                           	psect	cinit
   774     07E6                     start_initialization:	
   775                           ; #config settings
   776                           
   777     07E6                     __initialization:
   778                           
   779                           ; Initialize objects allocated to BANK1
   780     07E6  1383               	bcf	3,7	;select IRP bank0
   781     07E7  30ED               	movlw	low (__pdataBANK1+77)
   782     07E8  00FD               	movwf	btemp+-1
   783     07E9  3000               	movlw	high __pidataBANK1
   784     07EA  00FE               	movwf	btemp
   785     07EB  30EE               	movlw	low __pidataBANK1
   786     07EC  00FF               	movwf	btemp+1
   787     07ED  30A0               	movlw	low __pdataBANK1
   788     07EE  0084               	movwf	4
   789     07EF  120A  158A  2510  120A  118A  	fcall	init_ram0
   790                           
   791                           ; Clear objects allocated to BANK0
   792     07F4  3020               	movlw	low __pbssBANK0
   793     07F5  0084               	movwf	4
   794     07F6  303D               	movlw	low (__pbssBANK0+29)
   795     07F7  120A  158A  24A3  120A  118A  	fcall	clear_ram0
   796     07FC                     end_of_initialization:	
   797                           ;End of C runtime variable initialization code
   798                           
   799     07FC                     __end_of__initialization:
   800     07FC  0183               	clrf	3
   801     07FD  120A  158A  2FB4   	ljmp	_main	;jump to C main() function
   802                           
   803                           	psect	bssBANK0
   804     0020                     __pbssBANK0:
   805     0020                     _segundos:
   806     0020                     	ds	1
   807     0021                     _minutos:
   808     0021                     	ds	1
   809     0022                     _horas:
   810     0022                     	ds	1
   811     0023                     _dow:
   812     0023                     	ds	1
   813     0024                     _ano:
   814     0024                     	ds	1
   815     0025                     _mes:
   816     0025                     	ds	1
   817     0026                     _dia:
   818     0026                     	ds	1
   819     0027                     _selector:
   820     0027                     	ds	1
   821     0028                     _valor_ADC:
   822     0028                     	ds	1
   823     0029                     _buffer:
   824     0029                     	ds	20
   825                           
   826                           	psect	dataBANK1
   827     00A0                     __pdataBANK1:
   828     00A0                     _dw:
   829     00A0                     	ds	77
   830                           
   831                           	psect	inittext
   832     0D0C                     init_fetch0:	
   833                           ;	Called with low address in FSR and high address in W
   834                           
   835     0D0C  087E               	movf	btemp,w
   836     0D0D  008A               	movwf	10
   837     0D0E  087F               	movf	btemp+1,w
   838     0D0F  0082               	movwf	2
   839     0D10                     init_ram0:	
   840                           ;Called with:
   841                           ;	high address of idata address in btemp 
   842                           ;	low address of idata address in btemp+1 
   843                           ;	low address of data in FSR
   844                           ;	high address + 1 of data in btemp-1
   845                           
   846     0D10  120A  158A  250C  120A  158A  	fcall	init_fetch0
   847     0D15  0080               	movwf	0
   848     0D16  0A84               	incf	4,f
   849     0D17  0804               	movf	4,w
   850     0D18  067D               	xorwf	btemp+-1,w
   851     0D19  1903               	btfsc	3,2
   852     0D1A  3400               	retlw	0
   853     0D1B  0AFF               	incf	btemp+1,f
   854     0D1C  1903               	btfsc	3,2
   855     0D1D  0AFE               	incf	btemp,f
   856     0D1E  2D10               	goto	init_ram0
   857                           
   858                           	psect	clrtext
   859     0CA3                     clear_ram0:	
   860                           ;	Called with FSR containing the base address, and
   861                           ;	W with the last address+1
   862                           
   863     0CA3  0064               	clrwdt	;clear the watchdog before getting into this loop
   864     0CA4                     clrloop0:
   865     0CA4  0180               	clrf	0	;clear RAM location pointed to by FSR
   866     0CA5  0A84               	incf	4,f	;increment pointer
   867     0CA6  0604               	xorwf	4,w	;XOR with final address
   868     0CA7  1903               	btfsc	3,2	;have we reached the end yet?
   869     0CA8  3400               	retlw	0	;all done for this memory range, return
   870     0CA9  0604               	xorwf	4,w	;XOR again to restore value
   871     0CAA  2CA4               	goto	clrloop0	;do the next byte
   872                           
   873                           	psect	cstackCOMMON
   874     0070                     __pcstackCOMMON:
   875     0070                     ?_isdigit:
   876     0070                     ?_setup:	
   877                           ; 1 bit 
   878                           
   879     0070                     ?_I2C_Start:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     ??_I2C_Start:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     ??_I2C_Write:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0070                     ?_I2C_Read:	
   889                           ; 1 bytes @ 0x0
   890                           
   891     0070                     ??_I2C_Read:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ?_I2C_Stop:	
   895                           ; 1 bytes @ 0x0
   896                           
   897     0070                     ??_I2C_Stop:	
   898                           ; 1 bytes @ 0x0
   899                           
   900     0070                     ?_Lcd_Clear:	
   901                           ; 1 bytes @ 0x0
   902                           
   903     0070                     ?_CLK_CONFIG:	
   904                           ; 1 bytes @ 0x0
   905                           
   906     0070                     ?_Lcd_Init:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0070                     ?_I2C_Init_Master:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0070                     ??_I2C_Init_Master:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     ?_DS3231_Bin_Bcd:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     ??_DS3231_Bin_Bcd:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0070                     ?_DS3231_Bcd_Bin:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ??_DS3231_Bcd_Bin:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ?_DS3231_Read:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0070                     ??_isdigit:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ?_main:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0070                     ?_I2C_Restart:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0070                     ??_I2C_Restart:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0070                     ?_I2C_Nack:	
   943                           ; 1 bytes @ 0x0
   944                           
   945     0070                     ??_I2C_Nack:	
   946                           ; 1 bytes @ 0x0
   947                           
   948     0070                     ?_Lcd_Port:	
   949                           ; 1 bytes @ 0x0
   950                           
   951     0070                     ??_Lcd_Port:	
   952                           ; 1 bytes @ 0x0
   953                           
   954     0070                     ?_Lcd_Cmd:	
   955                           ; 1 bytes @ 0x0
   956                           
   957     0070                     ?_Lcd_Write_Char:	
   958                           ; 1 bytes @ 0x0
   959                           
   960     0070                     ?___bmul:	
   961                           ; 1 bytes @ 0x0
   962                           
   963     0070                     ?_I2C_Write:	
   964                           ; 1 bytes @ 0x0
   965                           
   966     0070                     ?___wmul:	
   967                           ; 2 bytes @ 0x0
   968                           
   969     0070                     ?___lwdiv:	
   970                           ; 2 bytes @ 0x0
   971                           
   972     0070                     I2C_Init_Master@sp_i2c:	
   973                           ; 2 bytes @ 0x0
   974                           
   975     0070                     I2C_Write@data:	
   976                           ; 1 bytes @ 0x0
   977                           
   978     0070                     Lcd_Port@a:	
   979                           ; 1 bytes @ 0x0
   980                           
   981     0070                     ___bmul@multiplicand:	
   982                           ; 1 bytes @ 0x0
   983                           
   984     0070                     _isdigit$962:	
   985                           ; 1 bytes @ 0x0
   986                           
   987     0070                     ___wmul@multiplier:	
   988                           ; 1 bytes @ 0x0
   989                           
   990     0070                     ___lwdiv@divisor:	
   991                           ; 2 bytes @ 0x0
   992                           
   993                           
   994                           ; 2 bytes @ 0x0
   995     0070                     	ds	1
   996     0071                     ??_DS3231_Read:
   997     0071                     ??_Lcd_Cmd:	
   998                           ; 1 bytes @ 0x1
   999                           
  1000     0071                     ??_Lcd_Write_Char:	
  1001                           ; 1 bytes @ 0x1
  1002                           
  1003     0071                     ??___bmul:	
  1004                           ; 1 bytes @ 0x1
  1005                           
  1006     0071                     DS3231_Read@reg:	
  1007                           ; 1 bytes @ 0x1
  1008                           
  1009     0071                     DS3231_Bin_Bcd@binary_value:	
  1010                           ; 1 bytes @ 0x1
  1011                           
  1012     0071                     isdigit@c:	
  1013                           ; 1 bytes @ 0x1
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0x1
  1017     0071                     	ds	1
  1018     0072                     Lcd_Write_Char@temp:
  1019     0072                     DS3231_Read@data:	
  1020                           ; 1 bytes @ 0x2
  1021                           
  1022     0072                     DS3231_Bin_Bcd@retval:	
  1023                           ; 1 bytes @ 0x2
  1024                           
  1025     0072                     DS3231_Bcd_Bin@bcd_value:	
  1026                           ; 1 bytes @ 0x2
  1027                           
  1028     0072                     ___bmul@product:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031     0072                     ___wmul@multiplicand:	
  1032                           ; 1 bytes @ 0x2
  1033                           
  1034     0072                     ___lwdiv@dividend:	
  1035                           ; 2 bytes @ 0x2
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0x2
  1039     0072                     	ds	1
  1040     0073                     Lcd_Cmd@a:
  1041     0073                     Lcd_Write_Char@y:	
  1042                           ; 1 bytes @ 0x3
  1043                           
  1044     0073                     DS3231_Bin_Bcd@temp:	
  1045                           ; 1 bytes @ 0x3
  1046                           
  1047     0073                     DS3231_Bcd_Bin@temp:	
  1048                           ; 1 bytes @ 0x3
  1049                           
  1050     0073                     ___bmul@multiplier:	
  1051                           ; 1 bytes @ 0x3
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0x3
  1055     0073                     	ds	1
  1056     0074                     ??_Lcd_Clear:
  1057     0074                     ??_Lcd_Init:	
  1058                           ; 1 bytes @ 0x4
  1059                           
  1060     0074                     ?_DS3231_Get_Date:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063     0074                     ?_DS3231_Get_Time:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066     0074                     ?_Lcd_Set_Cursor:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069     0074                     ?_DS3231_Set_Date_Time:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072     0074                     ??___wmul:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075     0074                     ??___lwdiv:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078     0074                     Lcd_Set_Cursor@b:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081     0074                     Lcd_Write_Char@a:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084     0074                     DS3231_Set_Date_Time@mth:	
  1085                           ; 1 bytes @ 0x4
  1086                           
  1087     0074                     DS3231_Get_Date@day:	
  1088                           ; 1 bytes @ 0x4
  1089                           
  1090     0074                     DS3231_Get_Time@hr:	
  1091                           ; 2 bytes @ 0x4
  1092                           
  1093     0074                     ___wmul@product:	
  1094                           ; 2 bytes @ 0x4
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x4
  1098     0074                     	ds	1
  1099     0075                     ??_Lcd_Set_Cursor:
  1100     0075                     ?_Lcd_Write_String:	
  1101                           ; 1 bytes @ 0x5
  1102                           
  1103     0075                     DS3231_Set_Date_Time@yr:	
  1104                           ; 1 bytes @ 0x5
  1105                           
  1106     0075                     Lcd_Write_String@a:	
  1107                           ; 1 bytes @ 0x5
  1108                           
  1109     0075                     ___lwdiv@quotient:	
  1110                           ; 2 bytes @ 0x5
  1111                           
  1112                           
  1113                           ; 2 bytes @ 0x5
  1114     0075                     	ds	1
  1115     0076                     ??_setup:
  1116     0076                     Lcd_Set_Cursor@a:	
  1117                           ; 1 bytes @ 0x6
  1118                           
  1119     0076                     DS3231_Set_Date_Time@dw:	
  1120                           ; 1 bytes @ 0x6
  1121                           
  1122     0076                     DS3231_Get_Date@mth:	
  1123                           ; 1 bytes @ 0x6
  1124                           
  1125     0076                     DS3231_Get_Time@min:	
  1126                           ; 2 bytes @ 0x6
  1127                           
  1128                           
  1129                           ; 2 bytes @ 0x6
  1130     0076                     	ds	1
  1131     0077                     ??_Lcd_Write_String:
  1132     0077                     Lcd_Set_Cursor@z:	
  1133                           ; 1 bytes @ 0x7
  1134                           
  1135     0077                     DS3231_Set_Date_Time@hr:	
  1136                           ; 1 bytes @ 0x7
  1137                           
  1138     0077                     ___lwdiv@counter:	
  1139                           ; 1 bytes @ 0x7
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x7
  1143     0077                     	ds	1
  1144     0078                     ?___lwmod:
  1145     0078                     Lcd_Set_Cursor@y:	
  1146                           ; 2 bytes @ 0x8
  1147                           
  1148     0078                     DS3231_Set_Date_Time@mn:	
  1149                           ; 1 bytes @ 0x8
  1150                           
  1151     0078                     DS3231_Get_Date@year:	
  1152                           ; 1 bytes @ 0x8
  1153                           
  1154     0078                     DS3231_Get_Time@sec:	
  1155                           ; 2 bytes @ 0x8
  1156                           
  1157     0078                     ___lwmod@divisor:	
  1158                           ; 2 bytes @ 0x8
  1159                           
  1160                           
  1161                           ; 2 bytes @ 0x8
  1162     0078                     	ds	1
  1163     0079                     Lcd_Set_Cursor@temp:
  1164     0079                     DS3231_Set_Date_Time@sc:	
  1165                           ; 1 bytes @ 0x9
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0x9
  1169     0079                     	ds	1
  1170     007A                     ??_DS3231_Get_Time:
  1171     007A                     ??_DS3231_Set_Date_Time:	
  1172                           ; 1 bytes @ 0xA
  1173                           
  1174     007A                     Lcd_Write_String@i:	
  1175                           ; 1 bytes @ 0xA
  1176                           
  1177     007A                     DS3231_Get_Date@dow:	
  1178                           ; 2 bytes @ 0xA
  1179                           
  1180     007A                     ___lwmod@dividend:	
  1181                           ; 2 bytes @ 0xA
  1182                           
  1183                           
  1184                           ; 2 bytes @ 0xA
  1185     007A                     	ds	1
  1186     007B                     DS3231_Set_Date_Time@dy:
  1187                           
  1188                           ; 1 bytes @ 0xB
  1189     007B                     	ds	1
  1190     007C                     ??_DS3231_Get_Date:
  1191     007C                     ??___lwmod:	
  1192                           ; 1 bytes @ 0xC
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0xC
  1196     007C                     	ds	1
  1197     007D                     ___lwmod@counter:
  1198                           
  1199                           ; 1 bytes @ 0xD
  1200     007D                     	ds	1
  1201                           
  1202                           	psect	cstackBANK0
  1203     003D                     __pcstackBANK0:
  1204     003D                     ?_sprintf:
  1205     003D                     sprintf@f:	
  1206                           ; 2 bytes @ 0x0
  1207                           
  1208                           
  1209                           ; 1 bytes @ 0x0
  1210     003D                     	ds	7
  1211     0044                     ??_sprintf:
  1212                           
  1213                           ; 1 bytes @ 0x7
  1214     0044                     	ds	3
  1215     0047                     sprintf@flag:
  1216                           
  1217                           ; 1 bytes @ 0xA
  1218     0047                     	ds	1
  1219     0048                     sprintf@val:
  1220                           
  1221                           ; 2 bytes @ 0xB
  1222     0048                     	ds	2
  1223     004A                     sprintf@prec:
  1224                           
  1225                           ; 1 bytes @ 0xD
  1226     004A                     	ds	1
  1227     004B                     sprintf@ap:
  1228                           
  1229                           ; 1 bytes @ 0xE
  1230     004B                     	ds	1
  1231     004C                     sprintf@cp:
  1232                           
  1233                           ; 2 bytes @ 0xF
  1234     004C                     	ds	2
  1235     004E                     sprintf@len:
  1236                           
  1237                           ; 2 bytes @ 0x11
  1238     004E                     	ds	2
  1239     0050                     sprintf@width:
  1240                           
  1241                           ; 2 bytes @ 0x13
  1242     0050                     	ds	2
  1243     0052                     sprintf@c:
  1244                           
  1245                           ; 1 bytes @ 0x15
  1246     0052                     	ds	1
  1247     0053                     sprintf@sp:
  1248                           
  1249                           ; 1 bytes @ 0x16
  1250     0053                     	ds	1
  1251     0054                     ??_CLK_CONFIG:
  1252                           
  1253                           ; 1 bytes @ 0x17
  1254     0054                     	ds	3
  1255     0057                     ??_main:
  1256                           
  1257                           ; 1 bytes @ 0x1A
  1258     0057                     	ds	2
  1259                           
  1260                           	psect	maintext
  1261     0FB4                     __pmaintext:	
  1262 ;;
  1263 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1264 ;;
  1265 ;; *************** function _main *****************
  1266 ;; Defined at:
  1267 ;;		line 68 in file "maestro.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : B00/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0
  1283 ;;      Temps:          0       2       0       0       0
  1284 ;;      Totals:         0       2       0       0       0
  1285 ;;Total ram usage:        2 bytes
  1286 ;; Hardware stack levels required when called: 4
  1287 ;; This function calls:
  1288 ;;		_CLK_CONFIG
  1289 ;;		_I2C_Read
  1290 ;;		_I2C_Start
  1291 ;;		_I2C_Stop
  1292 ;;		_I2C_Write
  1293 ;;		_Lcd_Clear
  1294 ;;		_setup
  1295 ;; This function is called by:
  1296 ;;		Startup code after reset
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300     0FB4                     _main:	
  1301                           ;psect for function _main
  1302                           
  1303     0FB4                     l2446:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1306                           
  1307                           
  1308                           ;maestro.c: 69:     setup();
  1309     0FB4  120A  158A  25BE  120A  158A  	fcall	_setup
  1310     0FB9                     l2448:
  1311                           
  1312                           ;maestro.c: 72:         I2C_Start();
  1313     0FB9  120A  158A  24B5  120A  158A  	fcall	_I2C_Start
  1314     0FBE                     l2450:
  1315                           
  1316                           ;maestro.c: 73:         I2C_Write(0x51);
  1317     0FBE  3051               	movlw	81
  1318     0FBF  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  1319     0FC4                     l2452:
  1320                           
  1321                           ;maestro.c: 74:         valor_ADC = I2C_Read();
  1322     0FC4  120A  158A  24D4  120A  158A  	fcall	_I2C_Read
  1323     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1325     0FCB  00A8               	movwf	_valor_ADC
  1326     0FCC                     l2454:
  1327                           
  1328                           ;maestro.c: 75:         I2C_Stop();
  1329     0FCC  120A  158A  24BF  120A  158A  	fcall	_I2C_Stop
  1330     0FD1                     l2456:
  1331                           
  1332                           ;maestro.c: 76:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1333     0FD1  3005               	movlw	5
  1334     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  1335     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  1336     0FD4  00D7               	movwf	??_main
  1337     0FD5                     u2127:
  1338     0FD5  0BD7               	decfsz	??_main,f
  1339     0FD6  2FD5               	goto	u2127
  1340     0FD7  2FD8               	nop2
  1341     0FD8                     l2458:
  1342                           
  1343                           ;maestro.c: 78:           if(PORTAbits.RA0 == 1)
  1344     0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  1345     0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  1346     0FDA  1C05               	btfss	5,0	;volatile
  1347     0FDB  2FDD               	goto	u2101
  1348     0FDC  2FDE               	goto	u2100
  1349     0FDD                     u2101:
  1350     0FDD  2FF7               	goto	l2468
  1351     0FDE                     u2100:
  1352     0FDE                     l81:
  1353     0FDE  1805               	btfsc	5,0	;volatile
  1354     0FDF  2FE1               	goto	u2111
  1355     0FE0  2FE2               	goto	u2110
  1356     0FE1                     u2111:
  1357     0FE1  2FDE               	goto	l81
  1358     0FE2                     u2110:
  1359     0FE2                     l2462:
  1360                           
  1361                           ;maestro.c: 81:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1362     0FE2  3034               	movlw	52
  1363     0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  1364     0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  1365     0FE5  00D8               	movwf	??_main+1
  1366     0FE6  30F1               	movlw	241
  1367     0FE7  00D7               	movwf	??_main
  1368     0FE8                     u2137:
  1369     0FE8  0BD7               	decfsz	??_main,f
  1370     0FE9  2FE8               	goto	u2137
  1371     0FEA  0BD8               	decfsz	??_main+1,f
  1372     0FEB  2FE8               	goto	u2137
  1373     0FEC                     l2464:
  1374                           
  1375                           ;maestro.c: 82:             Lcd_Clear();
  1376     0FEC  120A  158A  24DF  120A  158A  	fcall	_Lcd_Clear
  1377     0FF1                     l2466:
  1378                           
  1379                           ;maestro.c: 83:             selector++;
  1380     0FF1  3001               	movlw	1
  1381     0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  1382     0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  1383     0FF4  00D7               	movwf	??_main
  1384     0FF5  0857               	movf	??_main,w
  1385     0FF6  07A7               	addwf	_selector,f
  1386     0FF7                     l2468:
  1387                           
  1388                           ;maestro.c: 86:         CLK_CONFIG();
  1389     0FF7  120A  118A  2410  120A  158A  	fcall	_CLK_CONFIG
  1390     0FFC  2FB9               	goto	l2448
  1391     0FFD  120A  118A  2800   	ljmp	start
  1392     1000                     __end_of_main:
  1393                           
  1394                           	psect	text1
  1395     0DBE                     __ptext1:	
  1396 ;; *************** function _setup *****************
  1397 ;; Defined at:
  1398 ;;		line 92 in file "maestro.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0
  1415 ;;      Totals:         0       0       0       0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 3
  1419 ;; This function calls:
  1420 ;;		_I2C_Init_Master
  1421 ;;		_Lcd_Init
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427     0DBE                     _setup:	
  1428                           ;psect for function _setup
  1429                           
  1430     0DBE                     l2170:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1433                           
  1434                           
  1435                           ;maestro.c: 95:     ANSEL = 0;
  1436     0DBE  1683               	bsf	3,5	;RP0=1, select bank3
  1437     0DBF  1703               	bsf	3,6	;RP1=1, select bank3
  1438     0DC0  0188               	clrf	8	;volatile
  1439                           
  1440                           ;maestro.c: 96:     ANSELH = 0;
  1441     0DC1  0189               	clrf	9	;volatile
  1442     0DC2                     l2172:
  1443                           
  1444                           ;maestro.c: 98:     TRISAbits.TRISA0 = 1;
  1445     0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  1446     0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  1447     0DC4  1405               	bsf	5,0	;volatile
  1448     0DC5                     l2174:
  1449                           
  1450                           ;maestro.c: 99:     TRISAbits.TRISA1 = 1;
  1451     0DC5  1485               	bsf	5,1	;volatile
  1452     0DC6                     l2176:
  1453                           
  1454                           ;maestro.c: 100:     TRISAbits.TRISA2 = 1;
  1455     0DC6  1505               	bsf	5,2	;volatile
  1456                           
  1457                           ;maestro.c: 103:     TRISB = 0;
  1458     0DC7  0186               	clrf	6	;volatile
  1459                           
  1460                           ;maestro.c: 104:     TRISD = 0;
  1461     0DC8  0188               	clrf	8	;volatile
  1462                           
  1463                           ;maestro.c: 107:     PORTB = 0;
  1464     0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  1465     0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  1466     0DCB  0186               	clrf	6	;volatile
  1467                           
  1468                           ;maestro.c: 108:     PORTD = 0;
  1469     0DCC  0188               	clrf	8	;volatile
  1470                           
  1471                           ;maestro.c: 109:     PORTA = 0;
  1472     0DCD  0185               	clrf	5	;volatile
  1473     0DCE                     l2178:
  1474                           
  1475                           ;maestro.c: 112:     OSCCONbits.IRCF2 = 1;
  1476     0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  1477     0DCF  1303               	bcf	3,6	;RP1=0, select bank1
  1478     0DD0  170F               	bsf	15,6	;volatile
  1479     0DD1                     l2180:
  1480                           
  1481                           ;maestro.c: 113:     OSCCONbits.IRCF1 = 1;
  1482     0DD1  168F               	bsf	15,5	;volatile
  1483     0DD2                     l2182:
  1484                           
  1485                           ;maestro.c: 114:     OSCCONbits.IRCF0 = 1;
  1486     0DD2  160F               	bsf	15,4	;volatile
  1487     0DD3                     l2184:
  1488                           
  1489                           ;maestro.c: 117:     OSCCONbits.SCS = 1;
  1490     0DD3  140F               	bsf	15,0	;volatile
  1491     0DD4                     l2186:
  1492                           
  1493                           ;maestro.c: 120:      Lcd_Init();
  1494     0DD4  120A  118A  213B  120A  158A  	fcall	_Lcd_Init
  1495     0DD9                     l2188:
  1496                           
  1497                           ;maestro.c: 123:     I2C_Init_Master(0x80);
  1498     0DD9  3080               	movlw	128
  1499     0DDA  120A  158A  257D  120A  158A  	fcall	_I2C_Init_Master
  1500     0DDF                     l89:
  1501     0DDF  0008               	return
  1502     0DE0                     __end_of_setup:
  1503                           
  1504                           	psect	text2
  1505     013B                     __ptext2:	
  1506 ;; *************** function _Lcd_Init *****************
  1507 ;; Defined at:
  1508 ;;		line 65 in file "LCD.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0, pclath, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0
  1524 ;;      Temps:          2       0       0       0       0
  1525 ;;      Totals:         2       0       0       0       0
  1526 ;;Total ram usage:        2 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; Hardware stack levels required when called: 2
  1529 ;; This function calls:
  1530 ;;		_Lcd_Cmd
  1531 ;;		_Lcd_Port
  1532 ;; This function is called by:
  1533 ;;		_setup
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537     013B                     _Lcd_Init:	
  1538                           ;psect for function _Lcd_Init
  1539                           
  1540     013B                     l1942:	
  1541                           ;incstack = 0
  1542                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1543                           
  1544                           
  1545                           ;LCD.c: 66:     Lcd_Port(0x00);
  1546     013B  3000               	movlw	0
  1547     013C  120A  158A  259C  120A  118A  	fcall	_Lcd_Port
  1548     0141                     l1944:
  1549                           
  1550                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1551     0141  3034               	movlw	52
  1552     0142  00F5               	movwf	??_Lcd_Init+1
  1553     0143  30F1               	movlw	241
  1554     0144  00F4               	movwf	??_Lcd_Init
  1555     0145                     u2147:
  1556     0145  0BF4               	decfsz	??_Lcd_Init,f
  1557     0146  2945               	goto	u2147
  1558     0147  0BF5               	decfsz	??_Lcd_Init+1,f
  1559     0148  2945               	goto	u2147
  1560     0149  294A               	nop2
  1561     014A                     l1946:
  1562                           
  1563                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1564     014A  3003               	movlw	3
  1565     014B  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1566                           
  1567                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1568     0150  300D               	movlw	13
  1569     0151  00F5               	movwf	??_Lcd_Init+1
  1570     0152  30FB               	movlw	251
  1571     0153  00F4               	movwf	??_Lcd_Init
  1572     0154                     u2157:
  1573     0154  0BF4               	decfsz	??_Lcd_Init,f
  1574     0155  2954               	goto	u2157
  1575     0156  0BF5               	decfsz	??_Lcd_Init+1,f
  1576     0157  2954               	goto	u2157
  1577     0158  2959               	nop2
  1578     0159                     l1948:
  1579                           
  1580                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1581     0159  3003               	movlw	3
  1582     015A  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1583     015F                     l1950:
  1584                           
  1585                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  1586     015F  3085               	movlw	133
  1587     0160  00F4               	movwf	??_Lcd_Init
  1588     0161                     u2167:
  1589     0161  0BF4               	decfsz	??_Lcd_Init,f
  1590     0162  2961               	goto	u2167
  1591                           
  1592                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1593     0163  3003               	movlw	3
  1594     0164  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1595                           
  1596                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  1597     0169  3002               	movlw	2
  1598     016A  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1599                           
  1600                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1601     016F  3002               	movlw	2
  1602     0170  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1603                           
  1604                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  1605     0175  3008               	movlw	8
  1606     0176  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1607                           
  1608                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  1609     017B  3000               	movlw	0
  1610     017C  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1611                           
  1612                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  1613     0181  300C               	movlw	12
  1614     0182  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1615                           
  1616                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  1617     0187  3000               	movlw	0
  1618     0188  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1619                           
  1620                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  1621     018D  3006               	movlw	6
  1622     018E  120A  158A  2563  120A  118A  	fcall	_Lcd_Cmd
  1623     0193                     l1952:
  1624                           
  1625                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  1626     0193  3042               	movlw	66
  1627     0194  00F4               	movwf	??_Lcd_Init
  1628     0195                     u2177:
  1629     0195  0BF4               	decfsz	??_Lcd_Init,f
  1630     0196  2995               	goto	u2177
  1631     0197  0000               	nop
  1632     0198                     l269:
  1633     0198  0008               	return
  1634     0199                     __end_of_Lcd_Init:
  1635                           
  1636                           	psect	text3
  1637     0D7D                     __ptext3:	
  1638 ;; *************** function _I2C_Init_Master *****************
  1639 ;; Defined at:
  1640 ;;		line 12 in file "i2c.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  sp_i2c          1    wreg     unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  sp_i2c          1    0[COMMON] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1654 ;;      Params:         0       0       0       0       0
  1655 ;;      Locals:         1       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0
  1657 ;;      Totals:         1       0       0       0       0
  1658 ;;Total ram usage:        1 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_setup
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667     0D7D                     _I2C_Init_Master:	
  1668                           ;psect for function _I2C_Init_Master
  1669                           
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  1673                           ;I2C_Init_Master@sp_i2c stored from wreg
  1674     0D7D  00F0               	movwf	I2C_Init_Master@sp_i2c
  1675     0D7E                     l1954:
  1676                           
  1677                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  1678     0D7E  1683               	bsf	3,5	;RP0=1, select bank1
  1679     0D7F  1303               	bcf	3,6	;RP1=0, select bank1
  1680     0D80  1587               	bsf	7,3	;volatile
  1681                           
  1682                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  1683     0D81  1607               	bsf	7,4	;volatile
  1684     0D82                     l1956:
  1685                           
  1686                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  1687     0D82  0870               	movf	I2C_Init_Master@sp_i2c,w
  1688     0D83  0094               	movwf	20	;volatile
  1689                           
  1690                           ;i2c.c: 17:  SSPCON = 0x28;
  1691     0D84  3028               	movlw	40
  1692     0D85  1283               	bcf	3,5	;RP0=0, select bank0
  1693     0D86  1303               	bcf	3,6	;RP1=0, select bank0
  1694     0D87  0094               	movwf	20	;volatile
  1695     0D88                     l1958:
  1696                           
  1697                           ;i2c.c: 18:     SSPCON2 = 0x00;
  1698     0D88  1683               	bsf	3,5	;RP0=1, select bank1
  1699     0D89  1303               	bcf	3,6	;RP1=0, select bank1
  1700     0D8A  0191               	clrf	17	;volatile
  1701     0D8B                     l1960:
  1702                           
  1703                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  1704     0D8B  3080               	movlw	128
  1705     0D8C  0670               	xorwf	I2C_Init_Master@sp_i2c,w
  1706     0D8D  1D03               	btfss	3,2
  1707     0D8E  2D90               	goto	u1391
  1708     0D8F  2D91               	goto	u1390
  1709     0D90                     u1391:
  1710     0D90  2D94               	goto	l1964
  1711     0D91                     u1390:
  1712     0D91                     l1962:
  1713                           
  1714                           ;i2c.c: 20:         SSPADD = 19;
  1715     0D91  3013               	movlw	19
  1716     0D92  0093               	movwf	19	;volatile
  1717                           
  1718                           ;i2c.c: 21:     }
  1719     0D93  2D9B               	goto	l195
  1720     0D94                     l1964:
  1721     0D94  0870               	movf	I2C_Init_Master@sp_i2c,w
  1722     0D95  1D03               	btfss	3,2
  1723     0D96  2D98               	goto	u1401
  1724     0D97  2D99               	goto	u1400
  1725     0D98                     u1401:
  1726     0D98  2D9B               	goto	l195
  1727     0D99                     u1400:
  1728     0D99                     l1966:
  1729                           
  1730                           ;i2c.c: 23:         SSPADD = 29;
  1731     0D99  301D               	movlw	29
  1732     0D9A  0093               	movwf	19	;volatile
  1733     0D9B                     l195:
  1734     0D9B  0008               	return
  1735     0D9C                     __end_of_I2C_Init_Master:
  1736                           
  1737                           	psect	text4
  1738     0CDF                     __ptext4:	
  1739 ;; *************** function _Lcd_Clear *****************
  1740 ;; Defined at:
  1741 ;;		line 43 in file "LCD.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0, pclath, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1755 ;;      Params:         0       0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0
  1758 ;;      Totals:         0       0       0       0       0
  1759 ;;Total ram usage:        0 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 2
  1762 ;; This function calls:
  1763 ;;		_Lcd_Cmd
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769     0CDF                     _Lcd_Clear:	
  1770                           ;psect for function _Lcd_Clear
  1771                           
  1772     0CDF                     l2190:	
  1773                           ;incstack = 0
  1774                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1775                           
  1776                           
  1777                           ;LCD.c: 44:     Lcd_Cmd(0);
  1778     0CDF  3000               	movlw	0
  1779     0CE0  120A  158A  2563  120A  158A  	fcall	_Lcd_Cmd
  1780                           
  1781                           ;LCD.c: 45:     Lcd_Cmd(1);
  1782     0CE5  3001               	movlw	1
  1783     0CE6  120A  158A  2563  120A  158A  	fcall	_Lcd_Cmd
  1784     0CEB                     l260:
  1785     0CEB  0008               	return
  1786     0CEC                     __end_of_Lcd_Clear:
  1787                           
  1788                           	psect	text5
  1789     0410                     __ptext5:	
  1790 ;; *************** function _CLK_CONFIG *****************
  1791 ;; Defined at:
  1792 ;;		line 127 in file "maestro.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0
  1808 ;;      Temps:          0       3       0       0       0
  1809 ;;      Totals:         0       3       0       0       0
  1810 ;;Total ram usage:        3 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; Hardware stack levels required when called: 3
  1813 ;; This function calls:
  1814 ;;		_DS3231_Get_Date
  1815 ;;		_DS3231_Get_Time
  1816 ;;		_DS3231_Set_Date_Time
  1817 ;;		_Lcd_Set_Cursor
  1818 ;;		_Lcd_Write_String
  1819 ;;		___bmul
  1820 ;;		_sprintf
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826     0410                     _CLK_CONFIG:	
  1827                           ;psect for function _CLK_CONFIG
  1828                           
  1829     0410                     l2192:	
  1830                           ;incstack = 0
  1831                           ; Regs used in _CLK_CONFIG: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1832                           
  1833                           
  1834                           ;maestro.c: 129:     switch(selector)
  1835     0410  2FBF               	goto	l2440
  1836     0411                     l2194:
  1837                           
  1838                           ;maestro.c: 132:                 DS3231_Get_Date((uint8_t)&dia, (uint8_t)&mes, (uint8_t)
      +                          &ano, (uint8_t)&dow);
  1839     0411  3026               	movlw	low _dia
  1840     0412  00F4               	movwf	DS3231_Get_Date@day
  1841     0413  3000               	movlw	high _dia
  1842     0414  00F5               	movwf	DS3231_Get_Date@day+1
  1843     0415  3025               	movlw	low _mes
  1844     0416  00F6               	movwf	DS3231_Get_Date@mth
  1845     0417  3000               	movlw	high _mes
  1846     0418  00F7               	movwf	DS3231_Get_Date@mth+1
  1847     0419  3024               	movlw	low _ano
  1848     041A  00F8               	movwf	DS3231_Get_Date@year
  1849     041B  3000               	movlw	high _ano
  1850     041C  00F9               	movwf	DS3231_Get_Date@year+1
  1851     041D  3023               	movlw	low _dow
  1852     041E  00FA               	movwf	DS3231_Get_Date@dow
  1853     041F  3000               	movlw	high _dow
  1854     0420  00FB               	movwf	DS3231_Get_Date@dow+1
  1855     0421  120A  158A  276C  120A  118A  	fcall	_DS3231_Get_Date
  1856                           
  1857                           ;maestro.c: 133:                 DS3231_Get_Time((uint8_t)&horas, (uint8_t)&minutos, (ui
      +                          nt8_t)&segundos);
  1858     0426  3022               	movlw	low _horas
  1859     0427  00F4               	movwf	DS3231_Get_Time@hr
  1860     0428  3000               	movlw	high _horas
  1861     0429  00F5               	movwf	DS3231_Get_Time@hr+1
  1862     042A  3021               	movlw	low _minutos
  1863     042B  00F6               	movwf	DS3231_Get_Time@min
  1864     042C  3000               	movlw	high _minutos
  1865     042D  00F7               	movwf	DS3231_Get_Time@min+1
  1866     042E  3020               	movlw	low _segundos
  1867     042F  00F8               	movwf	DS3231_Get_Time@sec
  1868     0430  3000               	movlw	high _segundos
  1869     0431  00F9               	movwf	DS3231_Get_Time@sec+1
  1870     0432  120A  158A  2669  120A  118A  	fcall	_DS3231_Get_Time
  1871     0437                     l2196:
  1872                           
  1873                           ;maestro.c: 135:                 Lcd_Set_Cursor(1,1);
  1874     0437  01F4               	clrf	Lcd_Set_Cursor@b
  1875     0438  0AF4               	incf	Lcd_Set_Cursor@b,f
  1876     0439  3001               	movlw	1
  1877     043A  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  1878     043F                     l2198:
  1879                           
  1880                           ;maestro.c: 136:                 Lcd_Write_String("ADC: ");
  1881     043F  3090               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1882     0440  00F5               	movwf	Lcd_Write_String@a
  1883     0441  3080               	movlw	128
  1884     0442  00F6               	movwf	Lcd_Write_String@a+1
  1885     0443  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  1886     0448                     l2200:
  1887                           
  1888                           ;maestro.c: 137:                 sprintf(buffer, "%u ", valor_ADC);
  1889     0448  3096               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1890     0449  1283               	bcf	3,5	;RP0=0, select bank0
  1891     044A  1303               	bcf	3,6	;RP1=0, select bank0
  1892     044B  00BD               	movwf	sprintf@f
  1893     044C  0828               	movf	_valor_ADC,w
  1894     044D  00D4               	movwf	??_CLK_CONFIG
  1895     044E  01D5               	clrf	??_CLK_CONFIG+1
  1896     044F  0854               	movf	??_CLK_CONFIG,w
  1897     0450  00BE               	movwf	?_sprintf+1
  1898     0451  0855               	movf	??_CLK_CONFIG+1,w
  1899     0452  00BF               	movwf	?_sprintf+2
  1900     0453  3029               	movlw	(low (_buffer| 0))& (0+255)
  1901     0454  120A  118A  2206  120A  118A  	fcall	_sprintf
  1902     0459                     l2202:
  1903                           
  1904                           ;maestro.c: 138:                 Lcd_Set_Cursor(2,1);
  1905     0459  01F4               	clrf	Lcd_Set_Cursor@b
  1906     045A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1907     045B  3002               	movlw	2
  1908     045C  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  1909     0461                     l2204:
  1910                           
  1911                           ;maestro.c: 139:                 Lcd_Write_String(buffer);
  1912     0461  3029               	movlw	(low (_buffer| 0))& (0+255)
  1913     0462  00F5               	movwf	Lcd_Write_String@a
  1914     0463  3000               	movlw	0
  1915     0464  00F6               	movwf	Lcd_Write_String@a+1
  1916     0465  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  1917     046A                     l2206:
  1918                           
  1919                           ;maestro.c: 141:                 sprintf(buffer, "%02u/%02u/20%02u", dia, mes, ano);
  1920     046A  301C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1921     046B  1283               	bcf	3,5	;RP0=0, select bank0
  1922     046C  1303               	bcf	3,6	;RP1=0, select bank0
  1923     046D  00BD               	movwf	sprintf@f
  1924     046E  0826               	movf	_dia,w
  1925     046F  00BE               	movwf	?_sprintf+1
  1926     0470  01BF               	clrf	?_sprintf+2
  1927     0471  1BBE               	btfsc	?_sprintf+1,7
  1928     0472  03BF               	decf	?_sprintf+2,f
  1929     0473  0825               	movf	_mes,w
  1930     0474  00C0               	movwf	?_sprintf+3
  1931     0475  01C1               	clrf	?_sprintf+4
  1932     0476  1BC0               	btfsc	?_sprintf+3,7
  1933     0477  03C1               	decf	?_sprintf+4,f
  1934     0478  0824               	movf	_ano,w
  1935     0479  00C2               	movwf	?_sprintf+5
  1936     047A  01C3               	clrf	?_sprintf+6
  1937     047B  1BC2               	btfsc	?_sprintf+5,7
  1938     047C  03C3               	decf	?_sprintf+6,f
  1939     047D  3029               	movlw	(low (_buffer| 0))& (0+255)
  1940     047E  120A  118A  2206  120A  118A  	fcall	_sprintf
  1941     0483                     l2208:
  1942                           
  1943                           ;maestro.c: 142:                 Lcd_Set_Cursor(1,6);
  1944     0483  3006               	movlw	6
  1945     0484  00F4               	movwf	Lcd_Set_Cursor@b
  1946     0485  3001               	movlw	1
  1947     0486  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  1948     048B                     l2210:
  1949                           
  1950                           ;maestro.c: 143:                 Lcd_Write_String(buffer);
  1951     048B  3029               	movlw	(low (_buffer| 0))& (0+255)
  1952     048C  00F5               	movwf	Lcd_Write_String@a
  1953     048D  3000               	movlw	0
  1954     048E  00F6               	movwf	Lcd_Write_String@a+1
  1955     048F  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  1956     0494                     l2212:
  1957                           
  1958                           ;maestro.c: 144:                 sprintf(buffer, "%02u:%02u:%02u", horas, minutos, segun
      +                          dos);
  1959     0494  303C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1960     0495  1283               	bcf	3,5	;RP0=0, select bank0
  1961     0496  1303               	bcf	3,6	;RP1=0, select bank0
  1962     0497  00BD               	movwf	sprintf@f
  1963     0498  0822               	movf	_horas,w
  1964     0499  00BE               	movwf	?_sprintf+1
  1965     049A  01BF               	clrf	?_sprintf+2
  1966     049B  1BBE               	btfsc	?_sprintf+1,7
  1967     049C  03BF               	decf	?_sprintf+2,f
  1968     049D  0821               	movf	_minutos,w
  1969     049E  00C0               	movwf	?_sprintf+3
  1970     049F  01C1               	clrf	?_sprintf+4
  1971     04A0  1BC0               	btfsc	?_sprintf+3,7
  1972     04A1  03C1               	decf	?_sprintf+4,f
  1973     04A2  0820               	movf	_segundos,w
  1974     04A3  00C2               	movwf	?_sprintf+5
  1975     04A4  01C3               	clrf	?_sprintf+6
  1976     04A5  1BC2               	btfsc	?_sprintf+5,7
  1977     04A6  03C3               	decf	?_sprintf+6,f
  1978     04A7  3029               	movlw	(low (_buffer| 0))& (0+255)
  1979     04A8  120A  118A  2206  120A  118A  	fcall	_sprintf
  1980     04AD                     l2214:
  1981                           
  1982                           ;maestro.c: 145:                 Lcd_Set_Cursor(2,8);
  1983     04AD  3008               	movlw	8
  1984     04AE  00F4               	movwf	Lcd_Set_Cursor@b
  1985     04AF  3002               	movlw	2
  1986     04B0  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  1987     04B5                     l2216:
  1988                           
  1989                           ;maestro.c: 146:                 Lcd_Write_String(buffer);
  1990     04B5  3029               	movlw	(low (_buffer| 0))& (0+255)
  1991     04B6  00F5               	movwf	Lcd_Write_String@a
  1992     04B7  3000               	movlw	0
  1993     04B8  00F6               	movwf	Lcd_Write_String@a+1
  1994     04B9  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  1995     04BE                     l2218:
  1996                           
  1997                           ;maestro.c: 147:                 _delay((unsigned long)((200)*(8000000/4000.0)));
  1998     04BE  3003               	movlw	3
  1999     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2000     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2001     04C1  00D6               	movwf	??_CLK_CONFIG+2
  2002     04C2  3008               	movlw	8
  2003     04C3  00D5               	movwf	??_CLK_CONFIG+1
  2004     04C4  3076               	movlw	118
  2005     04C5  00D4               	movwf	??_CLK_CONFIG
  2006     04C6                     u2187:
  2007     04C6  0BD4               	decfsz	??_CLK_CONFIG,f
  2008     04C7  2CC6               	goto	u2187
  2009     04C8  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2010     04C9  2CC6               	goto	u2187
  2011     04CA  0BD6               	decfsz	??_CLK_CONFIG+2,f
  2012     04CB  2CC6               	goto	u2187
  2013     04CC  0000               	nop
  2014                           
  2015                           ;maestro.c: 148:                 break;
  2016     04CD  2FE5               	goto	l173
  2017     04CE                     l2220:
  2018                           
  2019                           ;maestro.c: 151:                 Lcd_Set_Cursor(1,1);
  2020     04CE  01F4               	clrf	Lcd_Set_Cursor@b
  2021     04CF  0AF4               	incf	Lcd_Set_Cursor@b,f
  2022     04D0  3001               	movlw	1
  2023     04D1  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  2024     04D6                     l2222:
  2025                           
  2026                           ;maestro.c: 152:                 sprintf(buffer, "Dia: %02u", dia);
  2027     04D6  306E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2028     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2029     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2030     04D9  00BD               	movwf	sprintf@f
  2031     04DA  0826               	movf	_dia,w
  2032     04DB  00BE               	movwf	?_sprintf+1
  2033     04DC  01BF               	clrf	?_sprintf+2
  2034     04DD  1BBE               	btfsc	?_sprintf+1,7
  2035     04DE  03BF               	decf	?_sprintf+2,f
  2036     04DF  3029               	movlw	(low (_buffer| 0))& (0+255)
  2037     04E0  120A  118A  2206  120A  118A  	fcall	_sprintf
  2038     04E5                     l2224:
  2039                           
  2040                           ;maestro.c: 153:                 Lcd_Write_String(buffer);
  2041     04E5  3029               	movlw	(low (_buffer| 0))& (0+255)
  2042     04E6  00F5               	movwf	Lcd_Write_String@a
  2043     04E7  3000               	movlw	0
  2044     04E8  00F6               	movwf	Lcd_Write_String@a+1
  2045     04E9  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  2046     04EE                     l2226:
  2047                           
  2048                           ;maestro.c: 154:                 if(PORTAbits.RA1 == 1)
  2049     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2050     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  2051     04F0  1C85               	btfss	5,1	;volatile
  2052     04F1  2CF3               	goto	u1681
  2053     04F2  2CF4               	goto	u1680
  2054     04F3                     u1681:
  2055     04F3  2D11               	goto	l2238
  2056     04F4                     u1680:
  2057     04F4                     l97:
  2058     04F4  1885               	btfsc	5,1	;volatile
  2059     04F5  2CF7               	goto	u1691
  2060     04F6  2CF8               	goto	u1690
  2061     04F7                     u1691:
  2062     04F7  2CF4               	goto	l97
  2063     04F8                     u1690:
  2064     04F8                     l2230:
  2065                           
  2066                           ;maestro.c: 157:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2067     04F8  3034               	movlw	52
  2068     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2069     04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2070     04FB  00D5               	movwf	??_CLK_CONFIG+1
  2071     04FC  30F1               	movlw	241
  2072     04FD  00D4               	movwf	??_CLK_CONFIG
  2073     04FE                     u2197:
  2074     04FE  0BD4               	decfsz	??_CLK_CONFIG,f
  2075     04FF  2CFE               	goto	u2197
  2076     0500  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2077     0501  2CFE               	goto	u2197
  2078     0502                     l2232:
  2079                           
  2080                           ;maestro.c: 158:                     dia++;
  2081     0502  3001               	movlw	1
  2082     0503  1283               	bcf	3,5	;RP0=0, select bank0
  2083     0504  1303               	bcf	3,6	;RP1=0, select bank0
  2084     0505  00D4               	movwf	??_CLK_CONFIG
  2085     0506  0854               	movf	??_CLK_CONFIG,w
  2086     0507  07A6               	addwf	_dia,f
  2087     0508                     l2234:
  2088                           
  2089                           ;maestro.c: 159:                     if(dia > 31){
  2090     0508  0826               	movf	_dia,w
  2091     0509  3A80               	xorlw	128
  2092     050A  3E60               	addlw	-160
  2093     050B  1C03               	skipc
  2094     050C  2D0E               	goto	u1701
  2095     050D  2D0F               	goto	u1700
  2096     050E                     u1701:
  2097     050E  2D11               	goto	l2238
  2098     050F                     u1700:
  2099     050F                     l2236:
  2100                           
  2101                           ;maestro.c: 160:                         dia = 31;
  2102     050F  301F               	movlw	31
  2103     0510  00A6               	movwf	_dia
  2104     0511                     l2238:
  2105                           
  2106                           ;maestro.c: 163:                 if(PORTAbits.RA2 == 1)
  2107     0511  1D05               	btfss	5,2	;volatile
  2108     0512  2D14               	goto	u1711
  2109     0513  2D15               	goto	u1710
  2110     0514                     u1711:
  2111     0514  2FE5               	goto	l173
  2112     0515                     u1710:
  2113     0515                     l102:
  2114     0515  1905               	btfsc	5,2	;volatile
  2115     0516  2D18               	goto	u1721
  2116     0517  2D19               	goto	u1720
  2117     0518                     u1721:
  2118     0518  2D15               	goto	l102
  2119     0519                     u1720:
  2120     0519                     l2242:
  2121                           
  2122                           ;maestro.c: 166:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2123     0519  3034               	movlw	52
  2124     051A  1283               	bcf	3,5	;RP0=0, select bank0
  2125     051B  1303               	bcf	3,6	;RP1=0, select bank0
  2126     051C  00D5               	movwf	??_CLK_CONFIG+1
  2127     051D  30F1               	movlw	241
  2128     051E  00D4               	movwf	??_CLK_CONFIG
  2129     051F                     u2207:
  2130     051F  0BD4               	decfsz	??_CLK_CONFIG,f
  2131     0520  2D1F               	goto	u2207
  2132     0521  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2133     0522  2D1F               	goto	u2207
  2134     0523                     l2244:
  2135                           
  2136                           ;maestro.c: 167:                     dia--;
  2137     0523  30FF               	movlw	255
  2138     0524  1283               	bcf	3,5	;RP0=0, select bank0
  2139     0525  1303               	bcf	3,6	;RP1=0, select bank0
  2140     0526  00D4               	movwf	??_CLK_CONFIG
  2141     0527  0854               	movf	??_CLK_CONFIG,w
  2142     0528  07A6               	addwf	_dia,f
  2143     0529                     l2246:
  2144                           
  2145                           ;maestro.c: 168:                     if(dia < 1){
  2146     0529  0826               	movf	_dia,w
  2147     052A  3A80               	xorlw	128
  2148     052B  3E7F               	addlw	-129
  2149     052C  1803               	skipnc
  2150     052D  2D2F               	goto	u1731
  2151     052E  2D30               	goto	u1730
  2152     052F                     u1731:
  2153     052F  2FE5               	goto	l173
  2154     0530                     u1730:
  2155     0530                     l2248:
  2156                           
  2157                           ;maestro.c: 169:                         dia = 1;
  2158     0530  01A6               	clrf	_dia
  2159     0531  0AA6               	incf	_dia,f
  2160     0532  2FE5               	goto	l173
  2161     0533                     l2250:
  2162                           
  2163                           ;maestro.c: 175:                 Lcd_Set_Cursor(1,1);
  2164     0533  01F4               	clrf	Lcd_Set_Cursor@b
  2165     0534  0AF4               	incf	Lcd_Set_Cursor@b,f
  2166     0535  3001               	movlw	1
  2167     0536  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  2168     053B                     l2252:
  2169                           
  2170                           ;maestro.c: 176:                 sprintf(buffer, "Mes: %02u", mes);
  2171     053B  3078               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2172     053C  1283               	bcf	3,5	;RP0=0, select bank0
  2173     053D  1303               	bcf	3,6	;RP1=0, select bank0
  2174     053E  00BD               	movwf	sprintf@f
  2175     053F  0825               	movf	_mes,w
  2176     0540  00BE               	movwf	?_sprintf+1
  2177     0541  01BF               	clrf	?_sprintf+2
  2178     0542  1BBE               	btfsc	?_sprintf+1,7
  2179     0543  03BF               	decf	?_sprintf+2,f
  2180     0544  3029               	movlw	(low (_buffer| 0))& (0+255)
  2181     0545  120A  118A  2206  120A  118A  	fcall	_sprintf
  2182     054A                     l2254:
  2183                           
  2184                           ;maestro.c: 177:                 Lcd_Write_String(buffer);
  2185     054A  3029               	movlw	(low (_buffer| 0))& (0+255)
  2186     054B  00F5               	movwf	Lcd_Write_String@a
  2187     054C  3000               	movlw	0
  2188     054D  00F6               	movwf	Lcd_Write_String@a+1
  2189     054E  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  2190     0553                     l2256:
  2191                           
  2192                           ;maestro.c: 178:                 if(PORTAbits.RA1 == 1)
  2193     0553  1283               	bcf	3,5	;RP0=0, select bank0
  2194     0554  1303               	bcf	3,6	;RP1=0, select bank0
  2195     0555  1C85               	btfss	5,1	;volatile
  2196     0556  2D58               	goto	u1741
  2197     0557  2D59               	goto	u1740
  2198     0558                     u1741:
  2199     0558  2D76               	goto	l2268
  2200     0559                     u1740:
  2201     0559                     l108:
  2202     0559  1885               	btfsc	5,1	;volatile
  2203     055A  2D5C               	goto	u1751
  2204     055B  2D5D               	goto	u1750
  2205     055C                     u1751:
  2206     055C  2D59               	goto	l108
  2207     055D                     u1750:
  2208     055D                     l2260:
  2209                           
  2210                           ;maestro.c: 181:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2211     055D  3034               	movlw	52
  2212     055E  1283               	bcf	3,5	;RP0=0, select bank0
  2213     055F  1303               	bcf	3,6	;RP1=0, select bank0
  2214     0560  00D5               	movwf	??_CLK_CONFIG+1
  2215     0561  30F1               	movlw	241
  2216     0562  00D4               	movwf	??_CLK_CONFIG
  2217     0563                     u2217:
  2218     0563  0BD4               	decfsz	??_CLK_CONFIG,f
  2219     0564  2D63               	goto	u2217
  2220     0565  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2221     0566  2D63               	goto	u2217
  2222     0567                     l2262:
  2223                           
  2224                           ;maestro.c: 182:                     mes++;
  2225     0567  3001               	movlw	1
  2226     0568  1283               	bcf	3,5	;RP0=0, select bank0
  2227     0569  1303               	bcf	3,6	;RP1=0, select bank0
  2228     056A  00D4               	movwf	??_CLK_CONFIG
  2229     056B  0854               	movf	??_CLK_CONFIG,w
  2230     056C  07A5               	addwf	_mes,f
  2231     056D                     l2264:
  2232                           
  2233                           ;maestro.c: 183:                     if(mes > 12){
  2234     056D  0825               	movf	_mes,w
  2235     056E  3A80               	xorlw	128
  2236     056F  3E73               	addlw	-141
  2237     0570  1C03               	skipc
  2238     0571  2D73               	goto	u1761
  2239     0572  2D74               	goto	u1760
  2240     0573                     u1761:
  2241     0573  2D76               	goto	l2268
  2242     0574                     u1760:
  2243     0574                     l2266:
  2244                           
  2245                           ;maestro.c: 184:                         mes = 12;
  2246     0574  300C               	movlw	12
  2247     0575  00A5               	movwf	_mes
  2248     0576                     l2268:
  2249                           
  2250                           ;maestro.c: 187:                 if(PORTAbits.RA2 == 1)
  2251     0576  1D05               	btfss	5,2	;volatile
  2252     0577  2D79               	goto	u1771
  2253     0578  2D7A               	goto	u1770
  2254     0579                     u1771:
  2255     0579  2FE5               	goto	l173
  2256     057A                     u1770:
  2257     057A                     l113:
  2258     057A  1905               	btfsc	5,2	;volatile
  2259     057B  2D7D               	goto	u1781
  2260     057C  2D7E               	goto	u1780
  2261     057D                     u1781:
  2262     057D  2D7A               	goto	l113
  2263     057E                     u1780:
  2264     057E                     l2272:
  2265                           
  2266                           ;maestro.c: 190:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2267     057E  3034               	movlw	52
  2268     057F  1283               	bcf	3,5	;RP0=0, select bank0
  2269     0580  1303               	bcf	3,6	;RP1=0, select bank0
  2270     0581  00D5               	movwf	??_CLK_CONFIG+1
  2271     0582  30F1               	movlw	241
  2272     0583  00D4               	movwf	??_CLK_CONFIG
  2273     0584                     u2227:
  2274     0584  0BD4               	decfsz	??_CLK_CONFIG,f
  2275     0585  2D84               	goto	u2227
  2276     0586  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2277     0587  2D84               	goto	u2227
  2278     0588                     l2274:
  2279                           
  2280                           ;maestro.c: 191:                     mes--;
  2281     0588  30FF               	movlw	255
  2282     0589  1283               	bcf	3,5	;RP0=0, select bank0
  2283     058A  1303               	bcf	3,6	;RP1=0, select bank0
  2284     058B  00D4               	movwf	??_CLK_CONFIG
  2285     058C  0854               	movf	??_CLK_CONFIG,w
  2286     058D  07A5               	addwf	_mes,f
  2287     058E                     l2276:
  2288                           
  2289                           ;maestro.c: 192:                     if(mes < 1){
  2290     058E  0825               	movf	_mes,w
  2291     058F  3A80               	xorlw	128
  2292     0590  3E7F               	addlw	-129
  2293     0591  1803               	skipnc
  2294     0592  2D94               	goto	u1791
  2295     0593  2D95               	goto	u1790
  2296     0594                     u1791:
  2297     0594  2FE5               	goto	l173
  2298     0595                     u1790:
  2299     0595                     l2278:
  2300                           
  2301                           ;maestro.c: 193:                         mes = 1;
  2302     0595  01A5               	clrf	_mes
  2303     0596  0AA5               	incf	_mes,f
  2304     0597  2FE5               	goto	l173
  2305     0598                     l2280:
  2306                           
  2307                           ;maestro.c: 199:                 Lcd_Set_Cursor(1,1);
  2308     0598  01F4               	clrf	Lcd_Set_Cursor@b
  2309     0599  0AF4               	incf	Lcd_Set_Cursor@b,f
  2310     059A  3001               	movlw	1
  2311     059B  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  2312     05A0                     l2282:
  2313                           
  2314                           ;maestro.c: 200:                 sprintf(buffer, "ANO: %02u", ano);
  2315     05A0  3064               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2316     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2317     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2318     05A3  00BD               	movwf	sprintf@f
  2319     05A4  0824               	movf	_ano,w
  2320     05A5  00BE               	movwf	?_sprintf+1
  2321     05A6  01BF               	clrf	?_sprintf+2
  2322     05A7  1BBE               	btfsc	?_sprintf+1,7
  2323     05A8  03BF               	decf	?_sprintf+2,f
  2324     05A9  3029               	movlw	(low (_buffer| 0))& (0+255)
  2325     05AA  120A  118A  2206  120A  118A  	fcall	_sprintf
  2326     05AF                     l2284:
  2327                           
  2328                           ;maestro.c: 201:                 Lcd_Write_String(buffer);
  2329     05AF  3029               	movlw	(low (_buffer| 0))& (0+255)
  2330     05B0  00F5               	movwf	Lcd_Write_String@a
  2331     05B1  3000               	movlw	0
  2332     05B2  00F6               	movwf	Lcd_Write_String@a+1
  2333     05B3  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  2334     05B8                     l2286:
  2335                           
  2336                           ;maestro.c: 202:                 if(PORTAbits.RA1 == 1)
  2337     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2338     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2339     05BA  1C85               	btfss	5,1	;volatile
  2340     05BB  2DBD               	goto	u1801
  2341     05BC  2DBE               	goto	u1800
  2342     05BD                     u1801:
  2343     05BD  2DDB               	goto	l2298
  2344     05BE                     u1800:
  2345     05BE                     l119:
  2346     05BE  1885               	btfsc	5,1	;volatile
  2347     05BF  2DC1               	goto	u1811
  2348     05C0  2DC2               	goto	u1810
  2349     05C1                     u1811:
  2350     05C1  2DBE               	goto	l119
  2351     05C2                     u1810:
  2352     05C2                     l2290:
  2353                           
  2354                           ;maestro.c: 205:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2355     05C2  3034               	movlw	52
  2356     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2357     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2358     05C5  00D5               	movwf	??_CLK_CONFIG+1
  2359     05C6  30F1               	movlw	241
  2360     05C7  00D4               	movwf	??_CLK_CONFIG
  2361     05C8                     u2237:
  2362     05C8  0BD4               	decfsz	??_CLK_CONFIG,f
  2363     05C9  2DC8               	goto	u2237
  2364     05CA  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2365     05CB  2DC8               	goto	u2237
  2366     05CC                     l2292:
  2367                           
  2368                           ;maestro.c: 206:                     ano++;
  2369     05CC  3001               	movlw	1
  2370     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2371     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2372     05CF  00D4               	movwf	??_CLK_CONFIG
  2373     05D0  0854               	movf	??_CLK_CONFIG,w
  2374     05D1  07A4               	addwf	_ano,f
  2375     05D2                     l2294:
  2376                           
  2377                           ;maestro.c: 207:                     if(ano > 99){
  2378     05D2  0824               	movf	_ano,w
  2379     05D3  3A80               	xorlw	128
  2380     05D4  3E1C               	addlw	-228
  2381     05D5  1C03               	skipc
  2382     05D6  2DD8               	goto	u1821
  2383     05D7  2DD9               	goto	u1820
  2384     05D8                     u1821:
  2385     05D8  2DDB               	goto	l2298
  2386     05D9                     u1820:
  2387     05D9                     l2296:
  2388                           
  2389                           ;maestro.c: 208:                         ano = 99;
  2390     05D9  3063               	movlw	99
  2391     05DA  00A4               	movwf	_ano
  2392     05DB                     l2298:
  2393                           
  2394                           ;maestro.c: 211:                 if(PORTAbits.RA2 == 1)
  2395     05DB  1D05               	btfss	5,2	;volatile
  2396     05DC  2DDE               	goto	u1831
  2397     05DD  2DDF               	goto	u1830
  2398     05DE                     u1831:
  2399     05DE  2FE5               	goto	l173
  2400     05DF                     u1830:
  2401     05DF                     l124:
  2402     05DF  1905               	btfsc	5,2	;volatile
  2403     05E0  2DE2               	goto	u1841
  2404     05E1  2DE3               	goto	u1840
  2405     05E2                     u1841:
  2406     05E2  2DDF               	goto	l124
  2407     05E3                     u1840:
  2408     05E3                     l2302:
  2409                           
  2410                           ;maestro.c: 214:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2411     05E3  3034               	movlw	52
  2412     05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2413     05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2414     05E6  00D5               	movwf	??_CLK_CONFIG+1
  2415     05E7  30F1               	movlw	241
  2416     05E8  00D4               	movwf	??_CLK_CONFIG
  2417     05E9                     u2247:
  2418     05E9  0BD4               	decfsz	??_CLK_CONFIG,f
  2419     05EA  2DE9               	goto	u2247
  2420     05EB  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2421     05EC  2DE9               	goto	u2247
  2422     05ED                     l2304:
  2423                           
  2424                           ;maestro.c: 215:                     ano--;
  2425     05ED  30FF               	movlw	255
  2426     05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2427     05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2428     05F0  00D4               	movwf	??_CLK_CONFIG
  2429     05F1  0854               	movf	??_CLK_CONFIG,w
  2430     05F2  07A4               	addwf	_ano,f
  2431     05F3                     l2306:
  2432                           
  2433                           ;maestro.c: 216:                     if(ano == -1){
  2434     05F3  0A24               	incf	_ano,w
  2435     05F4  1D03               	btfss	3,2
  2436     05F5  2DF7               	goto	u1851
  2437     05F6  2DF8               	goto	u1850
  2438     05F7                     u1851:
  2439     05F7  2FE5               	goto	l173
  2440     05F8                     u1850:
  2441     05F8                     l2308:
  2442                           
  2443                           ;maestro.c: 217:                         ano = 0;
  2444     05F8  01A4               	clrf	_ano
  2445     05F9  2FE5               	goto	l173
  2446     05FA                     l2310:
  2447                           
  2448                           ;maestro.c: 223:                 Lcd_Set_Cursor(1,1);
  2449     05FA  01F4               	clrf	Lcd_Set_Cursor@b
  2450     05FB  0AF4               	incf	Lcd_Set_Cursor@b,f
  2451     05FC  3001               	movlw	1
  2452     05FD  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  2453     0602                     l2312:
  2454                           
  2455                           ;maestro.c: 224:                 sprintf(buffer, "Dia semana: %u", dow);
  2456     0602  302D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2457     0603  1283               	bcf	3,5	;RP0=0, select bank0
  2458     0604  1303               	bcf	3,6	;RP1=0, select bank0
  2459     0605  00BD               	movwf	sprintf@f
  2460     0606  0823               	movf	_dow,w
  2461     0607  00BE               	movwf	?_sprintf+1
  2462     0608  01BF               	clrf	?_sprintf+2
  2463     0609  1BBE               	btfsc	?_sprintf+1,7
  2464     060A  03BF               	decf	?_sprintf+2,f
  2465     060B  3029               	movlw	(low (_buffer| 0))& (0+255)
  2466     060C  120A  118A  2206  120A  118A  	fcall	_sprintf
  2467     0611                     l2314:
  2468                           
  2469                           ;maestro.c: 225:                 Lcd_Write_String(buffer);
  2470     0611  3029               	movlw	(low (_buffer| 0))& (0+255)
  2471     0612  00F5               	movwf	Lcd_Write_String@a
  2472     0613  3000               	movlw	0
  2473     0614  00F6               	movwf	Lcd_Write_String@a+1
  2474     0615  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  2475                           
  2476                           ;maestro.c: 226:                 Lcd_Set_Cursor(2,1);
  2477     061A  01F4               	clrf	Lcd_Set_Cursor@b
  2478     061B  0AF4               	incf	Lcd_Set_Cursor@b,f
  2479     061C  3002               	movlw	2
  2480     061D  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  2481     0622                     l2316:
  2482                           
  2483                           ;maestro.c: 227:                 sprintf(buffer, "%s    ", dw[dow]);
  2484     0622  3089               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2485     0623  1283               	bcf	3,5	;RP0=0, select bank0
  2486     0624  1303               	bcf	3,6	;RP1=0, select bank0
  2487     0625  00BD               	movwf	sprintf@f
  2488     0626  300B               	movlw	11
  2489     0627  00F0               	movwf	___bmul@multiplicand
  2490     0628  0823               	movf	_dow,w
  2491     0629  120A  158A  251F  120A  118A  	fcall	___bmul
  2492     062E  3EA0               	addlw	(low (_dw| 0))& (0+255)
  2493     062F  1283               	bcf	3,5	;RP0=0, select bank0
  2494     0630  1303               	bcf	3,6	;RP1=0, select bank0
  2495     0631  00BE               	movwf	low ((?_sprintf| 0+1))
  2496     0632  3029               	movlw	(low (_buffer| 0))& (0+255)
  2497     0633  120A  118A  2206  120A  118A  	fcall	_sprintf
  2498     0638                     l2318:
  2499                           
  2500                           ;maestro.c: 228:                 Lcd_Write_String(buffer);
  2501     0638  3029               	movlw	(low (_buffer| 0))& (0+255)
  2502     0639  00F5               	movwf	Lcd_Write_String@a
  2503     063A  3000               	movlw	0
  2504     063B  00F6               	movwf	Lcd_Write_String@a+1
  2505     063C  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  2506     0641                     l2320:
  2507                           
  2508                           ;maestro.c: 229:                 if(PORTAbits.RA1 == 1)
  2509     0641  1283               	bcf	3,5	;RP0=0, select bank0
  2510     0642  1303               	bcf	3,6	;RP1=0, select bank0
  2511     0643  1C85               	btfss	5,1	;volatile
  2512     0644  2E46               	goto	u1861
  2513     0645  2E47               	goto	u1860
  2514     0646                     u1861:
  2515     0646  2E64               	goto	l2332
  2516     0647                     u1860:
  2517     0647                     l130:
  2518     0647  1885               	btfsc	5,1	;volatile
  2519     0648  2E4A               	goto	u1871
  2520     0649  2E4B               	goto	u1870
  2521     064A                     u1871:
  2522     064A  2E47               	goto	l130
  2523     064B                     u1870:
  2524     064B                     l2324:
  2525                           
  2526                           ;maestro.c: 232:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2527     064B  3034               	movlw	52
  2528     064C  1283               	bcf	3,5	;RP0=0, select bank0
  2529     064D  1303               	bcf	3,6	;RP1=0, select bank0
  2530     064E  00D5               	movwf	??_CLK_CONFIG+1
  2531     064F  30F1               	movlw	241
  2532     0650  00D4               	movwf	??_CLK_CONFIG
  2533     0651                     u2257:
  2534     0651  0BD4               	decfsz	??_CLK_CONFIG,f
  2535     0652  2E51               	goto	u2257
  2536     0653  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2537     0654  2E51               	goto	u2257
  2538     0655                     l2326:
  2539                           
  2540                           ;maestro.c: 233:                     dow++;
  2541     0655  3001               	movlw	1
  2542     0656  1283               	bcf	3,5	;RP0=0, select bank0
  2543     0657  1303               	bcf	3,6	;RP1=0, select bank0
  2544     0658  00D4               	movwf	??_CLK_CONFIG
  2545     0659  0854               	movf	??_CLK_CONFIG,w
  2546     065A  07A3               	addwf	_dow,f
  2547     065B                     l2328:
  2548                           
  2549                           ;maestro.c: 234:                     if(dow > 6){
  2550     065B  0823               	movf	_dow,w
  2551     065C  3A80               	xorlw	128
  2552     065D  3E79               	addlw	-135
  2553     065E  1C03               	skipc
  2554     065F  2E61               	goto	u1881
  2555     0660  2E62               	goto	u1880
  2556     0661                     u1881:
  2557     0661  2E64               	goto	l2332
  2558     0662                     u1880:
  2559     0662                     l2330:
  2560                           
  2561                           ;maestro.c: 235:                         dow = 6;
  2562     0662  3006               	movlw	6
  2563     0663  00A3               	movwf	_dow
  2564     0664                     l2332:
  2565                           
  2566                           ;maestro.c: 238:                 if(PORTAbits.RA2 == 1)
  2567     0664  1D05               	btfss	5,2	;volatile
  2568     0665  2E67               	goto	u1891
  2569     0666  2E68               	goto	u1890
  2570     0667                     u1891:
  2571     0667  2FE5               	goto	l173
  2572     0668                     u1890:
  2573     0668                     l135:
  2574     0668  1905               	btfsc	5,2	;volatile
  2575     0669  2E6B               	goto	u1901
  2576     066A  2E6C               	goto	u1900
  2577     066B                     u1901:
  2578     066B  2E68               	goto	l135
  2579     066C                     u1900:
  2580     066C                     l2336:
  2581                           
  2582                           ;maestro.c: 241:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2583     066C  3034               	movlw	52
  2584     066D  1283               	bcf	3,5	;RP0=0, select bank0
  2585     066E  1303               	bcf	3,6	;RP1=0, select bank0
  2586     066F  00D5               	movwf	??_CLK_CONFIG+1
  2587     0670  30F1               	movlw	241
  2588     0671  00D4               	movwf	??_CLK_CONFIG
  2589     0672                     u2267:
  2590     0672  0BD4               	decfsz	??_CLK_CONFIG,f
  2591     0673  2E72               	goto	u2267
  2592     0674  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2593     0675  2E72               	goto	u2267
  2594     0676                     l2338:
  2595                           
  2596                           ;maestro.c: 242:                     dow--;
  2597     0676  30FF               	movlw	255
  2598     0677  1283               	bcf	3,5	;RP0=0, select bank0
  2599     0678  1303               	bcf	3,6	;RP1=0, select bank0
  2600     0679  00D4               	movwf	??_CLK_CONFIG
  2601     067A  0854               	movf	??_CLK_CONFIG,w
  2602     067B  07A3               	addwf	_dow,f
  2603     067C                     l2340:
  2604                           
  2605                           ;maestro.c: 243:                     if(dow == -1){
  2606     067C  0A23               	incf	_dow,w
  2607     067D  1D03               	btfss	3,2
  2608     067E  2E80               	goto	u1911
  2609     067F  2E81               	goto	u1910
  2610     0680                     u1911:
  2611     0680  2FE5               	goto	l173
  2612     0681                     u1910:
  2613     0681                     l2342:
  2614                           
  2615                           ;maestro.c: 244:                         dow = 0;
  2616     0681  01A3               	clrf	_dow
  2617     0682  2FE5               	goto	l173
  2618     0683                     l2344:
  2619                           
  2620                           ;maestro.c: 250:                 Lcd_Set_Cursor(1,1);
  2621     0683  01F4               	clrf	Lcd_Set_Cursor@b
  2622     0684  0AF4               	incf	Lcd_Set_Cursor@b,f
  2623     0685  3001               	movlw	1
  2624     0686  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  2625     068B                     l2346:
  2626                           
  2627                           ;maestro.c: 251:                 sprintf(buffer, "Hora: %02u", horas);
  2628     068B  3059               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2629     068C  1283               	bcf	3,5	;RP0=0, select bank0
  2630     068D  1303               	bcf	3,6	;RP1=0, select bank0
  2631     068E  00BD               	movwf	sprintf@f
  2632     068F  0822               	movf	_horas,w
  2633     0690  00BE               	movwf	?_sprintf+1
  2634     0691  01BF               	clrf	?_sprintf+2
  2635     0692  1BBE               	btfsc	?_sprintf+1,7
  2636     0693  03BF               	decf	?_sprintf+2,f
  2637     0694  3029               	movlw	(low (_buffer| 0))& (0+255)
  2638     0695  120A  118A  2206  120A  118A  	fcall	_sprintf
  2639     069A                     l2348:
  2640                           
  2641                           ;maestro.c: 252:                 Lcd_Write_String(buffer);
  2642     069A  3029               	movlw	(low (_buffer| 0))& (0+255)
  2643     069B  00F5               	movwf	Lcd_Write_String@a
  2644     069C  3000               	movlw	0
  2645     069D  00F6               	movwf	Lcd_Write_String@a+1
  2646     069E  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  2647     06A3                     l2350:
  2648                           
  2649                           ;maestro.c: 253:                 if(PORTAbits.RA1 == 1)
  2650     06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2651     06A4  1303               	bcf	3,6	;RP1=0, select bank0
  2652     06A5  1C85               	btfss	5,1	;volatile
  2653     06A6  2EA8               	goto	u1921
  2654     06A7  2EA9               	goto	u1920
  2655     06A8                     u1921:
  2656     06A8  2EC6               	goto	l2362
  2657     06A9                     u1920:
  2658     06A9                     l141:
  2659     06A9  1885               	btfsc	5,1	;volatile
  2660     06AA  2EAC               	goto	u1931
  2661     06AB  2EAD               	goto	u1930
  2662     06AC                     u1931:
  2663     06AC  2EA9               	goto	l141
  2664     06AD                     u1930:
  2665     06AD                     l2354:
  2666                           
  2667                           ;maestro.c: 256:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2668     06AD  3034               	movlw	52
  2669     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2670     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2671     06B0  00D5               	movwf	??_CLK_CONFIG+1
  2672     06B1  30F1               	movlw	241
  2673     06B2  00D4               	movwf	??_CLK_CONFIG
  2674     06B3                     u2277:
  2675     06B3  0BD4               	decfsz	??_CLK_CONFIG,f
  2676     06B4  2EB3               	goto	u2277
  2677     06B5  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2678     06B6  2EB3               	goto	u2277
  2679     06B7                     l2356:
  2680                           
  2681                           ;maestro.c: 257:                     horas++;
  2682     06B7  3001               	movlw	1
  2683     06B8  1283               	bcf	3,5	;RP0=0, select bank0
  2684     06B9  1303               	bcf	3,6	;RP1=0, select bank0
  2685     06BA  00D4               	movwf	??_CLK_CONFIG
  2686     06BB  0854               	movf	??_CLK_CONFIG,w
  2687     06BC  07A2               	addwf	_horas,f
  2688     06BD                     l2358:
  2689                           
  2690                           ;maestro.c: 258:                     if(horas > 23){
  2691     06BD  0822               	movf	_horas,w
  2692     06BE  3A80               	xorlw	128
  2693     06BF  3E68               	addlw	-152
  2694     06C0  1C03               	skipc
  2695     06C1  2EC3               	goto	u1941
  2696     06C2  2EC4               	goto	u1940
  2697     06C3                     u1941:
  2698     06C3  2EC6               	goto	l2362
  2699     06C4                     u1940:
  2700     06C4                     l2360:
  2701                           
  2702                           ;maestro.c: 259:                         horas = 23;
  2703     06C4  3017               	movlw	23
  2704     06C5  00A2               	movwf	_horas
  2705     06C6                     l2362:
  2706                           
  2707                           ;maestro.c: 262:                 if(PORTAbits.RA2 == 1)
  2708     06C6  1D05               	btfss	5,2	;volatile
  2709     06C7  2EC9               	goto	u1951
  2710     06C8  2ECA               	goto	u1950
  2711     06C9                     u1951:
  2712     06C9  2FE5               	goto	l173
  2713     06CA                     u1950:
  2714     06CA                     l146:
  2715     06CA  1905               	btfsc	5,2	;volatile
  2716     06CB  2ECD               	goto	u1961
  2717     06CC  2ECE               	goto	u1960
  2718     06CD                     u1961:
  2719     06CD  2ECA               	goto	l146
  2720     06CE                     u1960:
  2721     06CE                     l2366:
  2722                           
  2723                           ;maestro.c: 265:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2724     06CE  3034               	movlw	52
  2725     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  2726     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  2727     06D1  00D5               	movwf	??_CLK_CONFIG+1
  2728     06D2  30F1               	movlw	241
  2729     06D3  00D4               	movwf	??_CLK_CONFIG
  2730     06D4                     u2287:
  2731     06D4  0BD4               	decfsz	??_CLK_CONFIG,f
  2732     06D5  2ED4               	goto	u2287
  2733     06D6  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2734     06D7  2ED4               	goto	u2287
  2735     06D8                     l2368:
  2736                           
  2737                           ;maestro.c: 266:                     horas--;
  2738     06D8  30FF               	movlw	255
  2739     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2740     06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2741     06DB  00D4               	movwf	??_CLK_CONFIG
  2742     06DC  0854               	movf	??_CLK_CONFIG,w
  2743     06DD  07A2               	addwf	_horas,f
  2744     06DE                     l2370:
  2745                           
  2746                           ;maestro.c: 267:                     if(horas == -1){
  2747     06DE  0A22               	incf	_horas,w
  2748     06DF  1D03               	btfss	3,2
  2749     06E0  2EE2               	goto	u1971
  2750     06E1  2EE3               	goto	u1970
  2751     06E2                     u1971:
  2752     06E2  2FE5               	goto	l173
  2753     06E3                     u1970:
  2754     06E3                     l2372:
  2755                           
  2756                           ;maestro.c: 268:                         horas = 0;
  2757     06E3  01A2               	clrf	_horas
  2758     06E4  2FE5               	goto	l173
  2759     06E5                     l2374:
  2760                           
  2761                           ;maestro.c: 274:                 Lcd_Set_Cursor(1,1);
  2762     06E5  01F4               	clrf	Lcd_Set_Cursor@b
  2763     06E6  0AF4               	incf	Lcd_Set_Cursor@b,f
  2764     06E7  3001               	movlw	1
  2765     06E8  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  2766     06ED                     l2376:
  2767                           
  2768                           ;maestro.c: 275:                 sprintf(buffer, "minutosuto: %02u", minutos);
  2769     06ED  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2770     06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2771     06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2772     06F0  00BD               	movwf	sprintf@f
  2773     06F1  0821               	movf	_minutos,w
  2774     06F2  00BE               	movwf	?_sprintf+1
  2775     06F3  01BF               	clrf	?_sprintf+2
  2776     06F4  1BBE               	btfsc	?_sprintf+1,7
  2777     06F5  03BF               	decf	?_sprintf+2,f
  2778     06F6  3029               	movlw	(low (_buffer| 0))& (0+255)
  2779     06F7  120A  118A  2206  120A  118A  	fcall	_sprintf
  2780     06FC                     l2378:
  2781                           
  2782                           ;maestro.c: 276:                 Lcd_Write_String(buffer);
  2783     06FC  3029               	movlw	(low (_buffer| 0))& (0+255)
  2784     06FD  00F5               	movwf	Lcd_Write_String@a
  2785     06FE  3000               	movlw	0
  2786     06FF  00F6               	movwf	Lcd_Write_String@a+1
  2787     0700  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  2788     0705                     l2380:
  2789                           
  2790                           ;maestro.c: 277:                 if(PORTAbits.RA1 == 1)
  2791     0705  1283               	bcf	3,5	;RP0=0, select bank0
  2792     0706  1303               	bcf	3,6	;RP1=0, select bank0
  2793     0707  1C85               	btfss	5,1	;volatile
  2794     0708  2F0A               	goto	u1981
  2795     0709  2F0B               	goto	u1980
  2796     070A                     u1981:
  2797     070A  2F28               	goto	l2392
  2798     070B                     u1980:
  2799     070B                     l152:
  2800     070B  1885               	btfsc	5,1	;volatile
  2801     070C  2F0E               	goto	u1991
  2802     070D  2F0F               	goto	u1990
  2803     070E                     u1991:
  2804     070E  2F0B               	goto	l152
  2805     070F                     u1990:
  2806     070F                     l2384:
  2807                           
  2808                           ;maestro.c: 280:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2809     070F  3034               	movlw	52
  2810     0710  1283               	bcf	3,5	;RP0=0, select bank0
  2811     0711  1303               	bcf	3,6	;RP1=0, select bank0
  2812     0712  00D5               	movwf	??_CLK_CONFIG+1
  2813     0713  30F1               	movlw	241
  2814     0714  00D4               	movwf	??_CLK_CONFIG
  2815     0715                     u2297:
  2816     0715  0BD4               	decfsz	??_CLK_CONFIG,f
  2817     0716  2F15               	goto	u2297
  2818     0717  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2819     0718  2F15               	goto	u2297
  2820     0719                     l2386:
  2821                           
  2822                           ;maestro.c: 281:                     minutos++;
  2823     0719  3001               	movlw	1
  2824     071A  1283               	bcf	3,5	;RP0=0, select bank0
  2825     071B  1303               	bcf	3,6	;RP1=0, select bank0
  2826     071C  00D4               	movwf	??_CLK_CONFIG
  2827     071D  0854               	movf	??_CLK_CONFIG,w
  2828     071E  07A1               	addwf	_minutos,f
  2829     071F                     l2388:
  2830                           
  2831                           ;maestro.c: 282:                     if(minutos > 59){
  2832     071F  0821               	movf	_minutos,w
  2833     0720  3A80               	xorlw	128
  2834     0721  3E44               	addlw	-188
  2835     0722  1C03               	skipc
  2836     0723  2F25               	goto	u2001
  2837     0724  2F26               	goto	u2000
  2838     0725                     u2001:
  2839     0725  2F28               	goto	l2392
  2840     0726                     u2000:
  2841     0726                     l2390:
  2842                           
  2843                           ;maestro.c: 283:                         minutos = 59;
  2844     0726  303B               	movlw	59
  2845     0727  00A1               	movwf	_minutos
  2846     0728                     l2392:
  2847                           
  2848                           ;maestro.c: 286:                 if(PORTAbits.RA2 == 1)
  2849     0728  1D05               	btfss	5,2	;volatile
  2850     0729  2F2B               	goto	u2011
  2851     072A  2F2C               	goto	u2010
  2852     072B                     u2011:
  2853     072B  2FE5               	goto	l173
  2854     072C                     u2010:
  2855     072C                     l157:
  2856     072C  1905               	btfsc	5,2	;volatile
  2857     072D  2F2F               	goto	u2021
  2858     072E  2F30               	goto	u2020
  2859     072F                     u2021:
  2860     072F  2F2C               	goto	l157
  2861     0730                     u2020:
  2862     0730                     l2396:
  2863                           
  2864                           ;maestro.c: 289:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2865     0730  3034               	movlw	52
  2866     0731  1283               	bcf	3,5	;RP0=0, select bank0
  2867     0732  1303               	bcf	3,6	;RP1=0, select bank0
  2868     0733  00D5               	movwf	??_CLK_CONFIG+1
  2869     0734  30F1               	movlw	241
  2870     0735  00D4               	movwf	??_CLK_CONFIG
  2871     0736                     u2307:
  2872     0736  0BD4               	decfsz	??_CLK_CONFIG,f
  2873     0737  2F36               	goto	u2307
  2874     0738  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2875     0739  2F36               	goto	u2307
  2876     073A                     l2398:
  2877                           
  2878                           ;maestro.c: 290:                     minutos--;
  2879     073A  30FF               	movlw	255
  2880     073B  1283               	bcf	3,5	;RP0=0, select bank0
  2881     073C  1303               	bcf	3,6	;RP1=0, select bank0
  2882     073D  00D4               	movwf	??_CLK_CONFIG
  2883     073E  0854               	movf	??_CLK_CONFIG,w
  2884     073F  07A1               	addwf	_minutos,f
  2885     0740                     l2400:
  2886                           
  2887                           ;maestro.c: 291:                     if(minutos == -1){
  2888     0740  0A21               	incf	_minutos,w
  2889     0741  1D03               	btfss	3,2
  2890     0742  2F44               	goto	u2031
  2891     0743  2F45               	goto	u2030
  2892     0744                     u2031:
  2893     0744  2FE5               	goto	l173
  2894     0745                     u2030:
  2895     0745                     l2402:
  2896                           
  2897                           ;maestro.c: 292:                         minutos = 0;
  2898     0745  01A1               	clrf	_minutos
  2899     0746  2FE5               	goto	l173
  2900     0747                     l2404:
  2901                           
  2902                           ;maestro.c: 298:                 Lcd_Set_Cursor(1,1);
  2903     0747  01F4               	clrf	Lcd_Set_Cursor@b
  2904     0748  0AF4               	incf	Lcd_Set_Cursor@b,f
  2905     0749  3001               	movlw	1
  2906     074A  120A  158A  2726  120A  118A  	fcall	_Lcd_Set_Cursor
  2907     074F                     l2406:
  2908                           
  2909                           ;maestro.c: 299:                 sprintf(buffer, "Segundo: %02u", segundos);
  2910     074F  304B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2911     0750  1283               	bcf	3,5	;RP0=0, select bank0
  2912     0751  1303               	bcf	3,6	;RP1=0, select bank0
  2913     0752  00BD               	movwf	sprintf@f
  2914     0753  0820               	movf	_segundos,w
  2915     0754  00BE               	movwf	?_sprintf+1
  2916     0755  01BF               	clrf	?_sprintf+2
  2917     0756  1BBE               	btfsc	?_sprintf+1,7
  2918     0757  03BF               	decf	?_sprintf+2,f
  2919     0758  3029               	movlw	(low (_buffer| 0))& (0+255)
  2920     0759  120A  118A  2206  120A  118A  	fcall	_sprintf
  2921     075E                     l2408:
  2922                           
  2923                           ;maestro.c: 300:                 Lcd_Write_String(buffer);
  2924     075E  3029               	movlw	(low (_buffer| 0))& (0+255)
  2925     075F  00F5               	movwf	Lcd_Write_String@a
  2926     0760  3000               	movlw	0
  2927     0761  00F6               	movwf	Lcd_Write_String@a+1
  2928     0762  120A  158A  26A0  120A  118A  	fcall	_Lcd_Write_String
  2929     0767                     l2410:
  2930                           
  2931                           ;maestro.c: 301:                 if(PORTAbits.RA1 == 1)
  2932     0767  1283               	bcf	3,5	;RP0=0, select bank0
  2933     0768  1303               	bcf	3,6	;RP1=0, select bank0
  2934     0769  1C85               	btfss	5,1	;volatile
  2935     076A  2F6C               	goto	u2041
  2936     076B  2F6D               	goto	u2040
  2937     076C                     u2041:
  2938     076C  2F8A               	goto	l2422
  2939     076D                     u2040:
  2940     076D                     l163:
  2941     076D  1885               	btfsc	5,1	;volatile
  2942     076E  2F70               	goto	u2051
  2943     076F  2F71               	goto	u2050
  2944     0770                     u2051:
  2945     0770  2F6D               	goto	l163
  2946     0771                     u2050:
  2947     0771                     l2414:
  2948                           
  2949                           ;maestro.c: 304:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2950     0771  3034               	movlw	52
  2951     0772  1283               	bcf	3,5	;RP0=0, select bank0
  2952     0773  1303               	bcf	3,6	;RP1=0, select bank0
  2953     0774  00D5               	movwf	??_CLK_CONFIG+1
  2954     0775  30F1               	movlw	241
  2955     0776  00D4               	movwf	??_CLK_CONFIG
  2956     0777                     u2317:
  2957     0777  0BD4               	decfsz	??_CLK_CONFIG,f
  2958     0778  2F77               	goto	u2317
  2959     0779  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2960     077A  2F77               	goto	u2317
  2961     077B                     l2416:
  2962                           
  2963                           ;maestro.c: 305:                     segundos++;
  2964     077B  3001               	movlw	1
  2965     077C  1283               	bcf	3,5	;RP0=0, select bank0
  2966     077D  1303               	bcf	3,6	;RP1=0, select bank0
  2967     077E  00D4               	movwf	??_CLK_CONFIG
  2968     077F  0854               	movf	??_CLK_CONFIG,w
  2969     0780  07A0               	addwf	_segundos,f
  2970     0781                     l2418:
  2971                           
  2972                           ;maestro.c: 306:                     if(segundos > 59){
  2973     0781  0820               	movf	_segundos,w
  2974     0782  3A80               	xorlw	128
  2975     0783  3E44               	addlw	-188
  2976     0784  1C03               	skipc
  2977     0785  2F87               	goto	u2061
  2978     0786  2F88               	goto	u2060
  2979     0787                     u2061:
  2980     0787  2F8A               	goto	l2422
  2981     0788                     u2060:
  2982     0788                     l2420:
  2983                           
  2984                           ;maestro.c: 307:                         segundos = 59;
  2985     0788  303B               	movlw	59
  2986     0789  00A0               	movwf	_segundos
  2987     078A                     l2422:
  2988                           
  2989                           ;maestro.c: 310:                 if(PORTAbits.RA2 == 1)
  2990     078A  1D05               	btfss	5,2	;volatile
  2991     078B  2F8D               	goto	u2071
  2992     078C  2F8E               	goto	u2070
  2993     078D                     u2071:
  2994     078D  2FE5               	goto	l173
  2995     078E                     u2070:
  2996     078E                     l168:
  2997     078E  1905               	btfsc	5,2	;volatile
  2998     078F  2F91               	goto	u2081
  2999     0790  2F92               	goto	u2080
  3000     0791                     u2081:
  3001     0791  2F8E               	goto	l168
  3002     0792                     u2080:
  3003     0792                     l2426:
  3004                           
  3005                           ;maestro.c: 313:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  3006     0792  3034               	movlw	52
  3007     0793  1283               	bcf	3,5	;RP0=0, select bank0
  3008     0794  1303               	bcf	3,6	;RP1=0, select bank0
  3009     0795  00D5               	movwf	??_CLK_CONFIG+1
  3010     0796  30F1               	movlw	241
  3011     0797  00D4               	movwf	??_CLK_CONFIG
  3012     0798                     u2327:
  3013     0798  0BD4               	decfsz	??_CLK_CONFIG,f
  3014     0799  2F98               	goto	u2327
  3015     079A  0BD5               	decfsz	??_CLK_CONFIG+1,f
  3016     079B  2F98               	goto	u2327
  3017     079C                     l2428:
  3018                           
  3019                           ;maestro.c: 314:                     segundos--;
  3020     079C  30FF               	movlw	255
  3021     079D  1283               	bcf	3,5	;RP0=0, select bank0
  3022     079E  1303               	bcf	3,6	;RP1=0, select bank0
  3023     079F  00D4               	movwf	??_CLK_CONFIG
  3024     07A0  0854               	movf	??_CLK_CONFIG,w
  3025     07A1  07A0               	addwf	_segundos,f
  3026     07A2                     l2430:
  3027                           
  3028                           ;maestro.c: 315:                     if(segundos == -1){
  3029     07A2  0A20               	incf	_segundos,w
  3030     07A3  1D03               	btfss	3,2
  3031     07A4  2FA6               	goto	u2091
  3032     07A5  2FA7               	goto	u2090
  3033     07A6                     u2091:
  3034     07A6  2FE5               	goto	l173
  3035     07A7                     u2090:
  3036     07A7                     l2432:
  3037                           
  3038                           ;maestro.c: 316:                         segundos = 0;
  3039     07A7  01A0               	clrf	_segundos
  3040     07A8  2FE5               	goto	l173
  3041     07A9                     l2434:
  3042                           
  3043                           ;maestro.c: 329:                 DS3231_Set_Date_Time(dia,mes,ano,dow,horas,minutos,segu
      +                          ndos);
  3044     07A9  0825               	movf	_mes,w
  3045     07AA  00F4               	movwf	DS3231_Set_Date_Time@mth
  3046     07AB  0824               	movf	_ano,w
  3047     07AC  00F5               	movwf	DS3231_Set_Date_Time@yr
  3048     07AD  0823               	movf	_dow,w
  3049     07AE  00F6               	movwf	DS3231_Set_Date_Time@dw
  3050     07AF  0822               	movf	_horas,w
  3051     07B0  00F7               	movwf	DS3231_Set_Date_Time@hr
  3052     07B1  0821               	movf	_minutos,w
  3053     07B2  00F8               	movwf	DS3231_Set_Date_Time@mn
  3054     07B3  0820               	movf	_segundos,w
  3055     07B4  00F9               	movwf	DS3231_Set_Date_Time@sc
  3056     07B5  0826               	movf	_dia,w
  3057     07B6  120A  118A  2199  120A  118A  	fcall	_DS3231_Set_Date_Time
  3058     07BB                     l2436:
  3059                           
  3060                           ;maestro.c: 330:                 selector = 0;
  3061     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3062     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3063     07BD  01A7               	clrf	_selector
  3064                           
  3065                           ;maestro.c: 331:                 break;
  3066     07BE  2FE5               	goto	l173
  3067     07BF                     l2440:
  3068     07BF  1283               	bcf	3,5	;RP0=0, select bank0
  3069     07C0  1303               	bcf	3,6	;RP1=0, select bank0
  3070     07C1  0827               	movf	_selector,w
  3071     07C2  00D4               	movwf	??_CLK_CONFIG
  3072     07C3  01D5               	clrf	??_CLK_CONFIG+1
  3073     07C4  1BD4               	btfsc	??_CLK_CONFIG,7
  3074     07C5  03D5               	decf	??_CLK_CONFIG+1,f
  3075                           
  3076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3077                           ; Switch size 1, requested type "simple"
  3078                           ; Number of cases is 1, Range of values is 0 to 0
  3079                           ; switch strategies available:
  3080                           ; Name         Instructions Cycles
  3081                           ; simple_byte            4     3 (average)
  3082                           ; direct_byte           11     8 (fixed)
  3083                           ; jumptable            260     6 (fixed)
  3084                           ;	Chosen strategy is simple_byte
  3085     07C6  0855               	movf	??_CLK_CONFIG+1,w
  3086     07C7  3A00               	xorlw	0	; case 0
  3087     07C8  1903               	skipnz
  3088     07C9  2FCB               	goto	l2538
  3089     07CA  2FA9               	goto	l2434
  3090     07CB                     l2538:
  3091                           
  3092                           ; Switch size 1, requested type "simple"
  3093                           ; Number of cases is 8, Range of values is 0 to 7
  3094                           ; switch strategies available:
  3095                           ; Name         Instructions Cycles
  3096                           ; simple_byte           25    13 (average)
  3097                           ; direct_byte           32     8 (fixed)
  3098                           ; jumptable            260     6 (fixed)
  3099                           ;	Chosen strategy is simple_byte
  3100     07CB  0854               	movf	??_CLK_CONFIG,w
  3101     07CC  3A00               	xorlw	0	; case 0
  3102     07CD  1903               	skipnz
  3103     07CE  2C11               	goto	l2194
  3104     07CF  3A01               	xorlw	1	; case 1
  3105     07D0  1903               	skipnz
  3106     07D1  2CCE               	goto	l2220
  3107     07D2  3A03               	xorlw	3	; case 2
  3108     07D3  1903               	skipnz
  3109     07D4  2D33               	goto	l2250
  3110     07D5  3A01               	xorlw	1	; case 3
  3111     07D6  1903               	skipnz
  3112     07D7  2D98               	goto	l2280
  3113     07D8  3A07               	xorlw	7	; case 4
  3114     07D9  1903               	skipnz
  3115     07DA  2DFA               	goto	l2310
  3116     07DB  3A01               	xorlw	1	; case 5
  3117     07DC  1903               	skipnz
  3118     07DD  2E83               	goto	l2344
  3119     07DE  3A03               	xorlw	3	; case 6
  3120     07DF  1903               	skipnz
  3121     07E0  2EE5               	goto	l2374
  3122     07E1  3A01               	xorlw	1	; case 7
  3123     07E2  1903               	skipnz
  3124     07E3  2F47               	goto	l2404
  3125     07E4  2FA9               	goto	l2434
  3126     07E5                     l173:
  3127     07E5  0008               	return
  3128     07E6                     __end_of_CLK_CONFIG:
  3129                           
  3130                           	psect	text6
  3131     0206                     __ptext6:	
  3132 ;; *************** function _sprintf *****************
  3133 ;; Defined at:
  3134 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  sp              1    wreg     PTR unsigned char 
  3137 ;;		 -> buffer(20), 
  3138 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3139 ;;		 -> STR_13(3), STR_12(14), STR_11(17), STR_10(11), 
  3140 ;;		 -> STR_9(7), STR_8(15), STR_7(10), STR_6(10), 
  3141 ;;		 -> STR_5(10), STR_4(15), STR_3(17), STR_2(4), 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  sp              1   22[BANK0 ] PTR unsigned char 
  3144 ;;		 -> buffer(20), 
  3145 ;;  tmpval          4    0        struct .
  3146 ;;  width           2   19[BANK0 ] int 
  3147 ;;  len             2   17[BANK0 ] unsigned int 
  3148 ;;  cp              2   15[BANK0 ] PTR const unsigned char 
  3149 ;;		 -> STR_14(7), ?_sprintf(2), dw(77), 
  3150 ;;  val             2   11[BANK0 ] unsigned int 
  3151 ;;  c               1   21[BANK0 ] unsigned char 
  3152 ;;  ap              1   14[BANK0 ] PTR void [1]
  3153 ;;		 -> ?_sprintf(2), 
  3154 ;;  prec            1   13[BANK0 ] char 
  3155 ;;  flag            1   10[BANK0 ] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  2    0[BANK0 ] int 
  3158 ;; Registers used:
  3159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3165 ;;      Params:         0       7       0       0       0
  3166 ;;      Locals:         0      13       0       0       0
  3167 ;;      Temps:          0       3       0       0       0
  3168 ;;      Totals:         0      23       0       0       0
  3169 ;;Total ram usage:       23 bytes
  3170 ;; Hardware stack levels used: 1
  3171 ;; Hardware stack levels required when called: 1
  3172 ;; This function calls:
  3173 ;;		___lwdiv
  3174 ;;		___lwmod
  3175 ;;		___wmul
  3176 ;;		_isdigit
  3177 ;; This function is called by:
  3178 ;;		_CLK_CONFIG
  3179 ;;		_DS3231_Get_DayOfWeek
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183     0206                     _sprintf:	
  3184                           ;psect for function _sprintf
  3185                           
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3189                           ;sprintf@sp stored from wreg
  3190     0206  1283               	bcf	3,5	;RP0=0, select bank0
  3191     0207  1303               	bcf	3,6	;RP1=0, select bank0
  3192     0208  00D3               	movwf	sprintf@sp
  3193     0209                     l2000:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  3196     0209  303E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3197     020A  00CB               	movwf	sprintf@ap
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3200     020B  2BFB               	goto	l2118
  3201     020C                     l2002:
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3204     020C  3025               	movlw	37
  3205     020D  0652               	xorwf	sprintf@c,w
  3206     020E  1903               	btfsc	3,2
  3207     020F  2A11               	goto	u1481
  3208     0210  2A12               	goto	u1480
  3209     0211                     u1481:
  3210     0211  2A1C               	goto	l2008
  3211     0212                     u1480:
  3212     0212                     l2004:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3215     0212  0853               	movf	sprintf@sp,w
  3216     0213  0084               	movwf	4
  3217     0214  0852               	movf	sprintf@c,w
  3218     0215  1383               	bcf	3,7	;select IRP bank0
  3219     0216  0080               	movwf	0
  3220     0217                     l2006:
  3221     0217  3001               	movlw	1
  3222     0218  00C4               	movwf	??_sprintf
  3223     0219  0844               	movf	??_sprintf,w
  3224     021A  07D3               	addwf	sprintf@sp,f
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  3227     021B  2BFB               	goto	l2118
  3228     021C                     l2008:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3231     021C  01D0               	clrf	sprintf@width
  3232     021D  01D1               	clrf	sprintf@width+1
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3235     021E  01C7               	clrf	sprintf@flag
  3236     021F  2A25               	goto	l2014
  3237     0220                     l430:	
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  3239                           
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  3242     0220  1547               	bsf	sprintf@flag,2
  3243     0221                     l2010:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  3246     0221  3001               	movlw	1
  3247     0222  00C4               	movwf	??_sprintf
  3248     0223  0844               	movf	??_sprintf,w
  3249     0224  07BD               	addwf	sprintf@f,f
  3250     0225                     l2014:	
  3251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  3252                           
  3253     0225  083D               	movf	sprintf@f,w
  3254     0226  0084               	movwf	4
  3255     0227  120A  118A  200D  120A  118A  	fcall	stringdir
  3256     022C  00C4               	movwf	??_sprintf
  3257     022D  01C5               	clrf	??_sprintf+1
  3258                           
  3259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3260                           ; Switch size 1, requested type "simple"
  3261                           ; Number of cases is 1, Range of values is 0 to 0
  3262                           ; switch strategies available:
  3263                           ; Name         Instructions Cycles
  3264                           ; simple_byte            4     3 (average)
  3265                           ; direct_byte           11     8 (fixed)
  3266                           ; jumptable            260     6 (fixed)
  3267                           ;	Chosen strategy is simple_byte
  3268     022E  0845               	movf	??_sprintf+1,w
  3269     022F  3A00               	xorlw	0	; case 0
  3270     0230  1903               	skipnz
  3271     0231  2A33               	goto	l2540
  3272     0232  2A38               	goto	l2016
  3273     0233                     l2540:
  3274                           
  3275                           ; Switch size 1, requested type "simple"
  3276                           ; Number of cases is 1, Range of values is 48 to 48
  3277                           ; switch strategies available:
  3278                           ; Name         Instructions Cycles
  3279                           ; simple_byte            4     3 (average)
  3280                           ; direct_byte           14    11 (fixed)
  3281                           ; jumptable            263     9 (fixed)
  3282                           ;	Chosen strategy is simple_byte
  3283     0233  0844               	movf	??_sprintf,w
  3284     0234  3A30               	xorlw	48	; case 48
  3285     0235  1903               	skipnz
  3286     0236  2A20               	goto	l430
  3287     0237  2A38               	goto	l2016
  3288     0238                     l2016:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3291     0238  083D               	movf	sprintf@f,w
  3292     0239  0084               	movwf	4
  3293     023A  120A  118A  200D  120A  118A  	fcall	stringdir
  3294     023F  120A  158A  24FA  120A  118A  	fcall	_isdigit
  3295     0244  1C03               	btfss	3,0
  3296     0245  2A47               	goto	u1491
  3297     0246  2A48               	goto	u1490
  3298     0247                     u1491:
  3299     0247  2B11               	goto	l2066
  3300     0248                     u1490:
  3301     0248                     l2018:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3304     0248  1283               	bcf	3,5	;RP0=0, select bank0
  3305     0249  1303               	bcf	3,6	;RP1=0, select bank0
  3306     024A  01D0               	clrf	sprintf@width
  3307     024B  01D1               	clrf	sprintf@width+1
  3308     024C                     l2020:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3311     024C  300A               	movlw	10
  3312     024D  00F0               	movwf	___wmul@multiplier
  3313     024E  3000               	movlw	0
  3314     024F  00F1               	movwf	___wmul@multiplier+1
  3315     0250  1283               	bcf	3,5	;RP0=0, select bank0
  3316     0251  1303               	bcf	3,6	;RP1=0, select bank0
  3317     0252  0851               	movf	sprintf@width+1,w
  3318     0253  00F3               	movwf	___wmul@multiplicand+1
  3319     0254  0850               	movf	sprintf@width,w
  3320     0255  00F2               	movwf	___wmul@multiplicand
  3321     0256  120A  158A  25E0  120A  118A  	fcall	___wmul
  3322     025B  0871               	movf	?___wmul+1,w
  3323     025C  1283               	bcf	3,5	;RP0=0, select bank0
  3324     025D  1303               	bcf	3,6	;RP1=0, select bank0
  3325     025E  00D1               	movwf	sprintf@width+1
  3326     025F  0870               	movf	?___wmul,w
  3327     0260  00D0               	movwf	sprintf@width
  3328     0261                     l2022:
  3329                           
  3330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3331     0261  083D               	movf	sprintf@f,w
  3332     0262  0084               	movwf	4
  3333     0263  120A  118A  200D  120A  118A  	fcall	stringdir
  3334     0268  3ED0               	addlw	208
  3335     0269  00C4               	movwf	??_sprintf
  3336     026A  30FF               	movlw	255
  3337     026B  1803               	skipnc
  3338     026C  3000               	movlw	0
  3339     026D  00C5               	movwf	??_sprintf+1
  3340     026E  0844               	movf	??_sprintf,w
  3341     026F  07D0               	addwf	sprintf@width,f
  3342     0270  1803               	skipnc
  3343     0271  0AD1               	incf	sprintf@width+1,f
  3344     0272  0845               	movf	??_sprintf+1,w
  3345     0273  07D1               	addwf	sprintf@width+1,f
  3346     0274                     l2024:
  3347     0274  3001               	movlw	1
  3348     0275  00C4               	movwf	??_sprintf
  3349     0276  0844               	movf	??_sprintf,w
  3350     0277  07BD               	addwf	sprintf@f,f
  3351     0278                     l2026:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3354     0278  083D               	movf	sprintf@f,w
  3355     0279  0084               	movwf	4
  3356     027A  120A  118A  200D  120A  118A  	fcall	stringdir
  3357     027F  120A  158A  24FA  120A  118A  	fcall	_isdigit
  3358     0284  1803               	btfsc	3,0
  3359     0285  2A87               	goto	u1501
  3360     0286  2A88               	goto	u1500
  3361     0287                     u1501:
  3362     0287  2A4C               	goto	l2020
  3363     0288                     u1500:
  3364     0288  2B11               	goto	l2066
  3365     0289                     l2028:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  3368     0289  084B               	movf	sprintf@ap,w
  3369     028A  0084               	movwf	4
  3370     028B  1383               	bcf	3,7	;select IRP bank0
  3371     028C  0800               	movf	0,w
  3372     028D  00CC               	movwf	sprintf@cp
  3373     028E  3000               	movlw	0
  3374     028F  00CD               	movwf	sprintf@cp+1
  3375     0290                     l2030:
  3376     0290  3001               	movlw	1
  3377     0291  00C4               	movwf	??_sprintf
  3378     0292  0844               	movf	??_sprintf,w
  3379     0293  07CB               	addwf	sprintf@ap,f
  3380     0294                     l2032:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  3383     0294  084C               	movf	sprintf@cp,w
  3384     0295  044D               	iorwf	sprintf@cp+1,w
  3385     0296  1D03               	btfss	3,2
  3386     0297  2A99               	goto	u1511
  3387     0298  2A9A               	goto	u1510
  3388     0299                     u1511:
  3389     0299  2A9E               	goto	l2036
  3390     029A                     u1510:
  3391     029A                     l2034:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  3394     029A  3082               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3395     029B  00CC               	movwf	sprintf@cp
  3396     029C  3080               	movlw	128
  3397     029D  00CD               	movwf	sprintf@cp+1
  3398     029E                     l2036:
  3399                           
  3400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  3401     029E  01CE               	clrf	sprintf@len
  3402     029F  01CF               	clrf	sprintf@len+1
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  3405     02A0  2AA7               	goto	l2040
  3406     02A1                     l2038:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 773:     len++;
  3409     02A1  3001               	movlw	1
  3410     02A2  07CE               	addwf	sprintf@len,f
  3411     02A3  1803               	skipnc
  3412     02A4  0ACF               	incf	sprintf@len+1,f
  3413     02A5  3000               	movlw	0
  3414     02A6  07CF               	addwf	sprintf@len+1,f
  3415     02A7                     l2040:
  3416                           
  3417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  3418     02A7  084E               	movf	sprintf@len,w
  3419     02A8  074C               	addwf	sprintf@cp,w
  3420     02A9  0084               	movwf	4
  3421     02AA  084D               	movf	sprintf@cp+1,w
  3422     02AB  1803               	skipnc
  3423     02AC  0A4D               	incf	sprintf@cp+1,w
  3424     02AD  00FF               	movwf	btemp+1
  3425     02AE  120A  118A  2003  120A  118A  	fcall	stringtab
  3426     02B3  3A00               	xorlw	0
  3427     02B4  1D03               	skipz
  3428     02B5  2AB7               	goto	u1521
  3429     02B6  2AB8               	goto	u1520
  3430     02B7                     u1521:
  3431     02B7  2AA1               	goto	l2038
  3432     02B8                     u1520:
  3433     02B8                     l2042:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  3436     02B8  0851               	movf	sprintf@width+1,w
  3437     02B9  024F               	subwf	sprintf@len+1,w
  3438     02BA  1D03               	skipz
  3439     02BB  2ABE               	goto	u1535
  3440     02BC  0850               	movf	sprintf@width,w
  3441     02BD  024E               	subwf	sprintf@len,w
  3442     02BE                     u1535:
  3443     02BE  1803               	skipnc
  3444     02BF  2AC1               	goto	u1531
  3445     02C0  2AC2               	goto	u1530
  3446     02C1                     u1531:
  3447     02C1  2AC9               	goto	l2046
  3448     02C2                     u1530:
  3449     02C2                     l2044:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  3452     02C2  084E               	movf	sprintf@len,w
  3453     02C3  02D0               	subwf	sprintf@width,f
  3454     02C4  084F               	movf	sprintf@len+1,w
  3455     02C5  1C03               	skipc
  3456     02C6  03D1               	decf	sprintf@width+1,f
  3457     02C7  02D1               	subwf	sprintf@width+1,f
  3458     02C8  2AD5               	goto	l2052
  3459     02C9                     l2046:
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  3462     02C9  01D0               	clrf	sprintf@width
  3463     02CA  01D1               	clrf	sprintf@width+1
  3464     02CB  2AD5               	goto	l2052
  3465     02CC                     l2048:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  3468     02CC  0853               	movf	sprintf@sp,w
  3469     02CD  0084               	movwf	4
  3470     02CE  3020               	movlw	32
  3471     02CF  1383               	bcf	3,7	;select IRP bank0
  3472     02D0  0080               	movwf	0
  3473     02D1                     l2050:
  3474     02D1  3001               	movlw	1
  3475     02D2  00C4               	movwf	??_sprintf
  3476     02D3  0844               	movf	??_sprintf,w
  3477     02D4  07D3               	addwf	sprintf@sp,f
  3478     02D5                     l2052:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  3481     02D5  30FF               	movlw	255
  3482     02D6  07D0               	addwf	sprintf@width,f
  3483     02D7  1803               	skipnc
  3484     02D8  0AD1               	incf	sprintf@width+1,f
  3485     02D9  30FF               	movlw	255
  3486     02DA  07D1               	addwf	sprintf@width+1,f
  3487     02DB  0A50               	incf	sprintf@width,w
  3488     02DC  1D03               	skipz
  3489     02DD  2AE2               	goto	u1541
  3490     02DE  0A51               	incf	sprintf@width+1,w
  3491     02DF  1D03               	btfss	3,2
  3492     02E0  2AE2               	goto	u1541
  3493     02E1  2AE3               	goto	u1540
  3494     02E2                     u1541:
  3495     02E2  2ACC               	goto	l2048
  3496     02E3                     u1540:
  3497     02E3  2AFD               	goto	l2060
  3498     02E4                     l2054:
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  3501     02E4  084D               	movf	sprintf@cp+1,w
  3502     02E5  00FF               	movwf	btemp+1
  3503     02E6  084C               	movf	sprintf@cp,w
  3504     02E7  0084               	movwf	4
  3505     02E8  120A  118A  2003  120A  118A  	fcall	stringtab
  3506     02ED  00C4               	movwf	??_sprintf
  3507     02EE  0853               	movf	sprintf@sp,w
  3508     02EF  0084               	movwf	4
  3509     02F0  0844               	movf	??_sprintf,w
  3510     02F1  1383               	bcf	3,7	;select IRP bank0
  3511     02F2  0080               	movwf	0
  3512     02F3                     l2056:
  3513     02F3  3001               	movlw	1
  3514     02F4  07CC               	addwf	sprintf@cp,f
  3515     02F5  1803               	skipnc
  3516     02F6  0ACD               	incf	sprintf@cp+1,f
  3517     02F7  3000               	movlw	0
  3518     02F8  07CD               	addwf	sprintf@cp+1,f
  3519     02F9                     l2058:
  3520     02F9  3001               	movlw	1
  3521     02FA  00C4               	movwf	??_sprintf
  3522     02FB  0844               	movf	??_sprintf,w
  3523     02FC  07D3               	addwf	sprintf@sp,f
  3524     02FD                     l2060:
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  3527     02FD  3001               	movlw	1
  3528     02FE  02CE               	subwf	sprintf@len,f
  3529     02FF  3000               	movlw	0
  3530     0300  1C03               	skipc
  3531     0301  03CF               	decf	sprintf@len+1,f
  3532     0302  02CF               	subwf	sprintf@len+1,f
  3533     0303  0A4E               	incf	sprintf@len,w
  3534     0304  1D03               	skipz
  3535     0305  2B0A               	goto	u1551
  3536     0306  0A4F               	incf	sprintf@len+1,w
  3537     0307  1D03               	btfss	3,2
  3538     0308  2B0A               	goto	u1551
  3539     0309  2B0B               	goto	u1550
  3540     030A                     u1551:
  3541     030A  2AE4               	goto	l2054
  3542     030B                     u1550:
  3543     030B  2BFB               	goto	l2118
  3544     030C                     l2062:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  3547     030C  30C0               	movlw	192
  3548     030D  00C4               	movwf	??_sprintf
  3549     030E  0844               	movf	??_sprintf,w
  3550     030F  04C7               	iorwf	sprintf@flag,f
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  3553     0310  2B30               	goto	l2068
  3554     0311                     l2066:
  3555     0311  3001               	movlw	1
  3556     0312  1283               	bcf	3,5	;RP0=0, select bank0
  3557     0313  1303               	bcf	3,6	;RP1=0, select bank0
  3558     0314  07BD               	addwf	sprintf@f,f
  3559     0315  30FF               	movlw	-1
  3560     0316  073D               	addwf	sprintf@f,w
  3561     0317  0084               	movwf	4
  3562     0318  120A  118A  200D  120A  118A  	fcall	stringdir
  3563     031D  00D2               	movwf	sprintf@c
  3564     031E  00C4               	movwf	??_sprintf
  3565     031F  01C5               	clrf	??_sprintf+1
  3566                           
  3567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3568                           ; Switch size 1, requested type "simple"
  3569                           ; Number of cases is 1, Range of values is 0 to 0
  3570                           ; switch strategies available:
  3571                           ; Name         Instructions Cycles
  3572                           ; simple_byte            4     3 (average)
  3573                           ; direct_byte           11     8 (fixed)
  3574                           ; jumptable            260     6 (fixed)
  3575                           ;	Chosen strategy is simple_byte
  3576     0320  0845               	movf	??_sprintf+1,w
  3577     0321  3A00               	xorlw	0	; case 0
  3578     0322  1903               	skipnz
  3579     0323  2B25               	goto	l2542
  3580     0324  2BFB               	goto	l2118
  3581     0325                     l2542:
  3582                           
  3583                           ; Switch size 1, requested type "simple"
  3584                           ; Number of cases is 3, Range of values is 0 to 117
  3585                           ; switch strategies available:
  3586                           ; Name         Instructions Cycles
  3587                           ; simple_byte           10     6 (average)
  3588                           ; jumptable            260     6 (fixed)
  3589                           ;	Chosen strategy is simple_byte
  3590     0325  0844               	movf	??_sprintf,w
  3591     0326  3A00               	xorlw	0	; case 0
  3592     0327  1903               	skipnz
  3593     0328  2C0B               	goto	l2120
  3594     0329  3A73               	xorlw	115	; case 115
  3595     032A  1903               	skipnz
  3596     032B  2A89               	goto	l2028
  3597     032C  3A06               	xorlw	6	; case 117
  3598     032D  1903               	skipnz
  3599     032E  2B0C               	goto	l2062
  3600     032F  2BFB               	goto	l2118
  3601     0330                     l2068:
  3602                           
  3603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3604     0330  084B               	movf	sprintf@ap,w
  3605     0331  0084               	movwf	4
  3606     0332  1383               	bcf	3,7	;select IRP bank0
  3607     0333  0800               	movf	0,w
  3608     0334  00C8               	movwf	sprintf@val
  3609     0335  0A84               	incf	4,f
  3610     0336  0800               	movf	0,w
  3611     0337  00C9               	movwf	sprintf@val+1
  3612     0338                     l2070:
  3613     0338  3002               	movlw	2
  3614     0339  00C4               	movwf	??_sprintf
  3615     033A  0844               	movf	??_sprintf,w
  3616     033B  07CB               	addwf	sprintf@ap,f
  3617     033C                     l2072:
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3620     033C  01D2               	clrf	sprintf@c
  3621     033D  0AD2               	incf	sprintf@c,f
  3622     033E                     l2078:
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3625     033E  0852               	movf	sprintf@c,w
  3626     033F  00C4               	movwf	??_sprintf
  3627     0340  0744               	addwf	??_sprintf,w
  3628     0341  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3629     0342  0084               	movwf	4
  3630     0343  120A  118A  200D  120A  118A  	fcall	stringdir
  3631     0348  00C5               	movwf	??_sprintf+1
  3632     0349  120A  118A  200D  120A  118A  	fcall	stringdir
  3633     034E  00C6               	movwf	??_sprintf+2
  3634     034F  0846               	movf	??_sprintf+2,w
  3635     0350  0249               	subwf	sprintf@val+1,w
  3636     0351  1D03               	skipz
  3637     0352  2B55               	goto	u1565
  3638     0353  0845               	movf	??_sprintf+1,w
  3639     0354  0248               	subwf	sprintf@val,w
  3640     0355                     u1565:
  3641     0355  1803               	skipnc
  3642     0356  2B58               	goto	u1561
  3643     0357  2B59               	goto	u1560
  3644     0358                     u1561:
  3645     0358  2B5A               	goto	l2082
  3646     0359                     u1560:
  3647     0359  2B64               	goto	l2084
  3648     035A                     l2082:
  3649     035A  3001               	movlw	1
  3650     035B  00C4               	movwf	??_sprintf
  3651     035C  0844               	movf	??_sprintf,w
  3652     035D  07D2               	addwf	sprintf@c,f
  3653     035E  3005               	movlw	5
  3654     035F  0652               	xorwf	sprintf@c,w
  3655     0360  1D03               	btfss	3,2
  3656     0361  2B63               	goto	u1571
  3657     0362  2B64               	goto	u1570
  3658     0363                     u1571:
  3659     0363  2B3E               	goto	l2078
  3660     0364                     u1570:
  3661     0364                     l2084:
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3664     0364  0851               	movf	sprintf@width+1,w
  3665     0365  3A80               	xorlw	128
  3666     0366  3C80               	sublw	128
  3667     0367  1D03               	skipz
  3668     0368  2B6B               	goto	u1585
  3669     0369  0850               	movf	sprintf@width,w
  3670     036A  0252               	subwf	sprintf@c,w
  3671     036B                     u1585:
  3672     036B  1803               	skipnc
  3673     036C  2B6E               	goto	u1581
  3674     036D  2B6F               	goto	u1580
  3675     036E                     u1581:
  3676     036E  2B7B               	goto	l2088
  3677     036F                     u1580:
  3678     036F                     l2086:
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3681     036F  1283               	bcf	3,5	;RP0=0, select bank0
  3682     0370  1303               	bcf	3,6	;RP1=0, select bank0
  3683     0371  0852               	movf	sprintf@c,w
  3684     0372  00C4               	movwf	??_sprintf
  3685     0373  01C5               	clrf	??_sprintf+1
  3686     0374  0844               	movf	??_sprintf,w
  3687     0375  02D0               	subwf	sprintf@width,f
  3688     0376  0845               	movf	??_sprintf+1,w
  3689     0377  1C03               	skipc
  3690     0378  03D1               	decf	sprintf@width+1,f
  3691     0379  02D1               	subwf	sprintf@width+1,f
  3692     037A  2B7F               	goto	l2090
  3693     037B                     l2088:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3696     037B  1283               	bcf	3,5	;RP0=0, select bank0
  3697     037C  1303               	bcf	3,6	;RP1=0, select bank0
  3698     037D  01D0               	clrf	sprintf@width
  3699     037E  01D1               	clrf	sprintf@width+1
  3700     037F                     l2090:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3703     037F  1D47               	btfss	sprintf@flag,2
  3704     0380  2B82               	goto	u1591
  3705     0381  2B83               	goto	u1590
  3706     0382                     u1591:
  3707     0382  2B9F               	goto	l2100
  3708     0383                     u1590:
  3709     0383                     l2092:
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3712     0383  0850               	movf	sprintf@width,w
  3713     0384  0451               	iorwf	sprintf@width+1,w
  3714     0385  1903               	btfsc	3,2
  3715     0386  2B88               	goto	u1601
  3716     0387  2B89               	goto	u1600
  3717     0388                     u1601:
  3718     0388  2BBA               	goto	l2108
  3719     0389                     u1600:
  3720     0389                     l2094:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3723     0389  0853               	movf	sprintf@sp,w
  3724     038A  0084               	movwf	4
  3725     038B  3030               	movlw	48
  3726     038C  1383               	bcf	3,7	;select IRP bank0
  3727     038D  0080               	movwf	0
  3728     038E                     l2096:
  3729     038E  3001               	movlw	1
  3730     038F  00C4               	movwf	??_sprintf
  3731     0390  0844               	movf	??_sprintf,w
  3732     0391  07D3               	addwf	sprintf@sp,f
  3733     0392                     l2098:
  3734     0392  30FF               	movlw	255
  3735     0393  07D0               	addwf	sprintf@width,f
  3736     0394  1803               	skipnc
  3737     0395  0AD1               	incf	sprintf@width+1,f
  3738     0396  30FF               	movlw	255
  3739     0397  07D1               	addwf	sprintf@width+1,f
  3740     0398  0850               	movf	sprintf@width,w
  3741     0399  0451               	iorwf	sprintf@width+1,w
  3742     039A  1D03               	btfss	3,2
  3743     039B  2B9D               	goto	u1611
  3744     039C  2B9E               	goto	u1610
  3745     039D                     u1611:
  3746     039D  2B89               	goto	l2094
  3747     039E                     u1610:
  3748     039E  2BBA               	goto	l2108
  3749     039F                     l2100:
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3752     039F  0850               	movf	sprintf@width,w
  3753     03A0  0451               	iorwf	sprintf@width+1,w
  3754     03A1  1903               	btfsc	3,2
  3755     03A2  2BA4               	goto	u1621
  3756     03A3  2BA5               	goto	u1620
  3757     03A4                     u1621:
  3758     03A4  2BBA               	goto	l2108
  3759     03A5                     u1620:
  3760     03A5                     l2102:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3763     03A5  0853               	movf	sprintf@sp,w
  3764     03A6  0084               	movwf	4
  3765     03A7  3020               	movlw	32
  3766     03A8  1383               	bcf	3,7	;select IRP bank0
  3767     03A9  0080               	movwf	0
  3768     03AA                     l2104:
  3769     03AA  3001               	movlw	1
  3770     03AB  00C4               	movwf	??_sprintf
  3771     03AC  0844               	movf	??_sprintf,w
  3772     03AD  07D3               	addwf	sprintf@sp,f
  3773     03AE                     l2106:
  3774     03AE  30FF               	movlw	255
  3775     03AF  07D0               	addwf	sprintf@width,f
  3776     03B0  1803               	skipnc
  3777     03B1  0AD1               	incf	sprintf@width+1,f
  3778     03B2  30FF               	movlw	255
  3779     03B3  07D1               	addwf	sprintf@width+1,f
  3780     03B4  0850               	movf	sprintf@width,w
  3781     03B5  0451               	iorwf	sprintf@width+1,w
  3782     03B6  1D03               	btfss	3,2
  3783     03B7  2BB9               	goto	u1631
  3784     03B8  2BBA               	goto	u1630
  3785     03B9                     u1631:
  3786     03B9  2BA5               	goto	l2102
  3787     03BA                     u1630:
  3788     03BA                     l2108:
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3791     03BA  0852               	movf	sprintf@c,w
  3792     03BB  00CA               	movwf	sprintf@prec
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3795     03BC  2BF2               	goto	l2116
  3796     03BD                     l2110:
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3799     03BD  300A               	movlw	10
  3800     03BE  00F8               	movwf	___lwmod@divisor
  3801     03BF  3000               	movlw	0
  3802     03C0  00F9               	movwf	___lwmod@divisor+1
  3803     03C1  084A               	movf	sprintf@prec,w
  3804     03C2  00C4               	movwf	??_sprintf
  3805     03C3  0744               	addwf	??_sprintf,w
  3806     03C4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3807     03C5  0084               	movwf	4
  3808     03C6  120A  118A  200D  120A  118A  	fcall	stringdir
  3809     03CB  00F0               	movwf	___lwdiv@divisor
  3810     03CC  120A  118A  200D  120A  118A  	fcall	stringdir
  3811     03D1  00F1               	movwf	___lwdiv@divisor+1
  3812     03D2  0849               	movf	sprintf@val+1,w
  3813     03D3  00F3               	movwf	___lwdiv@dividend+1
  3814     03D4  0848               	movf	sprintf@val,w
  3815     03D5  00F2               	movwf	___lwdiv@dividend
  3816     03D6  120A  158A  26E2  120A  118A  	fcall	___lwdiv
  3817     03DB  0871               	movf	?___lwdiv+1,w
  3818     03DC  00FB               	movwf	___lwmod@dividend+1
  3819     03DD  0870               	movf	?___lwdiv,w
  3820     03DE  00FA               	movwf	___lwmod@dividend
  3821     03DF  120A  118A  20B4  120A  118A  	fcall	___lwmod
  3822     03E4  0878               	movf	?___lwmod,w
  3823     03E5  3E30               	addlw	48
  3824     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3825     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3826     03E8  00D2               	movwf	sprintf@c
  3827     03E9                     l2112:
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3830     03E9  0853               	movf	sprintf@sp,w
  3831     03EA  0084               	movwf	4
  3832     03EB  0852               	movf	sprintf@c,w
  3833     03EC  1383               	bcf	3,7	;select IRP bank0
  3834     03ED  0080               	movwf	0
  3835     03EE                     l2114:
  3836     03EE  3001               	movlw	1
  3837     03EF  00C4               	movwf	??_sprintf
  3838     03F0  0844               	movf	??_sprintf,w
  3839     03F1  07D3               	addwf	sprintf@sp,f
  3840     03F2                     l2116:
  3841                           
  3842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3843     03F2  30FF               	movlw	255
  3844     03F3  00C4               	movwf	??_sprintf
  3845     03F4  0844               	movf	??_sprintf,w
  3846     03F5  07CA               	addwf	sprintf@prec,f
  3847     03F6  0A4A               	incf	sprintf@prec,w
  3848     03F7  1D03               	btfss	3,2
  3849     03F8  2BFA               	goto	u1641
  3850     03F9  2BFB               	goto	u1640
  3851     03FA                     u1641:
  3852     03FA  2BBD               	goto	l2110
  3853     03FB                     u1640:
  3854     03FB                     l2118:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3857     03FB  3001               	movlw	1
  3858     03FC  07BD               	addwf	sprintf@f,f
  3859     03FD  30FF               	movlw	-1
  3860     03FE  073D               	addwf	sprintf@f,w
  3861     03FF  0084               	movwf	4
  3862     0400  120A  118A  200D  120A  118A  	fcall	stringdir
  3863     0405  00D2               	movwf	sprintf@c
  3864     0406  0852               	movf	sprintf@c,w
  3865     0407  1D03               	btfss	3,2
  3866     0408  2C0A               	goto	u1651
  3867     0409  2C0B               	goto	u1650
  3868     040A                     u1651:
  3869     040A  2A0C               	goto	l2002
  3870     040B                     u1650:
  3871     040B                     l2120:
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3874     040B  0853               	movf	sprintf@sp,w
  3875     040C  0084               	movwf	4
  3876     040D  1383               	bcf	3,7	;select IRP bank0
  3877     040E  0180               	clrf	0
  3878     040F                     l473:
  3879     040F  0008               	return
  3880     0410                     __end_of_sprintf:
  3881                           
  3882                           	psect	text7
  3883     0CFA                     __ptext7:	
  3884 ;; *************** function _isdigit *****************
  3885 ;; Defined at:
  3886 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  c               1    wreg     unsigned char 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  c               1    1[COMMON] unsigned char 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;		None               void
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3900 ;;      Params:         0       0       0       0       0
  3901 ;;      Locals:         2       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0
  3903 ;;      Totals:         2       0       0       0       0
  3904 ;;Total ram usage:        2 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_sprintf
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913     0CFA                     _isdigit:	
  3914                           ;psect for function _isdigit
  3915                           
  3916                           
  3917                           ;incstack = 0
  3918                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3919                           ;isdigit@c stored from wreg
  3920     0CFA  00F1               	movwf	isdigit@c
  3921     0CFB                     l1868:
  3922     0CFB  01F0               	clrf	_isdigit$962
  3923     0CFC                     l1870:
  3924     0CFC  303A               	movlw	58
  3925     0CFD  0271               	subwf	isdigit@c,w
  3926     0CFE  1803               	skipnc
  3927     0CFF  2D01               	goto	u1201
  3928     0D00  2D02               	goto	u1200
  3929     0D01                     u1201:
  3930     0D01  2D0A               	goto	l1876
  3931     0D02                     u1200:
  3932     0D02                     l1872:
  3933     0D02  3030               	movlw	48
  3934     0D03  0271               	subwf	isdigit@c,w
  3935     0D04  1C03               	skipc
  3936     0D05  2D07               	goto	u1211
  3937     0D06  2D08               	goto	u1210
  3938     0D07                     u1211:
  3939     0D07  2D0A               	goto	l1876
  3940     0D08                     u1210:
  3941     0D08                     l1874:
  3942     0D08  01F0               	clrf	_isdigit$962
  3943     0D09  0AF0               	incf	_isdigit$962,f
  3944     0D0A                     l1876:
  3945     0D0A  0C70               	rrf	_isdigit$962,w
  3946     0D0B                     l930:
  3947     0D0B  0008               	return
  3948     0D0C                     __end_of_isdigit:
  3949                           
  3950                           	psect	text8
  3951     0DE0                     __ptext8:	
  3952 ;; *************** function ___wmul *****************
  3953 ;; Defined at:
  3954 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  multiplier      2    0[COMMON] unsigned int 
  3957 ;;  multiplicand    2    2[COMMON] unsigned int 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  product         2    4[COMMON] unsigned int 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2    0[COMMON] unsigned int 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3969 ;;      Params:         4       0       0       0       0
  3970 ;;      Locals:         2       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0
  3972 ;;      Totals:         6       0       0       0       0
  3973 ;;Total ram usage:        6 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_sprintf
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982     0DE0                     ___wmul:	
  3983                           ;psect for function ___wmul
  3984                           
  3985     0DE0                     l1880:	
  3986                           ;incstack = 0
  3987                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3988                           
  3989     0DE0  01F4               	clrf	___wmul@product
  3990     0DE1  01F5               	clrf	___wmul@product+1
  3991     0DE2                     l1882:
  3992     0DE2  1C70               	btfss	___wmul@multiplier,0
  3993     0DE3  2DE5               	goto	u1221
  3994     0DE4  2DE6               	goto	u1220
  3995     0DE5                     u1221:
  3996     0DE5  2DEC               	goto	l477
  3997     0DE6                     u1220:
  3998     0DE6                     l1884:
  3999     0DE6  0872               	movf	___wmul@multiplicand,w
  4000     0DE7  07F4               	addwf	___wmul@product,f
  4001     0DE8  1803               	skipnc
  4002     0DE9  0AF5               	incf	___wmul@product+1,f
  4003     0DEA  0873               	movf	___wmul@multiplicand+1,w
  4004     0DEB  07F5               	addwf	___wmul@product+1,f
  4005     0DEC                     l477:
  4006     0DEC  3001               	movlw	1
  4007     0DED                     u1235:
  4008     0DED  1003               	clrc
  4009     0DEE  0DF2               	rlf	___wmul@multiplicand,f
  4010     0DEF  0DF3               	rlf	___wmul@multiplicand+1,f
  4011     0DF0  3EFF               	addlw	-1
  4012     0DF1  1D03               	skipz
  4013     0DF2  2DED               	goto	u1235
  4014     0DF3                     l1886:
  4015     0DF3  3001               	movlw	1
  4016     0DF4                     u1245:
  4017     0DF4  1003               	clrc
  4018     0DF5  0CF1               	rrf	___wmul@multiplier+1,f
  4019     0DF6  0CF0               	rrf	___wmul@multiplier,f
  4020     0DF7  3EFF               	addlw	-1
  4021     0DF8  1D03               	skipz
  4022     0DF9  2DF4               	goto	u1245
  4023     0DFA                     l1888:
  4024     0DFA  0870               	movf	___wmul@multiplier,w
  4025     0DFB  0471               	iorwf	___wmul@multiplier+1,w
  4026     0DFC  1D03               	btfss	3,2
  4027     0DFD  2DFF               	goto	u1251
  4028     0DFE  2E00               	goto	u1250
  4029     0DFF                     u1251:
  4030     0DFF  2DE2               	goto	l1882
  4031     0E00                     u1250:
  4032     0E00                     l1890:
  4033     0E00  0875               	movf	___wmul@product+1,w
  4034     0E01  00F1               	movwf	?___wmul+1
  4035     0E02  0874               	movf	___wmul@product,w
  4036     0E03  00F0               	movwf	?___wmul
  4037     0E04                     l479:
  4038     0E04  0008               	return
  4039     0E05                     __end_of___wmul:
  4040                           
  4041                           	psect	text9
  4042     00B4                     __ptext9:	
  4043 ;; *************** function ___lwmod *****************
  4044 ;; Defined at:
  4045 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  divisor         2    8[COMMON] unsigned int 
  4048 ;;  dividend        2   10[COMMON] unsigned int 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  counter         1   13[COMMON] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  2    8[COMMON] unsigned int 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         4       0       0       0       0
  4061 ;;      Locals:         1       0       0       0       0
  4062 ;;      Temps:          1       0       0       0       0
  4063 ;;      Totals:         6       0       0       0       0
  4064 ;;Total ram usage:        6 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_sprintf
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073     00B4                     ___lwmod:	
  4074                           ;psect for function ___lwmod
  4075                           
  4076     00B4                     l1920:	
  4077                           ;incstack = 0
  4078                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4079                           
  4080     00B4  0878               	movf	___lwmod@divisor,w
  4081     00B5  0479               	iorwf	___lwmod@divisor+1,w
  4082     00B6  1903               	btfsc	3,2
  4083     00B7  28B9               	goto	u1331
  4084     00B8  28BA               	goto	u1330
  4085     00B9                     u1331:
  4086     00B9  28E9               	goto	l1938
  4087     00BA                     u1330:
  4088     00BA                     l1922:
  4089     00BA  01FD               	clrf	___lwmod@counter
  4090     00BB  0AFD               	incf	___lwmod@counter,f
  4091     00BC  28C8               	goto	l1928
  4092     00BD                     l1924:
  4093     00BD  3001               	movlw	1
  4094     00BE                     u1345:
  4095     00BE  1003               	clrc
  4096     00BF  0DF8               	rlf	___lwmod@divisor,f
  4097     00C0  0DF9               	rlf	___lwmod@divisor+1,f
  4098     00C1  3EFF               	addlw	-1
  4099     00C2  1D03               	skipz
  4100     00C3  28BE               	goto	u1345
  4101     00C4                     l1926:
  4102     00C4  3001               	movlw	1
  4103     00C5  00FC               	movwf	??___lwmod
  4104     00C6  087C               	movf	??___lwmod,w
  4105     00C7  07FD               	addwf	___lwmod@counter,f
  4106     00C8                     l1928:
  4107     00C8  1FF9               	btfss	___lwmod@divisor+1,7
  4108     00C9  28CB               	goto	u1351
  4109     00CA  28CC               	goto	u1350
  4110     00CB                     u1351:
  4111     00CB  28BD               	goto	l1924
  4112     00CC                     u1350:
  4113     00CC                     l1930:
  4114     00CC  0879               	movf	___lwmod@divisor+1,w
  4115     00CD  027B               	subwf	___lwmod@dividend+1,w
  4116     00CE  1D03               	skipz
  4117     00CF  28D2               	goto	u1365
  4118     00D0  0878               	movf	___lwmod@divisor,w
  4119     00D1  027A               	subwf	___lwmod@dividend,w
  4120     00D2                     u1365:
  4121     00D2  1C03               	skipc
  4122     00D3  28D5               	goto	u1361
  4123     00D4  28D6               	goto	u1360
  4124     00D5                     u1361:
  4125     00D5  28DC               	goto	l1934
  4126     00D6                     u1360:
  4127     00D6                     l1932:
  4128     00D6  0878               	movf	___lwmod@divisor,w
  4129     00D7  02FA               	subwf	___lwmod@dividend,f
  4130     00D8  0879               	movf	___lwmod@divisor+1,w
  4131     00D9  1C03               	skipc
  4132     00DA  03FB               	decf	___lwmod@dividend+1,f
  4133     00DB  02FB               	subwf	___lwmod@dividend+1,f
  4134     00DC                     l1934:
  4135     00DC  3001               	movlw	1
  4136     00DD                     u1375:
  4137     00DD  1003               	clrc
  4138     00DE  0CF9               	rrf	___lwmod@divisor+1,f
  4139     00DF  0CF8               	rrf	___lwmod@divisor,f
  4140     00E0  3EFF               	addlw	-1
  4141     00E1  1D03               	skipz
  4142     00E2  28DD               	goto	u1375
  4143     00E3                     l1936:
  4144     00E3  3001               	movlw	1
  4145     00E4  02FD               	subwf	___lwmod@counter,f
  4146     00E5  1D03               	btfss	3,2
  4147     00E6  28E8               	goto	u1381
  4148     00E7  28E9               	goto	u1380
  4149     00E8                     u1381:
  4150     00E8  28CC               	goto	l1930
  4151     00E9                     u1380:
  4152     00E9                     l1938:
  4153     00E9  087B               	movf	___lwmod@dividend+1,w
  4154     00EA  00F9               	movwf	?___lwmod+1
  4155     00EB  087A               	movf	___lwmod@dividend,w
  4156     00EC  00F8               	movwf	?___lwmod
  4157     00ED                     l759:
  4158     00ED  0008               	return
  4159     00EE                     __end_of___lwmod:
  4160                           
  4161                           	psect	text10
  4162     0EE2                     __ptext10:	
  4163 ;; *************** function ___lwdiv *****************
  4164 ;; Defined at:
  4165 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  divisor         2    0[COMMON] unsigned int 
  4168 ;;  dividend        2    2[COMMON] unsigned int 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  quotient        2    5[COMMON] unsigned int 
  4171 ;;  counter         1    7[COMMON] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  2    0[COMMON] unsigned int 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4181 ;;      Params:         4       0       0       0       0
  4182 ;;      Locals:         3       0       0       0       0
  4183 ;;      Temps:          1       0       0       0       0
  4184 ;;      Totals:         8       0       0       0       0
  4185 ;;Total ram usage:        8 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_sprintf
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194     0EE2                     ___lwdiv:	
  4195                           ;psect for function ___lwdiv
  4196                           
  4197     0EE2                     l1894:	
  4198                           ;incstack = 0
  4199                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4200                           
  4201     0EE2  01F5               	clrf	___lwdiv@quotient
  4202     0EE3  01F6               	clrf	___lwdiv@quotient+1
  4203     0EE4                     l1896:
  4204     0EE4  0870               	movf	___lwdiv@divisor,w
  4205     0EE5  0471               	iorwf	___lwdiv@divisor+1,w
  4206     0EE6  1903               	btfsc	3,2
  4207     0EE7  2EE9               	goto	u1261
  4208     0EE8  2EEA               	goto	u1260
  4209     0EE9                     u1261:
  4210     0EE9  2F21               	goto	l1916
  4211     0EEA                     u1260:
  4212     0EEA                     l1898:
  4213     0EEA  01F7               	clrf	___lwdiv@counter
  4214     0EEB  0AF7               	incf	___lwdiv@counter,f
  4215     0EEC  2EF8               	goto	l1904
  4216     0EED                     l1900:
  4217     0EED  3001               	movlw	1
  4218     0EEE                     u1275:
  4219     0EEE  1003               	clrc
  4220     0EEF  0DF0               	rlf	___lwdiv@divisor,f
  4221     0EF0  0DF1               	rlf	___lwdiv@divisor+1,f
  4222     0EF1  3EFF               	addlw	-1
  4223     0EF2  1D03               	skipz
  4224     0EF3  2EEE               	goto	u1275
  4225     0EF4                     l1902:
  4226     0EF4  3001               	movlw	1
  4227     0EF5  00F4               	movwf	??___lwdiv
  4228     0EF6  0874               	movf	??___lwdiv,w
  4229     0EF7  07F7               	addwf	___lwdiv@counter,f
  4230     0EF8                     l1904:
  4231     0EF8  1FF1               	btfss	___lwdiv@divisor+1,7
  4232     0EF9  2EFB               	goto	u1281
  4233     0EFA  2EFC               	goto	u1280
  4234     0EFB                     u1281:
  4235     0EFB  2EED               	goto	l1900
  4236     0EFC                     u1280:
  4237     0EFC                     l1906:
  4238     0EFC  3001               	movlw	1
  4239     0EFD                     u1295:
  4240     0EFD  1003               	clrc
  4241     0EFE  0DF5               	rlf	___lwdiv@quotient,f
  4242     0EFF  0DF6               	rlf	___lwdiv@quotient+1,f
  4243     0F00  3EFF               	addlw	-1
  4244     0F01  1D03               	skipz
  4245     0F02  2EFD               	goto	u1295
  4246     0F03  0871               	movf	___lwdiv@divisor+1,w
  4247     0F04  0273               	subwf	___lwdiv@dividend+1,w
  4248     0F05  1D03               	skipz
  4249     0F06  2F09               	goto	u1305
  4250     0F07  0870               	movf	___lwdiv@divisor,w
  4251     0F08  0272               	subwf	___lwdiv@dividend,w
  4252     0F09                     u1305:
  4253     0F09  1C03               	skipc
  4254     0F0A  2F0C               	goto	u1301
  4255     0F0B  2F0D               	goto	u1300
  4256     0F0C                     u1301:
  4257     0F0C  2F14               	goto	l1912
  4258     0F0D                     u1300:
  4259     0F0D                     l1908:
  4260     0F0D  0870               	movf	___lwdiv@divisor,w
  4261     0F0E  02F2               	subwf	___lwdiv@dividend,f
  4262     0F0F  0871               	movf	___lwdiv@divisor+1,w
  4263     0F10  1C03               	skipc
  4264     0F11  03F3               	decf	___lwdiv@dividend+1,f
  4265     0F12  02F3               	subwf	___lwdiv@dividend+1,f
  4266     0F13                     l1910:
  4267     0F13  1475               	bsf	___lwdiv@quotient,0
  4268     0F14                     l1912:
  4269     0F14  3001               	movlw	1
  4270     0F15                     u1315:
  4271     0F15  1003               	clrc
  4272     0F16  0CF1               	rrf	___lwdiv@divisor+1,f
  4273     0F17  0CF0               	rrf	___lwdiv@divisor,f
  4274     0F18  3EFF               	addlw	-1
  4275     0F19  1D03               	skipz
  4276     0F1A  2F15               	goto	u1315
  4277     0F1B                     l1914:
  4278     0F1B  3001               	movlw	1
  4279     0F1C  02F7               	subwf	___lwdiv@counter,f
  4280     0F1D  1D03               	btfss	3,2
  4281     0F1E  2F20               	goto	u1321
  4282     0F1F  2F21               	goto	u1320
  4283     0F20                     u1321:
  4284     0F20  2EFC               	goto	l1906
  4285     0F21                     u1320:
  4286     0F21                     l1916:
  4287     0F21  0876               	movf	___lwdiv@quotient+1,w
  4288     0F22  00F1               	movwf	?___lwdiv+1
  4289     0F23  0875               	movf	___lwdiv@quotient,w
  4290     0F24  00F0               	movwf	?___lwdiv
  4291     0F25                     l749:
  4292     0F25  0008               	return
  4293     0F26                     __end_of___lwdiv:
  4294                           
  4295                           	psect	text11
  4296     0D1F                     __ptext11:	
  4297 ;; *************** function ___bmul *****************
  4298 ;; Defined at:
  4299 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  multiplier      1    wreg     unsigned char 
  4302 ;;  multiplicand    1    0[COMMON] unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  multiplier      1    3[COMMON] unsigned char 
  4305 ;;  product         1    2[COMMON] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      unsigned char 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4315 ;;      Params:         1       0       0       0       0
  4316 ;;      Locals:         2       0       0       0       0
  4317 ;;      Temps:          1       0       0       0       0
  4318 ;;      Totals:         4       0       0       0       0
  4319 ;;Total ram usage:        4 bytes
  4320 ;; Hardware stack levels used: 1
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_CLK_CONFIG
  4325 ;;		_DS3231_Get_DayOfWeek
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329     0D1F                     ___bmul:	
  4330                           ;psect for function ___bmul
  4331                           
  4332                           
  4333                           ;incstack = 0
  4334                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4335                           ;___bmul@multiplier stored from wreg
  4336     0D1F  00F3               	movwf	___bmul@multiplier
  4337     0D20                     l2156:
  4338     0D20  01F2               	clrf	___bmul@product
  4339     0D21                     l2158:
  4340     0D21  1C73               	btfss	___bmul@multiplier,0
  4341     0D22  2D24               	goto	u1661
  4342     0D23  2D25               	goto	u1660
  4343     0D24                     u1661:
  4344     0D24  2D29               	goto	l2162
  4345     0D25                     u1660:
  4346     0D25                     l2160:
  4347     0D25  0870               	movf	___bmul@multiplicand,w
  4348     0D26  00F1               	movwf	??___bmul
  4349     0D27  0871               	movf	??___bmul,w
  4350     0D28  07F2               	addwf	___bmul@product,f
  4351     0D29                     l2162:
  4352     0D29  1003               	clrc
  4353     0D2A  0DF0               	rlf	___bmul@multiplicand,f
  4354     0D2B                     l2164:
  4355     0D2B  1003               	clrc
  4356     0D2C  0CF3               	rrf	___bmul@multiplier,f
  4357     0D2D  0873               	movf	___bmul@multiplier,w
  4358     0D2E  1D03               	btfss	3,2
  4359     0D2F  2D31               	goto	u1671
  4360     0D30  2D32               	goto	u1670
  4361     0D31                     u1671:
  4362     0D31  2D21               	goto	l2158
  4363     0D32                     u1670:
  4364     0D32                     l2166:
  4365     0D32  0872               	movf	___bmul@product,w
  4366     0D33                     l503:
  4367     0D33  0008               	return
  4368     0D34                     __end_of___bmul:
  4369                           
  4370                           	psect	text12
  4371     0EA0                     __ptext12:	
  4372 ;; *************** function _Lcd_Write_String *****************
  4373 ;; Defined at:
  4374 ;;		line 98 in file "LCD.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  a               2    5[COMMON] PTR unsigned char 
  4377 ;;		 -> buffer(20), STR_1(6), 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  i               2   10[COMMON] int 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4389 ;;      Params:         2       0       0       0       0
  4390 ;;      Locals:         2       0       0       0       0
  4391 ;;      Temps:          3       0       0       0       0
  4392 ;;      Totals:         7       0       0       0       0
  4393 ;;Total ram usage:        7 bytes
  4394 ;; Hardware stack levels used: 1
  4395 ;; Hardware stack levels required when called: 2
  4396 ;; This function calls:
  4397 ;;		_Lcd_Write_Char
  4398 ;; This function is called by:
  4399 ;;		_CLK_CONFIG
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403     0EA0                     _Lcd_Write_String:	
  4404                           ;psect for function _Lcd_Write_String
  4405                           
  4406     0EA0                     l1992:	
  4407                           ;incstack = 0
  4408                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4409                           
  4410                           
  4411                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4412     0EA0  01FA               	clrf	Lcd_Write_String@i
  4413     0EA1  01FB               	clrf	Lcd_Write_String@i+1
  4414     0EA2  2EC5               	goto	l1998
  4415     0EA3                     l1994:
  4416                           
  4417                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  4418     0EA3  087A               	movf	Lcd_Write_String@i,w
  4419     0EA4  0775               	addwf	Lcd_Write_String@a,w
  4420     0EA5  00F8               	movwf	??_Lcd_Write_String+1
  4421     0EA6  0876               	movf	Lcd_Write_String@a+1,w
  4422     0EA7  00F7               	movwf	??_Lcd_Write_String
  4423     0EA8  1803               	skipnc
  4424     0EA9  0AF7               	incf	??_Lcd_Write_String,f
  4425     0EAA  1FFA               	btfss	Lcd_Write_String@i,7
  4426     0EAB  2EAD               	goto	u1450
  4427     0EAC  03F7               	decf	??_Lcd_Write_String,f
  4428     0EAD                     u1450:
  4429     0EAD  0877               	movf	??_Lcd_Write_String,w
  4430     0EAE  00F9               	movwf	??_Lcd_Write_String+2
  4431     0EAF  0879               	movf	??_Lcd_Write_String+2,w
  4432     0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  4433     0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  4434     0EB2  00FF               	movwf	btemp+1
  4435     0EB3  0878               	movf	??_Lcd_Write_String+1,w
  4436     0EB4  0084               	movwf	4
  4437     0EB5  120A  118A  2003  120A  158A  	fcall	stringtab
  4438     0EBA  120A  158A  2634  120A  158A  	fcall	_Lcd_Write_Char
  4439     0EBF                     l1996:
  4440     0EBF  3001               	movlw	1
  4441     0EC0  07FA               	addwf	Lcd_Write_String@i,f
  4442     0EC1  1803               	skipnc
  4443     0EC2  0AFB               	incf	Lcd_Write_String@i+1,f
  4444     0EC3  3000               	movlw	0
  4445     0EC4  07FB               	addwf	Lcd_Write_String@i+1,f
  4446     0EC5                     l1998:
  4447     0EC5  087A               	movf	Lcd_Write_String@i,w
  4448     0EC6  0775               	addwf	Lcd_Write_String@a,w
  4449     0EC7  00F8               	movwf	??_Lcd_Write_String+1
  4450     0EC8  0876               	movf	Lcd_Write_String@a+1,w
  4451     0EC9  00F7               	movwf	??_Lcd_Write_String
  4452     0ECA  1803               	skipnc
  4453     0ECB  0AF7               	incf	??_Lcd_Write_String,f
  4454     0ECC  1FFA               	btfss	Lcd_Write_String@i,7
  4455     0ECD  2ECF               	goto	u1460
  4456     0ECE  03F7               	decf	??_Lcd_Write_String,f
  4457     0ECF                     u1460:
  4458     0ECF  0877               	movf	??_Lcd_Write_String,w
  4459     0ED0  00F9               	movwf	??_Lcd_Write_String+2
  4460     0ED1  0879               	movf	??_Lcd_Write_String+2,w
  4461     0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  4462     0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  4463     0ED4  00FF               	movwf	btemp+1
  4464     0ED5  0878               	movf	??_Lcd_Write_String+1,w
  4465     0ED6  0084               	movwf	4
  4466     0ED7  120A  118A  2003  120A  158A  	fcall	stringtab
  4467     0EDC  3A00               	xorlw	0
  4468     0EDD  1D03               	skipz
  4469     0EDE  2EE0               	goto	u1471
  4470     0EDF  2EE1               	goto	u1470
  4471     0EE0                     u1471:
  4472     0EE0  2EA3               	goto	l1994
  4473     0EE1                     u1470:
  4474     0EE1                     l278:
  4475     0EE1  0008               	return
  4476     0EE2                     __end_of_Lcd_Write_String:
  4477                           
  4478                           	psect	text13
  4479     0E34                     __ptext13:	
  4480 ;; *************** function _Lcd_Write_Char *****************
  4481 ;; Defined at:
  4482 ;;		line 83 in file "LCD.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  a               1    wreg     unsigned char 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  a               1    4[COMMON] unsigned char 
  4487 ;;  y               1    3[COMMON] unsigned char 
  4488 ;;  temp            1    2[COMMON] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0, pclath, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4498 ;;      Params:         0       0       0       0       0
  4499 ;;      Locals:         3       0       0       0       0
  4500 ;;      Temps:          1       0       0       0       0
  4501 ;;      Totals:         4       0       0       0       0
  4502 ;;Total ram usage:        4 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 1
  4505 ;; This function calls:
  4506 ;;		_Lcd_Port
  4507 ;; This function is called by:
  4508 ;;		_Lcd_Write_String
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512     0E34                     _Lcd_Write_Char:	
  4513                           ;psect for function _Lcd_Write_Char
  4514                           
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4518                           ;Lcd_Write_Char@a stored from wreg
  4519     0E34  00F4               	movwf	Lcd_Write_Char@a
  4520     0E35                     l1804:
  4521                           
  4522                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4523     0E35  0874               	movf	Lcd_Write_Char@a,w
  4524     0E36  390F               	andlw	15
  4525     0E37  00F2               	movwf	Lcd_Write_Char@temp
  4526                           
  4527                           ;LCD.c: 86:     y = a & 0xF0;
  4528     0E38  0874               	movf	Lcd_Write_Char@a,w
  4529     0E39  39F0               	andlw	240
  4530     0E3A  00F3               	movwf	Lcd_Write_Char@y
  4531     0E3B                     l1806:
  4532                           
  4533                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  4534     0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  4535     0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  4536     0E3D  1708               	bsf	8,6	;volatile
  4537     0E3E                     l1808:
  4538                           
  4539                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4540     0E3E  0873               	movf	Lcd_Write_Char@y,w
  4541     0E3F  00F1               	movwf	??_Lcd_Write_Char
  4542     0E40  3004               	movlw	4
  4543     0E41                     u1175:
  4544     0E41  1003               	clrc
  4545     0E42  0CF1               	rrf	??_Lcd_Write_Char,f
  4546     0E43  3EFF               	addlw	-1
  4547     0E44  1D03               	skipz
  4548     0E45  2E41               	goto	u1175
  4549     0E46  0871               	movf	??_Lcd_Write_Char,w
  4550     0E47  120A  158A  259C  120A  158A  	fcall	_Lcd_Port
  4551     0E4C                     l1810:
  4552                           
  4553                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  4554     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  4555     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  4556     0E4E  1788               	bsf	8,7	;volatile
  4557     0E4F                     l1812:
  4558                           
  4559                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4560     0E4F  301A               	movlw	26
  4561     0E50  00F1               	movwf	??_Lcd_Write_Char
  4562     0E51                     u2337:
  4563     0E51  0BF1               	decfsz	??_Lcd_Write_Char,f
  4564     0E52  2E51               	goto	u2337
  4565     0E53  0000               	nop
  4566     0E54                     l1814:
  4567                           
  4568                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  4569     0E54  1283               	bcf	3,5	;RP0=0, select bank0
  4570     0E55  1303               	bcf	3,6	;RP1=0, select bank0
  4571     0E56  1388               	bcf	8,7	;volatile
  4572     0E57                     l1816:
  4573                           
  4574                           ;LCD.c: 92:     Lcd_Port(temp);
  4575     0E57  0872               	movf	Lcd_Write_Char@temp,w
  4576     0E58  120A  158A  259C  120A  158A  	fcall	_Lcd_Port
  4577     0E5D                     l1818:
  4578                           
  4579                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  4580     0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  4581     0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  4582     0E5F  1788               	bsf	8,7	;volatile
  4583     0E60                     l1820:
  4584                           
  4585                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4586     0E60  301A               	movlw	26
  4587     0E61  00F1               	movwf	??_Lcd_Write_Char
  4588     0E62                     u2347:
  4589     0E62  0BF1               	decfsz	??_Lcd_Write_Char,f
  4590     0E63  2E62               	goto	u2347
  4591     0E64  0000               	nop
  4592     0E65                     l1822:
  4593                           
  4594                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  4595     0E65  1283               	bcf	3,5	;RP0=0, select bank0
  4596     0E66  1303               	bcf	3,6	;RP1=0, select bank0
  4597     0E67  1388               	bcf	8,7	;volatile
  4598     0E68                     l272:
  4599     0E68  0008               	return
  4600     0E69                     __end_of_Lcd_Write_Char:
  4601                           
  4602                           	psect	text14
  4603     0F26                     __ptext14:	
  4604 ;; *************** function _Lcd_Set_Cursor *****************
  4605 ;; Defined at:
  4606 ;;		line 48 in file "LCD.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  a               1    wreg     unsigned char 
  4609 ;;  b               1    4[COMMON] unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  a               1    6[COMMON] unsigned char 
  4612 ;;  temp            1    9[COMMON] unsigned char 
  4613 ;;  y               1    8[COMMON] unsigned char 
  4614 ;;  z               1    7[COMMON] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, pclath, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4624 ;;      Params:         1       0       0       0       0
  4625 ;;      Locals:         4       0       0       0       0
  4626 ;;      Temps:          1       0       0       0       0
  4627 ;;      Totals:         6       0       0       0       0
  4628 ;;Total ram usage:        6 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 2
  4631 ;; This function calls:
  4632 ;;		_Lcd_Cmd
  4633 ;; This function is called by:
  4634 ;;		_CLK_CONFIG
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638     0F26                     _Lcd_Set_Cursor:	
  4639                           ;psect for function _Lcd_Set_Cursor
  4640                           
  4641                           
  4642                           ;incstack = 0
  4643                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4644                           ;Lcd_Set_Cursor@a stored from wreg
  4645     0F26  00F6               	movwf	Lcd_Set_Cursor@a
  4646     0F27                     l1972:
  4647                           
  4648                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4649     0F27  0376               	decf	Lcd_Set_Cursor@a,w
  4650     0F28  1D03               	btfss	3,2
  4651     0F29  2F2B               	goto	u1411
  4652     0F2A  2F2C               	goto	u1410
  4653     0F2B                     u1411:
  4654     0F2B  2F49               	goto	l1982
  4655     0F2C                     u1410:
  4656     0F2C                     l1974:
  4657                           
  4658                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4659     0F2C  0874               	movf	Lcd_Set_Cursor@b,w
  4660     0F2D  3E7F               	addlw	127
  4661     0F2E  00F9               	movwf	Lcd_Set_Cursor@temp
  4662                           
  4663                           ;LCD.c: 52:         z = temp >> 4;
  4664     0F2F  0879               	movf	Lcd_Set_Cursor@temp,w
  4665     0F30  00F5               	movwf	??_Lcd_Set_Cursor
  4666     0F31  3004               	movlw	4
  4667     0F32                     u1425:
  4668     0F32  1003               	clrc
  4669     0F33  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4670     0F34  3EFF               	addlw	-1
  4671     0F35  1D03               	skipz
  4672     0F36  2F32               	goto	u1425
  4673     0F37  0875               	movf	??_Lcd_Set_Cursor,w
  4674     0F38  00F7               	movwf	Lcd_Set_Cursor@z
  4675     0F39                     l1976:
  4676                           
  4677                           ;LCD.c: 53:         y = temp & 0x0F;
  4678     0F39  0879               	movf	Lcd_Set_Cursor@temp,w
  4679     0F3A  390F               	andlw	15
  4680     0F3B  00F8               	movwf	Lcd_Set_Cursor@y
  4681     0F3C                     l1978:
  4682                           
  4683                           ;LCD.c: 54:         Lcd_Cmd(z);
  4684     0F3C  0877               	movf	Lcd_Set_Cursor@z,w
  4685     0F3D  120A  158A  2563  120A  158A  	fcall	_Lcd_Cmd
  4686     0F42                     l1980:
  4687                           
  4688                           ;LCD.c: 55:         Lcd_Cmd(y);
  4689     0F42  0878               	movf	Lcd_Set_Cursor@y,w
  4690     0F43  120A  158A  2563  120A  158A  	fcall	_Lcd_Cmd
  4691                           
  4692                           ;LCD.c: 56:     } else if (a == 2) {
  4693     0F48  2F6B               	goto	l266
  4694     0F49                     l1982:
  4695     0F49  3002               	movlw	2
  4696     0F4A  0676               	xorwf	Lcd_Set_Cursor@a,w
  4697     0F4B  1D03               	btfss	3,2
  4698     0F4C  2F4E               	goto	u1431
  4699     0F4D  2F4F               	goto	u1430
  4700     0F4E                     u1431:
  4701     0F4E  2F6B               	goto	l266
  4702     0F4F                     u1430:
  4703     0F4F                     l1984:
  4704                           
  4705                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4706     0F4F  0874               	movf	Lcd_Set_Cursor@b,w
  4707     0F50  3EBF               	addlw	191
  4708     0F51  00F9               	movwf	Lcd_Set_Cursor@temp
  4709                           
  4710                           ;LCD.c: 58:         z = temp >> 4;
  4711     0F52  0879               	movf	Lcd_Set_Cursor@temp,w
  4712     0F53  00F5               	movwf	??_Lcd_Set_Cursor
  4713     0F54  3004               	movlw	4
  4714     0F55                     u1445:
  4715     0F55  1003               	clrc
  4716     0F56  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4717     0F57  3EFF               	addlw	-1
  4718     0F58  1D03               	skipz
  4719     0F59  2F55               	goto	u1445
  4720     0F5A  0875               	movf	??_Lcd_Set_Cursor,w
  4721     0F5B  00F7               	movwf	Lcd_Set_Cursor@z
  4722     0F5C                     l1986:
  4723                           
  4724                           ;LCD.c: 59:         y = temp & 0x0F;
  4725     0F5C  0879               	movf	Lcd_Set_Cursor@temp,w
  4726     0F5D  390F               	andlw	15
  4727     0F5E  00F8               	movwf	Lcd_Set_Cursor@y
  4728     0F5F                     l1988:
  4729                           
  4730                           ;LCD.c: 60:         Lcd_Cmd(z);
  4731     0F5F  0877               	movf	Lcd_Set_Cursor@z,w
  4732     0F60  120A  158A  2563  120A  158A  	fcall	_Lcd_Cmd
  4733     0F65                     l1990:
  4734                           
  4735                           ;LCD.c: 61:         Lcd_Cmd(y);
  4736     0F65  0878               	movf	Lcd_Set_Cursor@y,w
  4737     0F66  120A  158A  2563  120A  158A  	fcall	_Lcd_Cmd
  4738     0F6B                     l266:
  4739     0F6B  0008               	return
  4740     0F6C                     __end_of_Lcd_Set_Cursor:
  4741                           
  4742                           	psect	text15
  4743     0D63                     __ptext15:	
  4744 ;; *************** function _Lcd_Cmd *****************
  4745 ;; Defined at:
  4746 ;;		line 35 in file "LCD.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  a               1    wreg     unsigned char 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  a               1    3[COMMON] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0, pclath, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4760 ;;      Params:         0       0       0       0       0
  4761 ;;      Locals:         1       0       0       0       0
  4762 ;;      Temps:          2       0       0       0       0
  4763 ;;      Totals:         3       0       0       0       0
  4764 ;;Total ram usage:        3 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; Hardware stack levels required when called: 1
  4767 ;; This function calls:
  4768 ;;		_Lcd_Port
  4769 ;; This function is called by:
  4770 ;;		_Lcd_Clear
  4771 ;;		_Lcd_Set_Cursor
  4772 ;;		_Lcd_Init
  4773 ;;		_Lcd_Shift_Right
  4774 ;;		_Lcd_Shift_Left
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778     0D63                     _Lcd_Cmd:	
  4779                           ;psect for function _Lcd_Cmd
  4780                           
  4781                           
  4782                           ;incstack = 0
  4783                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4784                           ;Lcd_Cmd@a stored from wreg
  4785     0D63  00F3               	movwf	Lcd_Cmd@a
  4786     0D64                     l1794:
  4787                           
  4788                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  4789     0D64  1283               	bcf	3,5	;RP0=0, select bank0
  4790     0D65  1303               	bcf	3,6	;RP1=0, select bank0
  4791     0D66  1308               	bcf	8,6	;volatile
  4792     0D67                     l1796:
  4793                           
  4794                           ;LCD.c: 37:     Lcd_Port(a);
  4795     0D67  0873               	movf	Lcd_Cmd@a,w
  4796     0D68  120A  158A  259C  120A  158A  	fcall	_Lcd_Port
  4797     0D6D                     l1798:
  4798                           
  4799                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  4800     0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  4801     0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  4802     0D6F  1788               	bsf	8,7	;volatile
  4803     0D70                     l1800:
  4804                           
  4805                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4806     0D70  300B               	movlw	11
  4807     0D71  00F2               	movwf	??_Lcd_Cmd+1
  4808     0D72  3062               	movlw	98
  4809     0D73  00F1               	movwf	??_Lcd_Cmd
  4810     0D74                     u2357:
  4811     0D74  0BF1               	decfsz	??_Lcd_Cmd,f
  4812     0D75  2D74               	goto	u2357
  4813     0D76  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4814     0D77  2D74               	goto	u2357
  4815     0D78  0000               	nop
  4816     0D79                     l1802:
  4817                           
  4818                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  4819     0D79  1283               	bcf	3,5	;RP0=0, select bank0
  4820     0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  4821     0D7B  1388               	bcf	8,7	;volatile
  4822     0D7C                     l257:
  4823     0D7C  0008               	return
  4824     0D7D                     __end_of_Lcd_Cmd:
  4825                           
  4826                           	psect	text16
  4827     0D9C                     __ptext16:	
  4828 ;; *************** function _Lcd_Port *****************
  4829 ;; Defined at:
  4830 ;;		line 13 in file "LCD.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  a               1    wreg     unsigned char 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  a               1    0[COMMON] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4844 ;;      Params:         0       0       0       0       0
  4845 ;;      Locals:         1       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0
  4847 ;;      Totals:         1       0       0       0       0
  4848 ;;Total ram usage:        1 bytes
  4849 ;; Hardware stack levels used: 1
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_Lcd_Cmd
  4854 ;;		_Lcd_Init
  4855 ;;		_Lcd_Write_Char
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859     0D9C                     _Lcd_Port:	
  4860                           ;psect for function _Lcd_Port
  4861                           
  4862                           
  4863                           ;incstack = 0
  4864                           ; Regs used in _Lcd_Port: [wreg]
  4865                           ;Lcd_Port@a stored from wreg
  4866     0D9C  00F0               	movwf	Lcd_Port@a
  4867     0D9D                     l1784:
  4868                           
  4869                           ;LCD.c: 14:     if (a & 1)
  4870     0D9D  1C70               	btfss	Lcd_Port@a,0
  4871     0D9E  2DA0               	goto	u1131
  4872     0D9F  2DA1               	goto	u1130
  4873     0DA0                     u1131:
  4874     0DA0  2DA5               	goto	l246
  4875     0DA1                     u1130:
  4876     0DA1                     l1786:
  4877                           
  4878                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  4879     0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  4880     0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  4881     0DA3  1606               	bsf	6,4	;volatile
  4882     0DA4  2DA8               	goto	l247
  4883     0DA5                     l246:	
  4884                           ;LCD.c: 16:     else
  4885                           
  4886                           
  4887                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  4888     0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  4889     0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  4890     0DA7  1206               	bcf	6,4	;volatile
  4891     0DA8                     l247:
  4892                           
  4893                           ;LCD.c: 19:     if (a & 2)
  4894     0DA8  1CF0               	btfss	Lcd_Port@a,1
  4895     0DA9  2DAB               	goto	u1141
  4896     0DAA  2DAC               	goto	u1140
  4897     0DAB                     u1141:
  4898     0DAB  2DAE               	goto	l248
  4899     0DAC                     u1140:
  4900     0DAC                     l1788:
  4901                           
  4902                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  4903     0DAC  1686               	bsf	6,5	;volatile
  4904     0DAD  2DAF               	goto	l249
  4905     0DAE                     l248:	
  4906                           ;LCD.c: 21:     else
  4907                           
  4908                           
  4909                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  4910     0DAE  1286               	bcf	6,5	;volatile
  4911     0DAF                     l249:
  4912                           
  4913                           ;LCD.c: 24:     if (a & 4)
  4914     0DAF  1D70               	btfss	Lcd_Port@a,2
  4915     0DB0  2DB2               	goto	u1151
  4916     0DB1  2DB3               	goto	u1150
  4917     0DB2                     u1151:
  4918     0DB2  2DB5               	goto	l250
  4919     0DB3                     u1150:
  4920     0DB3                     l1790:
  4921                           
  4922                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  4923     0DB3  1706               	bsf	6,6	;volatile
  4924     0DB4  2DB6               	goto	l251
  4925     0DB5                     l250:	
  4926                           ;LCD.c: 26:     else
  4927                           
  4928                           
  4929                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  4930     0DB5  1306               	bcf	6,6	;volatile
  4931     0DB6                     l251:
  4932                           
  4933                           ;LCD.c: 29:     if (a & 8)
  4934     0DB6  1DF0               	btfss	Lcd_Port@a,3
  4935     0DB7  2DB9               	goto	u1161
  4936     0DB8  2DBA               	goto	u1160
  4937     0DB9                     u1161:
  4938     0DB9  2DBC               	goto	l252
  4939     0DBA                     u1160:
  4940     0DBA                     l1792:
  4941                           
  4942                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  4943     0DBA  1786               	bsf	6,7	;volatile
  4944     0DBB  2DBD               	goto	l254
  4945     0DBC                     l252:	
  4946                           ;LCD.c: 31:     else
  4947                           
  4948                           
  4949                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  4950     0DBC  1386               	bcf	6,7	;volatile
  4951     0DBD                     l254:
  4952     0DBD  0008               	return
  4953     0DBE                     __end_of_Lcd_Port:
  4954                           
  4955                           	psect	text17
  4956     0199                     __ptext17:	
  4957 ;; *************** function _DS3231_Set_Date_Time *****************
  4958 ;; Defined at:
  4959 ;;		line 11 in file "ds3231.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  dy              1    wreg     unsigned char 
  4962 ;;  mth             1    4[COMMON] unsigned char 
  4963 ;;  yr              1    5[COMMON] unsigned char 
  4964 ;;  dw              1    6[COMMON] unsigned char 
  4965 ;;  hr              1    7[COMMON] unsigned char 
  4966 ;;  mn              1    8[COMMON] unsigned char 
  4967 ;;  sc              1    9[COMMON] unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  dy              1   11[COMMON] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, pclath, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4979 ;;      Params:         6       0       0       0       0
  4980 ;;      Locals:         1       0       0       0       0
  4981 ;;      Temps:          1       0       0       0       0
  4982 ;;      Totals:         8       0       0       0       0
  4983 ;;Total ram usage:        8 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 1
  4986 ;; This function calls:
  4987 ;;		_DS3231_Bin_Bcd
  4988 ;;		_I2C_Start
  4989 ;;		_I2C_Stop
  4990 ;;		_I2C_Write
  4991 ;; This function is called by:
  4992 ;;		_CLK_CONFIG
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996     0199                     _DS3231_Set_Date_Time:	
  4997                           ;psect for function _DS3231_Set_Date_Time
  4998                           
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _DS3231_Set_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  5002                           ;DS3231_Set_Date_Time@dy stored from wreg
  5003     0199  00FB               	movwf	DS3231_Set_Date_Time@dy
  5004     019A                     l2132:
  5005                           
  5006                           ;ds3231.c: 11: void DS3231_Set_Date_Time(uint8_t dy, uint8_t mth, uint8_t yr, uint8_t dw
      +                          , uint8_t hr, uint8_t mn, uint8_t sc);ds3231.c: 12: {;ds3231.c: 13:     sc &= 0x7F;
  5007     019A  307F               	movlw	127
  5008     019B  00FA               	movwf	??_DS3231_Set_Date_Time
  5009     019C  087A               	movf	??_DS3231_Set_Date_Time,w
  5010     019D  05F9               	andwf	DS3231_Set_Date_Time@sc,f
  5011                           
  5012                           ;ds3231.c: 14:     hr &= 0x3F;
  5013     019E  303F               	movlw	63
  5014     019F  00FA               	movwf	??_DS3231_Set_Date_Time
  5015     01A0  087A               	movf	??_DS3231_Set_Date_Time,w
  5016     01A1  05F7               	andwf	DS3231_Set_Date_Time@hr,f
  5017     01A2                     l2134:
  5018                           
  5019                           ;ds3231.c: 15:     I2C_Start();
  5020     01A2  120A  158A  24B5  120A  118A  	fcall	_I2C_Start
  5021     01A7                     l2136:
  5022                           
  5023                           ;ds3231.c: 16:     I2C_Write(0xD0);
  5024     01A7  30D0               	movlw	208
  5025     01A8  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5026     01AD                     l2138:
  5027                           
  5028                           ;ds3231.c: 17:     I2C_Write(0x00);
  5029     01AD  3000               	movlw	0
  5030     01AE  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5031     01B3                     l2140:
  5032                           
  5033                           ;ds3231.c: 18:     I2C_Write(DS3231_Bin_Bcd(sc));
  5034     01B3  0879               	movf	DS3231_Set_Date_Time@sc,w
  5035     01B4  120A  158A  2534  120A  118A  	fcall	_DS3231_Bin_Bcd
  5036     01B9  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5037     01BE                     l2142:
  5038                           
  5039                           ;ds3231.c: 19:     I2C_Write(DS3231_Bin_Bcd(mn));
  5040     01BE  0878               	movf	DS3231_Set_Date_Time@mn,w
  5041     01BF  120A  158A  2534  120A  118A  	fcall	_DS3231_Bin_Bcd
  5042     01C4  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5043     01C9                     l2144:
  5044                           
  5045                           ;ds3231.c: 20:     I2C_Write(DS3231_Bin_Bcd(hr));
  5046     01C9  0877               	movf	DS3231_Set_Date_Time@hr,w
  5047     01CA  120A  158A  2534  120A  118A  	fcall	_DS3231_Bin_Bcd
  5048     01CF  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5049     01D4                     l2146:
  5050                           
  5051                           ;ds3231.c: 21:     I2C_Write(DS3231_Bin_Bcd(dw));
  5052     01D4  0876               	movf	DS3231_Set_Date_Time@dw,w
  5053     01D5  120A  158A  2534  120A  118A  	fcall	_DS3231_Bin_Bcd
  5054     01DA  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5055     01DF                     l2148:
  5056                           
  5057                           ;ds3231.c: 22:     I2C_Write(DS3231_Bin_Bcd(dy));
  5058     01DF  087B               	movf	DS3231_Set_Date_Time@dy,w
  5059     01E0  120A  158A  2534  120A  118A  	fcall	_DS3231_Bin_Bcd
  5060     01E5  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5061     01EA                     l2150:
  5062                           
  5063                           ;ds3231.c: 23:     I2C_Write(DS3231_Bin_Bcd(mth));
  5064     01EA  0874               	movf	DS3231_Set_Date_Time@mth,w
  5065     01EB  120A  158A  2534  120A  118A  	fcall	_DS3231_Bin_Bcd
  5066     01F0  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5067     01F5                     l2152:
  5068                           
  5069                           ;ds3231.c: 24:     I2C_Write(DS3231_Bin_Bcd(yr));
  5070     01F5  0875               	movf	DS3231_Set_Date_Time@yr,w
  5071     01F6  120A  158A  2534  120A  118A  	fcall	_DS3231_Bin_Bcd
  5072     01FB  120A  158A  24EC  120A  118A  	fcall	_I2C_Write
  5073     0200                     l2154:
  5074                           
  5075                           ;ds3231.c: 25:     I2C_Stop();
  5076     0200  120A  158A  24BF  120A  118A  	fcall	_I2C_Stop
  5077     0205                     l309:
  5078     0205  0008               	return
  5079     0206                     __end_of_DS3231_Set_Date_Time:
  5080                           
  5081                           	psect	text18
  5082     0D34                     __ptext18:	
  5083 ;; *************** function _DS3231_Bin_Bcd *****************
  5084 ;; Defined at:
  5085 ;;		line 67 in file "ds3231.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  binary_value    1    wreg     unsigned char 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  binary_value    1    1[COMMON] unsigned char 
  5090 ;;  temp            1    3[COMMON] unsigned char 
  5091 ;;  retval          1    2[COMMON] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      unsigned char 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         0       0       0       0       0
  5102 ;;      Locals:         3       0       0       0       0
  5103 ;;      Temps:          1       0       0       0       0
  5104 ;;      Totals:         4       0       0       0       0
  5105 ;;Total ram usage:        4 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_DS3231_Set_Date_Time
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114     0D34                     _DS3231_Bin_Bcd:	
  5115                           ;psect for function _DS3231_Bin_Bcd
  5116                           
  5117                           
  5118                           ;incstack = 0
  5119                           ; Regs used in _DS3231_Bin_Bcd: [wreg+status,2+status,0]
  5120                           ;DS3231_Bin_Bcd@binary_value stored from wreg
  5121     0D34  00F1               	movwf	DS3231_Bin_Bcd@binary_value
  5122     0D35                     l1824:
  5123                           
  5124                           ;ds3231.c: 67: uint8_t DS3231_Bin_Bcd(uint8_t binary_value);ds3231.c: 68: {;ds3231.c: 69
      +                          :     uint8_t temp;;ds3231.c: 70:     uint8_t retval;;ds3231.c: 71:     temp = binary_va
      +                          lue;
  5125     0D35  0871               	movf	DS3231_Bin_Bcd@binary_value,w
  5126     0D36  00F3               	movwf	DS3231_Bin_Bcd@temp
  5127     0D37                     l1826:
  5128                           
  5129                           ;ds3231.c: 72:     retval = 0;
  5130     0D37  01F2               	clrf	DS3231_Bin_Bcd@retval
  5131     0D38                     l1828:
  5132                           
  5133                           ;ds3231.c: 74:     {;ds3231.c: 75:         if(temp >= 10){
  5134     0D38  300A               	movlw	10
  5135     0D39  0273               	subwf	DS3231_Bin_Bcd@temp,w
  5136     0D3A  1C03               	skipc
  5137     0D3B  2D3D               	goto	u1181
  5138     0D3C  2D3E               	goto	u1180
  5139     0D3D                     u1181:
  5140     0D3D  2D45               	goto	l1832
  5141     0D3E                     u1180:
  5142     0D3E                     l1830:
  5143                           
  5144                           ;ds3231.c: 76:             temp -= 10;
  5145     0D3E  300A               	movlw	10
  5146     0D3F  02F3               	subwf	DS3231_Bin_Bcd@temp,f
  5147                           
  5148                           ;ds3231.c: 77:             retval += 0x10;
  5149     0D40  3010               	movlw	16
  5150     0D41  00F0               	movwf	??_DS3231_Bin_Bcd
  5151     0D42  0870               	movf	??_DS3231_Bin_Bcd,w
  5152     0D43  07F2               	addwf	DS3231_Bin_Bcd@retval,f
  5153                           
  5154                           ;ds3231.c: 78:         }else{
  5155     0D44  2D38               	goto	l1828
  5156     0D45                     l1832:
  5157                           
  5158                           ;ds3231.c: 79:             retval += temp;
  5159     0D45  0873               	movf	DS3231_Bin_Bcd@temp,w
  5160     0D46  00F0               	movwf	??_DS3231_Bin_Bcd
  5161     0D47  0870               	movf	??_DS3231_Bin_Bcd,w
  5162     0D48  07F2               	addwf	DS3231_Bin_Bcd@retval,f
  5163     0D49                     l1834:	
  5164                           ;ds3231.c: 80:             break;
  5165                           
  5166                           
  5167                           ;ds3231.c: 83:     return(retval);
  5168     0D49  0872               	movf	DS3231_Bin_Bcd@retval,w
  5169     0D4A                     l329:
  5170     0D4A  0008               	return
  5171     0D4B                     __end_of_DS3231_Bin_Bcd:
  5172                           
  5173                           	psect	text19
  5174     0E69                     __ptext19:	
  5175 ;; *************** function _DS3231_Get_Time *****************
  5176 ;; Defined at:
  5177 ;;		line 36 in file "ds3231.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  hr              2    4[COMMON] PTR unsigned char 
  5180 ;;		 -> RAM(512), 
  5181 ;;  min             2    6[COMMON] PTR unsigned char 
  5182 ;;		 -> RAM(512), 
  5183 ;;  sec             2    8[COMMON] PTR unsigned char 
  5184 ;;		 -> RAM(512), 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5196 ;;      Params:         6       0       0       0       0
  5197 ;;      Locals:         0       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0
  5199 ;;      Totals:         6       0       0       0       0
  5200 ;;Total ram usage:        6 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; Hardware stack levels required when called: 2
  5203 ;; This function calls:
  5204 ;;		_DS3231_Bcd_Bin
  5205 ;;		_DS3231_Read
  5206 ;; This function is called by:
  5207 ;;		_CLK_CONFIG
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211     0E69                     _DS3231_Get_Time:	
  5212                           ;psect for function _DS3231_Get_Time
  5213                           
  5214     0E69                     l1970:	
  5215                           ;incstack = 0
  5216                           ; Regs used in _DS3231_Get_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5217                           
  5218                           
  5219                           ;ds3231.c: 36: void DS3231_Get_Time(uint8_t *hr, uint8_t *min, uint8_t *sec);ds3231.c: 3
      +                          7: {;ds3231.c: 38:     *sec = DS3231_Bcd_Bin(DS3231_Read(0x00) & 0x7F);
  5220     0E69  0878               	movf	DS3231_Get_Time@sec,w
  5221     0E6A  0084               	movwf	4
  5222     0E6B  1783               	bsf	3,7
  5223     0E6C  1C79               	btfss	DS3231_Get_Time@sec+1,0
  5224     0E6D  1383               	bcf	3,7
  5225     0E6E  3000               	movlw	0
  5226     0E6F  120A  158A  2605  120A  158A  	fcall	_DS3231_Read
  5227     0E74  397F               	andlw	127
  5228     0E75  120A  158A  254B  120A  158A  	fcall	_DS3231_Bcd_Bin
  5229     0E7A  0080               	movwf	0
  5230                           
  5231                           ;ds3231.c: 39:     *min = DS3231_Bcd_Bin(DS3231_Read(0x01) & 0x7F);
  5232     0E7B  0876               	movf	DS3231_Get_Time@min,w
  5233     0E7C  0084               	movwf	4
  5234     0E7D  1783               	bsf	3,7
  5235     0E7E  1C77               	btfss	DS3231_Get_Time@min+1,0
  5236     0E7F  1383               	bcf	3,7
  5237     0E80  3001               	movlw	1
  5238     0E81  120A  158A  2605  120A  158A  	fcall	_DS3231_Read
  5239     0E86  397F               	andlw	127
  5240     0E87  120A  158A  254B  120A  158A  	fcall	_DS3231_Bcd_Bin
  5241     0E8C  0080               	movwf	0
  5242                           
  5243                           ;ds3231.c: 40:     *hr = DS3231_Bcd_Bin(DS3231_Read(0x02) & 0x3F);
  5244     0E8D  0874               	movf	DS3231_Get_Time@hr,w
  5245     0E8E  0084               	movwf	4
  5246     0E8F  1783               	bsf	3,7
  5247     0E90  1C75               	btfss	DS3231_Get_Time@hr+1,0
  5248     0E91  1383               	bcf	3,7
  5249     0E92  3002               	movlw	2
  5250     0E93  120A  158A  2605  120A  158A  	fcall	_DS3231_Read
  5251     0E98  393F               	andlw	63
  5252     0E99  120A  158A  254B  120A  158A  	fcall	_DS3231_Bcd_Bin
  5253     0E9E  0080               	movwf	0
  5254     0E9F                     l315:
  5255     0E9F  0008               	return
  5256     0EA0                     __end_of_DS3231_Get_Time:
  5257                           
  5258                           	psect	text20
  5259     0F6C                     __ptext20:	
  5260 ;; *************** function _DS3231_Get_Date *****************
  5261 ;; Defined at:
  5262 ;;		line 28 in file "ds3231.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  day             2    4[COMMON] PTR unsigned char 
  5265 ;;		 -> DS3231_Get_DayOfWeek@lday(1), RAM(512), 
  5266 ;;  mth             2    6[COMMON] PTR unsigned char 
  5267 ;;		 -> DS3231_Get_DayOfWeek@lmonth(1), RAM(512), 
  5268 ;;  year            2    8[COMMON] PTR unsigned char 
  5269 ;;		 -> DS3231_Get_DayOfWeek@lyr(1), RAM(512), 
  5270 ;;  dow             2   10[COMMON] PTR unsigned char 
  5271 ;;		 -> DS3231_Get_DayOfWeek@ldow(1), RAM(512), 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5283 ;;      Params:         8       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0
  5286 ;;      Totals:         8       0       0       0       0
  5287 ;;Total ram usage:        8 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 2
  5290 ;; This function calls:
  5291 ;;		_DS3231_Bcd_Bin
  5292 ;;		_DS3231_Read
  5293 ;; This function is called by:
  5294 ;;		_CLK_CONFIG
  5295 ;;		_DS3231_Get_DayOfWeek
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299     0F6C                     _DS3231_Get_Date:	
  5300                           ;psect for function _DS3231_Get_Date
  5301                           
  5302     0F6C                     l1968:	
  5303                           ;incstack = 0
  5304                           ; Regs used in _DS3231_Get_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5305                           
  5306                           
  5307                           ;ds3231.c: 28: void DS3231_Get_Date(uint8_t *day, uint8_t *mth, uint8_t *year, uint8_t *
      +                          dow);ds3231.c: 29: {;ds3231.c: 30:     *dow = DS3231_Bcd_Bin(DS3231_Read(0x03) & 0x7F);
  5308     0F6C  087A               	movf	DS3231_Get_Date@dow,w
  5309     0F6D  0084               	movwf	4
  5310     0F6E  1783               	bsf	3,7
  5311     0F6F  1C7B               	btfss	DS3231_Get_Date@dow+1,0
  5312     0F70  1383               	bcf	3,7
  5313     0F71  3003               	movlw	3
  5314     0F72  120A  158A  2605  120A  158A  	fcall	_DS3231_Read
  5315     0F77  397F               	andlw	127
  5316     0F78  120A  158A  254B  120A  158A  	fcall	_DS3231_Bcd_Bin
  5317     0F7D  0080               	movwf	0
  5318                           
  5319                           ;ds3231.c: 31:     *day = DS3231_Bcd_Bin(DS3231_Read(0x04) & 0x3F);
  5320     0F7E  0874               	movf	DS3231_Get_Date@day,w
  5321     0F7F  0084               	movwf	4
  5322     0F80  1783               	bsf	3,7
  5323     0F81  1C75               	btfss	DS3231_Get_Date@day+1,0
  5324     0F82  1383               	bcf	3,7
  5325     0F83  3004               	movlw	4
  5326     0F84  120A  158A  2605  120A  158A  	fcall	_DS3231_Read
  5327     0F89  393F               	andlw	63
  5328     0F8A  120A  158A  254B  120A  158A  	fcall	_DS3231_Bcd_Bin
  5329     0F8F  0080               	movwf	0
  5330                           
  5331                           ;ds3231.c: 32:     *mth = DS3231_Bcd_Bin(DS3231_Read(0x05) & 0x1F);
  5332     0F90  0876               	movf	DS3231_Get_Date@mth,w
  5333     0F91  0084               	movwf	4
  5334     0F92  1783               	bsf	3,7
  5335     0F93  1C77               	btfss	DS3231_Get_Date@mth+1,0
  5336     0F94  1383               	bcf	3,7
  5337     0F95  3005               	movlw	5
  5338     0F96  120A  158A  2605  120A  158A  	fcall	_DS3231_Read
  5339     0F9B  391F               	andlw	31
  5340     0F9C  120A  158A  254B  120A  158A  	fcall	_DS3231_Bcd_Bin
  5341     0FA1  0080               	movwf	0
  5342                           
  5343                           ;ds3231.c: 33:     *year = DS3231_Bcd_Bin(DS3231_Read(0x06));
  5344     0FA2  0878               	movf	DS3231_Get_Date@year,w
  5345     0FA3  0084               	movwf	4
  5346     0FA4  1783               	bsf	3,7
  5347     0FA5  1C79               	btfss	DS3231_Get_Date@year+1,0
  5348     0FA6  1383               	bcf	3,7
  5349     0FA7  3006               	movlw	6
  5350     0FA8  120A  158A  2605  120A  158A  	fcall	_DS3231_Read
  5351     0FAD  120A  158A  254B  120A  158A  	fcall	_DS3231_Bcd_Bin
  5352     0FB2  0080               	movwf	0
  5353     0FB3                     l312:
  5354     0FB3  0008               	return
  5355     0FB4                     __end_of_DS3231_Get_Date:
  5356                           
  5357                           	psect	text21
  5358     0E05                     __ptext21:	
  5359 ;; *************** function _DS3231_Read *****************
  5360 ;; Defined at:
  5361 ;;		line 53 in file "ds3231.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  reg             1    wreg     unsigned char 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  reg             1    1[COMMON] unsigned char 
  5366 ;;  data            1    2[COMMON] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      unsigned char 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0, pclath, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5376 ;;      Params:         0       0       0       0       0
  5377 ;;      Locals:         2       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0
  5379 ;;      Totals:         2       0       0       0       0
  5380 ;;Total ram usage:        2 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 1
  5383 ;; This function calls:
  5384 ;;		_I2C_Nack
  5385 ;;		_I2C_Read
  5386 ;;		_I2C_Restart
  5387 ;;		_I2C_Start
  5388 ;;		_I2C_Stop
  5389 ;;		_I2C_Write
  5390 ;; This function is called by:
  5391 ;;		_DS3231_Get_Date
  5392 ;;		_DS3231_Get_Time
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396     0E05                     _DS3231_Read:	
  5397                           ;psect for function _DS3231_Read
  5398                           
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in _DS3231_Read: [wreg+status,2+status,0+pclath+cstack]
  5402                           ;DS3231_Read@reg stored from wreg
  5403     0E05  00F1               	movwf	DS3231_Read@reg
  5404     0E06                     l1838:
  5405     0E06                     l1840:
  5406                           
  5407                           ;ds3231.c: 56:     I2C_Start();
  5408     0E06  120A  158A  24B5  120A  158A  	fcall	_I2C_Start
  5409     0E0B                     l1842:
  5410                           
  5411                           ;ds3231.c: 57:     I2C_Write(0xD0);
  5412     0E0B  30D0               	movlw	208
  5413     0E0C  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  5414     0E11                     l1844:
  5415                           
  5416                           ;ds3231.c: 58:     I2C_Write(reg);
  5417     0E11  0871               	movf	DS3231_Read@reg,w
  5418     0E12  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  5419     0E17                     l1846:
  5420                           
  5421                           ;ds3231.c: 59:     I2C_Restart();
  5422     0E17  120A  158A  24AB  120A  158A  	fcall	_I2C_Restart
  5423     0E1C                     l1848:
  5424                           
  5425                           ;ds3231.c: 60:     I2C_Write(0xD0 | 0x01);
  5426     0E1C  30D1               	movlw	209
  5427     0E1D  120A  158A  24EC  120A  158A  	fcall	_I2C_Write
  5428     0E22                     l1850:
  5429                           
  5430                           ;ds3231.c: 61:     data = I2C_Read();
  5431     0E22  120A  158A  24D4  120A  158A  	fcall	_I2C_Read
  5432     0E27  00F2               	movwf	DS3231_Read@data
  5433     0E28                     l1852:
  5434                           
  5435                           ;ds3231.c: 62:     I2C_Nack();
  5436     0E28  120A  158A  24C9  120A  158A  	fcall	_I2C_Nack
  5437     0E2D                     l1854:
  5438                           
  5439                           ;ds3231.c: 63:     I2C_Stop();
  5440     0E2D  120A  158A  24BF  120A  158A  	fcall	_I2C_Stop
  5441     0E32                     l1856:
  5442                           
  5443                           ;ds3231.c: 64:     return data;
  5444     0E32  0872               	movf	DS3231_Read@data,w
  5445     0E33                     l321:
  5446     0E33  0008               	return
  5447     0E34                     __end_of_DS3231_Read:
  5448                           
  5449                           	psect	text22
  5450     0CEC                     __ptext22:	
  5451 ;; *************** function _I2C_Write *****************
  5452 ;; Defined at:
  5453 ;;		line 64 in file "i2c.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  data            1    wreg     unsigned char 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  data            1    0[COMMON] unsigned char 
  5458 ;;  b_ok            2    0        short 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  2    6[None  ] short 
  5461 ;; Registers used:
  5462 ;;		wreg
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5468 ;;      Params:         0       0       0       0       0
  5469 ;;      Locals:         1       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0
  5471 ;;      Totals:         1       0       0       0       0
  5472 ;;Total ram usage:        1 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_main
  5478 ;;		_DS3231_Set_Date_Time
  5479 ;;		_DS3231_Read
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483     0CEC                     _I2C_Write:	
  5484                           ;psect for function _I2C_Write
  5485                           
  5486                           
  5487                           ;incstack = 0
  5488                           ; Regs used in _I2C_Write: [wreg]
  5489                           ;I2C_Write@data stored from wreg
  5490     0CEC  00F0               	movwf	I2C_Write@data
  5491     0CED                     l1766:
  5492                           
  5493                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  5494     0CED  0870               	movf	I2C_Write@data,w
  5495     0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  5496     0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  5497     0CF0  0093               	movwf	19	;volatile
  5498     0CF1                     l228:	
  5499                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  5500                           
  5501     0CF1  1D8C               	btfss	12,3	;volatile
  5502     0CF2  2CF4               	goto	u1081
  5503     0CF3  2CF5               	goto	u1080
  5504     0CF4                     u1081:
  5505     0CF4  2CF1               	goto	l228
  5506     0CF5                     u1080:
  5507     0CF5                     l230:
  5508                           
  5509                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  5510     0CF5  118C               	bcf	12,3	;volatile
  5511     0CF6                     l1768:
  5512     0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  5513     0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  5514     0CF8  0811               	movf	17,w	;volatile
  5515     0CF9                     l231:
  5516     0CF9  0008               	return
  5517     0CFA                     __end_of_I2C_Write:
  5518                           
  5519                           	psect	text23
  5520     0CBF                     __ptext23:	
  5521 ;; *************** function _I2C_Stop *****************
  5522 ;; Defined at:
  5523 ;;		line 34 in file "i2c.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		None
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5537 ;;      Params:         0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0
  5540 ;;      Totals:         0       0       0       0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_main
  5547 ;;		_DS3231_Set_Date_Time
  5548 ;;		_DS3231_Read
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552     0CBF                     _I2C_Stop:	
  5553                           ;psect for function _I2C_Stop
  5554                           
  5555     0CBF                     l1778:	
  5556                           ;incstack = 0
  5557                           ; Regs used in _I2C_Stop: []
  5558                           
  5559                           
  5560                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  5561     0CBF  1683               	bsf	3,5	;RP0=1, select bank1
  5562     0CC0  1303               	bcf	3,6	;RP1=0, select bank1
  5563     0CC1  1511               	bsf	17,2	;volatile
  5564     0CC2                     l204:	
  5565                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  5566                           
  5567     0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  5568     0CC3  1D8C               	btfss	12,3	;volatile
  5569     0CC4  2CC6               	goto	u1101
  5570     0CC5  2CC7               	goto	u1100
  5571     0CC6                     u1101:
  5572     0CC6  2CC2               	goto	l204
  5573     0CC7                     u1100:
  5574     0CC7                     l206:
  5575                           
  5576                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  5577     0CC7  118C               	bcf	12,3	;volatile
  5578     0CC8                     l207:
  5579     0CC8  0008               	return
  5580     0CC9                     __end_of_I2C_Stop:
  5581                           
  5582                           	psect	text24
  5583     0CB5                     __ptext24:	
  5584 ;; *************** function _I2C_Start *****************
  5585 ;; Defined at:
  5586 ;;		line 27 in file "i2c.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		None
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5600 ;;      Params:         0       0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0
  5603 ;;      Totals:         0       0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; This function calls:
  5607 ;;		Nothing
  5608 ;; This function is called by:
  5609 ;;		_main
  5610 ;;		_DS3231_Set_Date_Time
  5611 ;;		_DS3231_Read
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615     0CB5                     _I2C_Start:	
  5616                           ;psect for function _I2C_Start
  5617                           
  5618     0CB5                     l1764:	
  5619                           ;incstack = 0
  5620                           ; Regs used in _I2C_Start: []
  5621                           
  5622                           
  5623                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  5624     0CB5  1683               	bsf	3,5	;RP0=1, select bank1
  5625     0CB6  1303               	bcf	3,6	;RP1=0, select bank1
  5626     0CB7  1411               	bsf	17,0	;volatile
  5627     0CB8                     l198:	
  5628                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  5629                           
  5630     0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  5631     0CB9  1D8C               	btfss	12,3	;volatile
  5632     0CBA  2CBC               	goto	u1071
  5633     0CBB  2CBD               	goto	u1070
  5634     0CBC                     u1071:
  5635     0CBC  2CB8               	goto	l198
  5636     0CBD                     u1070:
  5637     0CBD                     l200:
  5638                           
  5639                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  5640     0CBD  118C               	bcf	12,3	;volatile
  5641     0CBE                     l201:
  5642     0CBE  0008               	return
  5643     0CBF                     __end_of_I2C_Start:
  5644                           
  5645                           	psect	text25
  5646     0CAB                     __ptext25:	
  5647 ;; *************** function _I2C_Restart *****************
  5648 ;; Defined at:
  5649 ;;		line 41 in file "i2c.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		None
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5663 ;;      Params:         0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0
  5666 ;;      Totals:         0       0       0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used: 1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_DS3231_Read
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676     0CAB                     _I2C_Restart:	
  5677                           ;psect for function _I2C_Restart
  5678                           
  5679     0CAB                     l1780:	
  5680                           ;incstack = 0
  5681                           ; Regs used in _I2C_Restart: []
  5682                           
  5683                           
  5684                           ;i2c.c: 43:     SSPCON2bits.RSEN = 1;
  5685     0CAB  1683               	bsf	3,5	;RP0=1, select bank1
  5686     0CAC  1303               	bcf	3,6	;RP1=0, select bank1
  5687     0CAD  1491               	bsf	17,1	;volatile
  5688     0CAE                     l210:	
  5689                           ;i2c.c: 44:     while(PIR1bits.SSPIF == 0);
  5690                           
  5691     0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  5692     0CAF  1D8C               	btfss	12,3	;volatile
  5693     0CB0  2CB2               	goto	u1111
  5694     0CB1  2CB3               	goto	u1110
  5695     0CB2                     u1111:
  5696     0CB2  2CAE               	goto	l210
  5697     0CB3                     u1110:
  5698     0CB3                     l212:
  5699                           
  5700                           ;i2c.c: 45:     PIR1bits.SSPIF = 0;
  5701     0CB3  118C               	bcf	12,3	;volatile
  5702     0CB4                     l213:
  5703     0CB4  0008               	return
  5704     0CB5                     __end_of_I2C_Restart:
  5705                           
  5706                           	psect	text26
  5707     0CD4                     __ptext26:	
  5708 ;; *************** function _I2C_Read *****************
  5709 ;; Defined at:
  5710 ;;		line 73 in file "i2c.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      unsigned char 
  5717 ;; Registers used:
  5718 ;;		wreg
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5724 ;;      Params:         0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used: 1
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;;		_DS3231_Read
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738     0CD4                     _I2C_Read:	
  5739                           ;psect for function _I2C_Read
  5740                           
  5741     0CD4                     l1772:	
  5742                           ;incstack = 0
  5743                           ; Regs used in _I2C_Read: [wreg]
  5744                           
  5745                           
  5746                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
  5747     0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  5748     0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  5749     0CD6  1591               	bsf	17,3	;volatile
  5750     0CD7                     l234:	
  5751                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
  5752                           
  5753     0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5754     0CD8  1D8C               	btfss	12,3	;volatile
  5755     0CD9  2CDB               	goto	u1091
  5756     0CDA  2CDC               	goto	u1090
  5757     0CDB                     u1091:
  5758     0CDB  2CD7               	goto	l234
  5759     0CDC                     u1090:
  5760     0CDC                     l236:
  5761                           
  5762                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
  5763     0CDC  118C               	bcf	12,3	;volatile
  5764     0CDD                     l1774:
  5765                           
  5766                           ;i2c.c: 78:     return SSPBUF;
  5767     0CDD  0813               	movf	19,w	;volatile
  5768     0CDE                     l237:
  5769     0CDE  0008               	return
  5770     0CDF                     __end_of_I2C_Read:
  5771                           
  5772                           	psect	text27
  5773     0CC9                     __ptext27:	
  5774 ;; *************** function _I2C_Nack *****************
  5775 ;; Defined at:
  5776 ;;		line 56 in file "i2c.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		None
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5790 ;;      Params:         0       0       0       0       0
  5791 ;;      Locals:         0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0
  5793 ;;      Totals:         0       0       0       0       0
  5794 ;;Total ram usage:        0 bytes
  5795 ;; Hardware stack levels used: 1
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_DS3231_Read
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803     0CC9                     _I2C_Nack:	
  5804                           ;psect for function _I2C_Nack
  5805                           
  5806     0CC9                     l1782:	
  5807                           ;incstack = 0
  5808                           ; Regs used in _I2C_Nack: []
  5809                           
  5810                           
  5811                           ;i2c.c: 58:     SSPCON2bits.ACKDT = 1;
  5812     0CC9  1683               	bsf	3,5	;RP0=1, select bank1
  5813     0CCA  1303               	bcf	3,6	;RP1=0, select bank1
  5814     0CCB  1691               	bsf	17,5	;volatile
  5815                           
  5816                           ;i2c.c: 59:  SSPCON2bits.ACKEN = 1;
  5817     0CCC  1611               	bsf	17,4	;volatile
  5818     0CCD                     l222:	
  5819                           ;i2c.c: 60:  while(PIR1bits.SSPIF == 0);
  5820                           
  5821     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  5822     0CCE  1D8C               	btfss	12,3	;volatile
  5823     0CCF  2CD1               	goto	u1121
  5824     0CD0  2CD2               	goto	u1120
  5825     0CD1                     u1121:
  5826     0CD1  2CCD               	goto	l222
  5827     0CD2                     u1120:
  5828     0CD2                     l224:
  5829                           
  5830                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
  5831     0CD2  118C               	bcf	12,3	;volatile
  5832     0CD3                     l225:
  5833     0CD3  0008               	return
  5834     0CD4                     __end_of_I2C_Nack:
  5835                           
  5836                           	psect	text28
  5837     0D4B                     __ptext28:	
  5838 ;; *************** function _DS3231_Bcd_Bin *****************
  5839 ;; Defined at:
  5840 ;;		line 86 in file "ds3231.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  bcd_value       1    wreg     unsigned char 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  bcd_value       1    2[COMMON] unsigned char 
  5845 ;;  temp            1    3[COMMON] unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      unsigned char 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5855 ;;      Params:         0       0       0       0       0
  5856 ;;      Locals:         2       0       0       0       0
  5857 ;;      Temps:          2       0       0       0       0
  5858 ;;      Totals:         4       0       0       0       0
  5859 ;;Total ram usage:        4 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_DS3231_Get_Date
  5865 ;;		_DS3231_Get_Time
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869     0D4B                     _DS3231_Bcd_Bin:	
  5870                           ;psect for function _DS3231_Bcd_Bin
  5871                           
  5872                           
  5873                           ;incstack = 0
  5874                           ; Regs used in _DS3231_Bcd_Bin: [wreg+status,2+status,0]
  5875                           ;DS3231_Bcd_Bin@bcd_value stored from wreg
  5876     0D4B  00F2               	movwf	DS3231_Bcd_Bin@bcd_value
  5877     0D4C                     l1860:
  5878                           
  5879                           ;ds3231.c: 86: uint8_t DS3231_Bcd_Bin(uint8_t bcd_value);ds3231.c: 87: {;ds3231.c: 88:  
      +                             uint8_t temp;;ds3231.c: 89:     temp = bcd_value;
  5880     0D4C  0872               	movf	DS3231_Bcd_Bin@bcd_value,w
  5881     0D4D  00F3               	movwf	DS3231_Bcd_Bin@temp
  5882                           
  5883                           ;ds3231.c: 90:     temp >>= 1;
  5884     0D4E  1003               	clrc
  5885     0D4F  0CF3               	rrf	DS3231_Bcd_Bin@temp,f
  5886     0D50                     l1862:
  5887                           
  5888                           ;ds3231.c: 91:     temp &= 0x78;
  5889     0D50  3078               	movlw	120
  5890     0D51  00F0               	movwf	??_DS3231_Bcd_Bin
  5891     0D52  0870               	movf	??_DS3231_Bcd_Bin,w
  5892     0D53  05F3               	andwf	DS3231_Bcd_Bin@temp,f
  5893     0D54                     l1864:
  5894                           
  5895                           ;ds3231.c: 92:     return(temp + (temp >> 2) + (bcd_value & 0x0f));
  5896     0D54  0873               	movf	DS3231_Bcd_Bin@temp,w
  5897     0D55  00F0               	movwf	??_DS3231_Bcd_Bin
  5898     0D56  3002               	movlw	2
  5899     0D57                     u1195:
  5900     0D57  1003               	clrc
  5901     0D58  0CF0               	rrf	??_DS3231_Bcd_Bin,f
  5902     0D59  3EFF               	addlw	-1
  5903     0D5A  1D03               	skipz
  5904     0D5B  2D57               	goto	u1195
  5905     0D5C  0872               	movf	DS3231_Bcd_Bin@bcd_value,w
  5906     0D5D  390F               	andlw	15
  5907     0D5E  0770               	addwf	??_DS3231_Bcd_Bin,w
  5908     0D5F  00F1               	movwf	??_DS3231_Bcd_Bin+1
  5909     0D60  0873               	movf	DS3231_Bcd_Bin@temp,w
  5910     0D61  0771               	addwf	??_DS3231_Bcd_Bin+1,w
  5911     0D62                     l332:
  5912     0D62  0008               	return
  5913     0D63                     __end_of_DS3231_Bcd_Bin:
  5914     007E                     btemp	set	126	;btemp
  5915     007E                     wtemp0	set	126
  5916                           
  5917                           	psect	idloc
  5918                           
  5919                           ;Config register IDLOC0 @ 0x2000
  5920                           ;	unspecified, using default values
  5921     2000                     	org	8192
  5922     2000  3FFF               	dw	16383
  5923                           
  5924                           ;Config register IDLOC1 @ 0x2001
  5925                           ;	unspecified, using default values
  5926     2001                     	org	8193
  5927     2001  3FFF               	dw	16383
  5928                           
  5929                           ;Config register IDLOC2 @ 0x2002
  5930                           ;	unspecified, using default values
  5931     2002                     	org	8194
  5932     2002  3FFF               	dw	16383
  5933                           
  5934                           ;Config register IDLOC3 @ 0x2003
  5935                           ;	unspecified, using default values
  5936     2003                     	org	8195
  5937     2003  3FFF               	dw	16383
  5938                           
  5939                           	psect	config
  5940                           
  5941                           ;Config register CONFIG1 @ 0x2007
  5942                           ;	Oscillator Selection bits
  5943                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5944                           ;	Watchdog Timer Enable bit
  5945                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5946                           ;	Power-up Timer Enable bit
  5947                           ;	PWRTE = OFF, PWRT disabled
  5948                           ;	RE3/MCLR pin function select bit
  5949                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5950                           ;	Code Protection bit
  5951                           ;	CP = OFF, Program memory code protection is disabled
  5952                           ;	Data Code Protection bit
  5953                           ;	CPD = OFF, Data memory code protection is disabled
  5954                           ;	Brown Out Reset Selection bits
  5955                           ;	BOREN = OFF, BOR disabled
  5956                           ;	Internal External Switchover bit
  5957                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5958                           ;	Fail-Safe Clock Monitor Enabled bit
  5959                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5960                           ;	Low Voltage Programming Enable bit
  5961                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5962                           ;	In-Circuit Debugger Mode bit
  5963                           ;	DEBUG = 0x1, unprogramme  5964     2007                     	org	8199
  5965     2007  20D4               	dw	8404
  5966                           
  5967                           ;Config register CONFIG2 @ 0x2008
  5968                           ;	Brown-out Reset Selection bit
  5969                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5970                           ;	Flash Program Memory Self Write Enable bits
  5971                           ;	WRT = OFF, Write protection off
  5972     2008                     	org	8200
  5973     2008  3FFF               	dw	16383

Data Sizes:
    Strings     146
    Constant    10
    Data        77
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      57
    BANK1            80      0      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    CLK_CONFIG$1144	PTR unsigned char  size(1) Largest target is 77
		 -> dw(BANK1[77]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 77
		 -> STR_14(CODE[7]), ?_sprintf(BANK0[2]), dw(BANK1[77]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[3]), STR_12(CODE[14]), STR_11(CODE[17]), STR_10(CODE[11]), 
		 -> STR_9(CODE[7]), STR_8(CODE[15]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[15]), STR_3(CODE[17]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    DS3231_Get_Time@hr	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Time@min	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Time@sec	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Date@year	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lyr(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@mth	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lmonth(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@day	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lday(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@dow	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@ldow(COMMON[1]), RAM(DATA[512]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _DS3231_Set_Date_Time->_DS3231_Bin_Bcd
    _DS3231_Get_Time->_DS3231_Bcd_Bin
    _DS3231_Get_Date->_DS3231_Bcd_Bin
    _DS3231_Read->_I2C_Write

Critical Paths under _main in BANK0

    _main->_CLK_CONFIG
    _CLK_CONFIG->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8522
                                             26 BANK0      2     2      0
                         _CLK_CONFIG
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _Lcd_Clear
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     264
                    _I2C_Init_Master
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _CLK_CONFIG                                           3     3      0    8119
                                             23 BANK0      3     3      0
                    _DS3231_Get_Date
                    _DS3231_Get_Time
               _DS3231_Set_Date_Time
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             ___bmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    3447
                                              0 BANK0     23    16      7
                             ___bmul (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     444
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     144
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1180
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1292
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DS3231_Set_Date_Time                                 8     2      6     734
                                              4 COMMON     8     2      6
                     _DS3231_Bin_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _DS3231_Bin_Bcd                                       4     4      0      93
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _DS3231_Get_Time                                      6     0      6     460
                                              4 COMMON     6     0      6
                     _DS3231_Bcd_Bin
                        _DS3231_Read
 ---------------------------------------------------------------------------------
 (2) _DS3231_Get_Date                                      8     0      8     862
                                              4 COMMON     8     0      8
                     _DS3231_Bcd_Bin
                        _DS3231_Read
 ---------------------------------------------------------------------------------
 (3) _DS3231_Read                                          2     2      0      75
                                              1 COMMON     2     2      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DS3231_Bcd_Bin                                       4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLK_CONFIG
     _DS3231_Get_Date
       _DS3231_Bcd_Bin
       _DS3231_Read
         _I2C_Nack
         _I2C_Read
         _I2C_Restart
         _I2C_Start
         _I2C_Stop
         _I2C_Write
     _DS3231_Get_Time
       _DS3231_Bcd_Bin
       _DS3231_Read
     _DS3231_Set_Date_Time
       _DS3231_Bin_Bcd
       _I2C_Start
       _I2C_Stop
       _I2C_Write
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___bmul
     _sprintf
       ___bmul (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _Lcd_Clear
     _Lcd_Cmd
   _setup
     _I2C_Init_Master
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      39       5       71.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      94      12        0.0%
ABS                  0      0      94       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 12 19:35:08 2023

                           pc 0002                ___bmul@product 0072                            l81 0FDE  
                          l97 04F4                            l89 0DDF                            _dw 00A0  
                          fsr 0004           ___wmul@multiplicand 0072                           l102 0515  
                         l200 0CBD                           l201 0CBE                           l113 057A  
                         l210 0CAE                           l130 0647                           l212 0CB3  
                         l204 0CC2                           l124 05DF                           l108 0559  
                         l213 0CB4                           l141 06A9                           l222 0CCD  
                         l206 0CC7                           l230 0CF5                           l207 0CC8  
                         l231 0CF9                           l135 0668                           l119 05BE  
                         l224 0CD2                           l312 0FB3                           l152 070B  
                         l225 0CD3                           l321 0E33                           l234 0CD7  
                         l250 0DB5                           l146 06CA                           l315 0E9F  
                         l251 0DB6                           l163 076D                           l332 0D62  
                         l236 0CDC                           l228 0CF1                           l252 0DBC  
                         l260 0CEB                           l237 0CDE                           l309 0205  
                         l157 072C                           l173 07E5                           l254 0DBD  
                         l246 0DA5                           l430 0220                           l247 0DA8  
                         l503 0D33                           l248 0DAE                           l272 0E68  
                         l168 078E                           l329 0D4A                           l249 0DAF  
                         l257 0D7C                           l266 0F6B                           l195 0D9B  
                         l269 0198                           l198 0CB8                           l278 0EE1  
                         l473 040F                           l477 0DEC                           l479 0E04  
                         l930 0D0B                           l749 0F25                           l759 00ED  
                         _dia 0026                           _ano 0024                           _dow 0023  
                         _mes 0025                           fsr0 0004                           indf 0000  
                        l2000 0209                          l2010 0221                          l2002 020C  
                        l2100 039F                          l2020 024C                          l2004 0212  
                        l2110 03BD                          l2102 03A5                          l2030 0290  
                        l2022 0261                          l2014 0225                          l2006 0217  
                        l2112 03E9                          l2104 03AA                          l2120 040B  
                        l2040 02A7                          l2032 0294                          l2024 0274  
                        l2016 0238                          l2008 021C                          l2200 0448  
                        l2114 03EE                          l2106 03AE                          l2050 02D1  
                        l2042 02B8                          l2034 029A                          l2026 0278  
                        l2018 0248                          l2210 048B                          l2202 0459  
                        l2140 01B3                          l2132 019A                          l2116 03F2  
                        l2108 03BA                          l2060 02FD                          l2052 02D5  
                        l2044 02C2                          l2036 029E                          l2028 0289  
                        l2220 04CE                          l2212 0494                          l2204 0461  
                        l2150 01EA                          l2142 01BE                          l2134 01A2  
                        l2070 0338                          l2062 030C                          l2054 02E4  
                        l2046 02C9                          l2038 02A1                          l2118 03FB  
                        l2310 05FA                          l2302 05E3                          l2230 04F8  
                        l2222 04D6                          l2214 04AD                          l2206 046A  
                        l2152 01F5                          l2144 01C9                          l2136 01A7  
                        l2160 0D25                          l2072 033C                          l2056 02F3  
                        l2048 02CC                          l2400 0740                          l2320 0641  
                        l2312 0602                          l2304 05ED                          l2232 0502  
                        l2224 04E5                          l2216 04B5                          l2208 0483  
                        l2154 0200                          l2146 01D4                          l2138 01AD  
                        l2162 0D29                          l2090 037F                          l2082 035A  
                        l2058 02F9                          l2066 0311                          l2410 0767  
                        l2402 0745                          l2330 0662                          l2314 0611  
                        l2306 05F3                          l2250 0533                          l2242 0519  
                        l2234 0508                          l2226 04EE                          l2218 04BE  
                        l2170 0DBE                          l2148 01DF                          l2164 0D2B  
                        l2156 0D20                          l2092 0383                          l2084 0364  
                        l2068 0330                          l2420 0788                          l2404 0747  
                        l2340 067C                          l2324 064B                          l2332 0664  
                        l2316 0622                          l2308 05F8                          l2260 055D  
                        l2252 053B                          l2244 0523                          l2236 050F  
                        l2180 0DD1                          l2172 0DC2                          l2166 0D32  
                        l2158 0D21                          l2094 0389                          l2086 036F  
                        l2078 033E                          l2430 07A2                          l2414 0771  
                        l2422 078A                          l2406 074F                          l2350 06A3  
                        l2342 0681                          l2326 0655                          l2318 0638  
                        l2262 0567                          l2254 054A                          l2246 0529  
                        l2238 0511                          l2190 0CDF                          l2182 0DD2  
                        l2174 0DC5                          l1800 0D70                          l2096 038E  
                        l2088 037B                          l2432 07A7                          l2416 077B  
                        l2408 075E                          l2360 06C4                          l2344 0683  
                        l2336 066C                          l2328 065B                          l2280 0598  
                        l2272 057E                          l2264 056D                          l2256 0553  
                        l2248 0530                          l2440 07BF                          l2192 0410  
                        l2184 0DD3                          l2176 0DC6                          l1802 0D79  
                        l1810 0E4C                          l2098 0392                          l2434 07A9  
                        l2426 0792                          l2418 0781                          l2370 06DE  
                        l2354 06AD                          l2362 06C6                          l2346 068B  
                        l2338 0676                          l2290 05C2                          l2282 05A0  
                        l2274 0588                          l2266 0574                          l2194 0411  
                        l2186 0DD4                          l2178 0DCE                          l2450 0FBE  
                        l1820 0E60                          l1812 0E4F                          l1804 0E35  
                        l1900 0EED                          l2540 0233                          l2436 07BB  
                        l2428 079C                          l2380 0705                          l2372 06E3  
                        l2356 06B7                          l2348 069A                          l2292 05CC  
                        l2284 05AF                          l2276 058E                          l2268 0576  
                        l2196 0437                          l2188 0DD9                          l2452 0FC4  
                        l1830 0D3E                          l1822 0E65                          l1814 0E54  
                        l1806 0E3B                          l1910 0F13                          l1902 0EF4  
                        l2542 0325                          l2390 0726                          l2374 06E5  
                        l2366 06CE                          l2358 06BD                          l2294 05D2  
                        l2286 05B8                          l2278 0595                          l2198 043F  
                        l2462 0FE2                          l2454 0FCC                          l2446 0FB4  
                        l1840 0E06                          l1832 0D45                          l1824 0D35  
                        l1816 0E57                          l1808 0E3E                          l1912 0F14  
                        l1904 0EF8                          l1920 00B4                          l2384 070F  
                        l2392 0728                          l2376 06ED                          l2368 06D8  
                        l2296 05D9                          l2464 0FEC                          l2456 0FD1  
                        l2448 0FB9                          l1850 0E22                          l1842 0E0B  
                        l1834 0D49                          l1826 0D37                          l1818 0E5D  
                        l1914 0F1B                          l1906 0EFC                          l1930 00CC  
                        l1922 00BA                          l2538 07CB                          l2386 0719  
                        l2378 06FC                          l2298 05DB                          l2466 0FF1  
                        l2458 0FD8                          l1860 0D4C                          l1772 0CD4  
                        l1780 0CAB                          l1764 0CB5                          l1852 0E28  
                        l1844 0E11                          l1828 0D38                          l1908 0F0D  
                        l1916 0F21                          l1932 00D6                          l1924 00BD  
                        l2396 0730                          l2388 071F                          l2468 0FF7  
                        l1862 0D50                          l1782 0CC9                          l1774 0CDD  
                        l1766 0CED                          l1854 0E2D                          l1846 0E17  
                        l1838 0E06                          l1790 0DB3                          l1934 00DC  
                        l1926 00C4                          l1870 0CFC                          l2398 073A  
                        l1950 015F                          l1942 013B                          l1864 0D54  
                        l1768 0CF6                          l1856 0E32                          l1848 0E1C  
                        l1792 0DBA                          l1784 0D9D                          l1936 00E3  
                        l1928 00C8                          l1880 0DE0                          l1872 0D02  
                        l1960 0D8B                          l1952 0193                          l1944 0141  
                        l1778 0CBF                          l1970 0E69                          l1786 0DA1  
                        l1794 0D64                          l1938 00E9                          l1890 0E00  
                        l1882 0DE2                          l1874 0D08                          l1962 0D91  
                        l1954 0D7E                          l1946 014A                          l1788 0DAC  
                        l1796 0D67                          l1980 0F42                          l1972 0F27  
                        l1884 0DE6                          l1876 0D0A                          l1868 0CFB  
                        l1964 0D94                          l1956 0D82                          l1948 0159  
                        l1798 0D6D                          l1990 0F65                          l1974 0F2C  
                        l1982 0F49                          l1894 0EE2                          l1886 0DF3  
                        l1966 0D99                          l1958 0D88                          l1968 0F6C  
                        l1984 0F4F                          l1976 0F39                          l1992 0EA0  
                        l1896 0EE4                          l1888 0DFA                          l1986 0F5C  
                        l1978 0F3C                          l1994 0EA3                          l1898 0EEA  
                        l1988 0F5F                          l1996 0EBF                          l1998 0EC5  
                        STR_1 00A2                          STR_2 00A8                          STR_3 002E  
                        STR_4 004E                          STR_5 0080                          STR_6 008A  
                        STR_7 0076                          STR_8 003F                          STR_9 009B  
                        u1100 0CC7                          u1101 0CC6                          u1110 0CB3  
                        u1111 0CB2                          u1120 0CD2                          u1200 0D02  
                        u2000 0726                          u1121 0CD1                          u1201 0D01  
                        u2001 0725                          u1130 0DA1                          u1210 0D08  
                        u2010 072C                          u1131 0DA0                          u1211 0D07  
                        u2011 072B                          u1140 0DAC                          u1300 0F0D  
                        u1220 0DE6                          u2020 0730                          u2100 0FDE  
                        u1141 0DAB                          u1301 0F0C                          u1221 0DE5  
                        u2021 072F                          u2101 0FDD                          u1070 0CBD  
                        u1150 0DB3                          u2030 0745                          u2110 0FE2  
                        u1071 0CBC                          u1151 0DB2                          u2031 0744  
                        u2111 0FE1                          u1080 0CF5                          u1160 0DBA  
                        u1320 0F21                          u2040 076D                          u1400 0D99  
                        u1081 0CF4                          u1161 0DB9                          u1321 0F20  
                        u1305 0F09                          u2041 076C                          u1401 0D98  
                        u1090 0CDC                          u1410 0F2C                          u1330 00BA  
                        u1250 0E00                          u2050 0771                          u1091 0CDB  
                        u1411 0F2B                          u1315 0F15                          u1331 00B9  
                        u1251 0DFF                          u1235 0DED                          u2051 0770  
                        u1180 0D3E                          u1260 0EEA                          u1500 0288  
                        u2060 0788                          u1181 0D3D                          u1261 0EE9  
                        u1245 0DF4                          u1501 0287                          u2061 0787  
                        u1430 0F4F                          u1350 00CC                          u1510 029A  
                        u2070 078E                          u1431 0F4E                          u1175 0E41  
                        u1351 00CB                          u1511 0299                          u2071 078D  
                        u2207 051F                          u2127 0FD5                          u1280 0EFC  
                        u1360 00D6                          u1600 0389                          u1520 02B8  
                        u2080 0792                          u1425 0F32                          u1281 0EFB  
                        u1361 00D5                          u1345 00BE                          u1601 0388  
                        u1521 02B7                          u2081 0791                          u2217 0563  
                        u2137 0FE8                          u1450 0EAD                          u1610 039E  
                        u1530 02C2                          u2090 07A7                          u1195 0D57  
                        u1275 0EEE                          u1611 039D                          u1531 02C1  
                        u2091 07A6                          u2307 0736                          u2227 0584  
                        u2147 0145                          u1460 0ECF                          u1380 00E9  
                        u1620 03A5                          u1540 02E3                          u1700 050F  
                        u1445 0F55                          u1381 00E8                          u1365 00D2  
                        u1621 03A4                          u1541 02E2                          u2317 0777  
                        u2237 05C8                          u1701 050E                          u2157 0154  
                        u1470 0EE1                          u1630 03BA                          u1550 030B  
                        u1710 0515                          u1390 0D91                          u1471 0EE0  
                        u1295 0EFD                          u1375 00DD                          u1631 03B9  
                        u1551 030A                          u1535 02BE                          u2327 0798  
                        u2247 05E9                          u1711 0514                          u1391 0D90  
                        u2167 0161                          u1640 03FB                          u1560 0359  
                        u1480 0212                          u1800 05BE                          u1720 0519  
                        u2337 0E51                          u1641 03FA                          u1561 0358  
                        u1481 0211                          u2257 0651                          u1801 05BD  
                        u1721 0518                          u2177 0195                          u1650 040B  
                        u1570 0364                          u1490 0248                          u1810 05C2  
                        u1730 0530                          u2347 0E62                          u1651 040A  
                        u1571 0363                          u1491 0247                          u2267 0672  
                        u1811 05C1                          u1731 052F                          u2187 04C6  
                        u1660 0D25                          u1580 036F                          u1900 066C  
                        u1820 05D9                          u1740 0559                          u2357 0D74  
                        u1661 0D24                          u1581 036E                          u1565 0355  
                        u2277 06B3                          u1901 066B                          u1821 05D8  
                        u1741 0558                          u2197 04FE                          u1670 0D32  
                        u1590 0383                          u1910 0681                          u1830 05DF  
                        u1750 055D                          u1671 0D31                          u1591 0382  
                        u2287 06D4                          u1911 0680                          u1831 05DE  
                        u1751 055C                          u1920 06A9                          u1840 05E3  
                        u1760 0574                          u1680 04F4                          u1585 036B  
                        u2297 0715                          u1921 06A8                          u1841 05E2  
                        u1761 0573                          u1681 04F3                          u1930 06AD  
                        u1850 05F8                          u1770 057A                          u1690 04F8  
                        u1931 06AC                          u1851 05F7                          u1771 0579  
                        u1691 04F7                          u1940 06C4                          u1860 0647  
                        u1780 057E                          u1941 06C3                          u1861 0646  
                        u1781 057D                          u1950 06CA                          u1870 064B  
                        u1790 0595                          u1951 06C9                          u1871 064A  
                        u1791 0594                          u1960 06CE                          u1880 0662  
                        u1961 06CD                          u1881 0661                          u1970 06E3  
                        u1890 0668                          u1971 06E2                          u1891 0667  
                        u1980 070B                          u1981 070A                          u1990 070F  
                        u1991 070E             ?_Lcd_Write_String 0075                          _main 0FB4  
            __end_of_I2C_Nack 0CD4              __end_of_I2C_Read 0CDF                          btemp 007E  
            __end_of_I2C_Stop 0CC9                          start 0000            ??_Lcd_Write_String 0077  
            ?_I2C_Init_Master 0070               __end_of_Lcd_Cmd 0D7D             ??_DS3231_Get_Date 007C  
           ___bmul@multiplier 0073             ??_DS3231_Get_Time 007A                         ?_main 0070  
                       STR_10 006B                         STR_11 001D                         STR_12 005D  
                       STR_13 00AC                         STR_14 0094                         _ANSEL 0188  
             __end_of___lwdiv 0F26               __end_of___lwmod 00EE                         _PORTA 0005  
                       _PORTB 0006                         _PORTD 0008                         _TRISB 0086  
                       _TRISD 0088               __end_of_dpowers 001D                         _horas 0022  
             __end_of_isdigit 0D0C                         _setup 0DBE             __end_of_I2C_Start 0CBF  
           __end_of_I2C_Write 0CFA                         pclath 000A                         status 0003  
                       wtemp0 007E               __end_of_sprintf 0410              __end_of_Lcd_Init 0199  
            __end_of_Lcd_Port 0DBE               __initialization 07E6                  __end_of_main 1000  
              _DS3231_Bcd_Bin 0D4B                _DS3231_Bin_Bcd 0D34                        ??_main 0057  
         DS3231_Get_Date@year 0078                        ?_setup 0070                        _ANSELH 0189  
                   ??_Lcd_Cmd 0071                        _SSPADD 0093                        _SSPCON 0014  
                      _SSPBUF 0013        __end_of_DS3231_Bcd_Bin 0D63                        ___bmul 0D1F  
                      ___wmul 0DE0        __end_of_DS3231_Bin_Bcd 0D4B                     ??___lwdiv 0074  
                   ??___lwmod 007C                        _buffer 0029                     ?_I2C_Nack 0070  
                   ??_isdigit 0070                     ?_I2C_Read 0070                     ?_I2C_Stop 0070  
                ??_CLK_CONFIG 0054                     ??_sprintf 0044               Lcd_Set_Cursor@a 0076  
             Lcd_Set_Cursor@b 0074               Lcd_Set_Cursor@y 0078               Lcd_Set_Cursor@z 0077  
          DS3231_Bcd_Bin@temp 0073       __end_of__initialization 07FC             __end_of_Lcd_Clear 0CEC  
         ___bmul@multiplicand 0070                __pcstackCOMMON 0070               ?_DS3231_Bcd_Bin 0070  
                __pidataBANK1 00EE            __end_of_CLK_CONFIG 07E6               ?_DS3231_Bin_Bcd 0070  
               __end_of_setup 0DE0                _Lcd_Set_Cursor 0F26                    ??_I2C_Nack 0070  
                  ??_I2C_Read 0070                    ??_I2C_Stop 0070                     ?_Lcd_Init 0070  
                   ?_Lcd_Port 0070                  sprintf@width 0050                       ??_setup 0076  
             _DS3231_Get_Date 0F6C               _DS3231_Get_Time 0E69                    __pbssBANK0 0020  
               ??_DS3231_Read 0071                    __pmaintext 0FB4                       ?___bmul 0070  
                     ?___wmul 0070        __end_of_Lcd_Set_Cursor 0F6C                 ??_I2C_Restart 0070  
                  ??_Lcd_Init 0074                    ??_Lcd_Port 0070                       _SSPCON2 0091  
                     _SSPSTAT 0094                    __stringtab 0003                _Lcd_Write_Char 0E34  
                     _Lcd_Cmd 0D63                     _I2C_Start 0CB5                     _I2C_Write 0CEC  
         __end_of_DS3231_Read 0E34                       ___lwdiv 0EE2                       ___lwmod 00B4  
             ?_Lcd_Set_Cursor 0074            DS3231_Bin_Bcd@temp 0073                       __ptext1 0DBE  
                     __ptext2 013B                       __ptext3 0D7D                       __ptext4 0CDF  
                     __ptext5 0410                       __ptext6 0206                       __ptext7 0CFA  
                     __ptext8 0DE0                       __ptext9 00B4                       _dpowers 0013  
     __end_of_DS3231_Get_Date 0FB4                       _isdigit 0CFA       __end_of_DS3231_Get_Time 0EA0  
                     _minutos 0021                       _sprintf 0206                       clrloop0 0CA4  
         __end_of_I2C_Restart 0CB5        __end_of_Lcd_Write_Char 0E69          end_of_initialization 07FC  
                  ?_I2C_Start 0070                    ?_I2C_Write 0070                     Lcd_Port@a 0070  
                   _PORTAbits 0005                     _PORTBbits 0006                     _PORTDbits 0008  
                   _TRISAbits 0085                     _TRISCbits 0087               ?_Lcd_Write_Char 0070  
           Lcd_Write_String@a 0075             Lcd_Write_String@i 007A                   _DS3231_Read 0E05  
            ??_DS3231_Bcd_Bin 0070              ??_DS3231_Bin_Bcd 0070  __end_of_DS3231_Set_Date_Time 0206  
                   _Lcd_Clear 0CDF                __end_of___bmul 0D34                __end_of___wmul 0E05  
            _Lcd_Write_String 0EA0                   _I2C_Restart 0CAB              ?_DS3231_Get_Date 0074  
         start_initialization 07E6              ?_DS3231_Get_Time 0074             ??_I2C_Init_Master 0070  
       I2C_Init_Master@sp_i2c 0070            DS3231_Get_Date@day 0074            DS3231_Get_Date@dow 007A  
          DS3231_Get_Date@mth 0076                   ??_I2C_Start 0070                   ??_I2C_Write 0070  
                  ?_Lcd_Clear 0070                      ??___bmul 0071                      ??___wmul 0074  
                  init_fetch0 0D0C                   __pdataBANK1 00A0               Lcd_Write_Char@a 0074  
             Lcd_Write_Char@y 0073            DS3231_Get_Time@min 0076            DS3231_Get_Time@sec 0078  
                   ___latbits 0002                 __pcstackBANK0 003D                      ?_Lcd_Cmd 0070  
                 sprintf@flag 0047                   sprintf@prec 004A              ___lwdiv@dividend 0072  
            ??_Lcd_Set_Cursor 0075          DS3231_Bin_Bcd@retval 0072                      ?___lwdiv 0070  
                    ?___lwmod 0078                     __pstrings 0003                      _I2C_Nack 0CC9  
                    ?_isdigit 0070                      _I2C_Read 0CD4                      _I2C_Stop 0CBF  
        _DS3231_Set_Date_Time 0199              ___lwdiv@quotient 0075                      ?_sprintf 003D  
              ___wmul@product 0074       DS3231_Bcd_Bin@bcd_value 0072                     clear_ram0 0CA3  
             DS3231_Read@data 0072                      Lcd_Cmd@a 0073                      _PIR1bits 000C  
                   _valor_ADC 0028                   ??_Lcd_Clear 0074                   __stringbase 0012  
           ___wmul@multiplier 0070              ??_Lcd_Write_Char 0071         ?_DS3231_Set_Date_Time 0074  
                    _Lcd_Init 013B                      _Lcd_Port 0D9C      __end_of_Lcd_Write_String 0EE2  
                ?_DS3231_Read 0070       DS3231_Set_Date_Time@mth 0074               _I2C_Init_Master 0D7D  
               I2C_Write@data 0070             DS3231_Get_Time@hr 0074            __end_of__stringtab 0013  
                 _isdigit$962 0070                  ?_I2C_Restart 0070                    sprintf@len 004E  
                  sprintf@val 0048                    _CLK_CONFIG 0410               ___lwdiv@divisor 0070  
             ___lwdiv@counter 0077                      __ptext10 0EE2                      __ptext11 0D1F  
                    __ptext20 0F6C                      __ptext12 0EA0                      __ptext21 0E05  
                    __ptext13 0E34                      __ptext22 0CEC                      __ptext14 0F26  
                    __ptext23 0CBF                      __ptext15 0D63                      __ptext24 0CB5  
                    __ptext16 0D9C                      __ptext25 0CAB                      __ptext17 0199  
                    __ptext26 0CD4                      __ptext18 0D34                      __ptext27 0CC9  
                    __ptext19 0E69                      __ptext28 0D4B    DS3231_Bin_Bcd@binary_value 0071  
              DS3231_Read@reg 0071                      _selector 0027                      _segundos 0020  
      ??_DS3231_Set_Date_Time 007A        DS3231_Set_Date_Time@dw 0076        DS3231_Set_Date_Time@dy 007B  
      DS3231_Set_Date_Time@hr 0077        DS3231_Set_Date_Time@mn 0078        DS3231_Set_Date_Time@sc 0079  
      DS3231_Set_Date_Time@yr 0075                      init_ram0 0D10                      isdigit@c 0071  
          Lcd_Write_Char@temp 0072                     sprintf@ap 004B                     sprintf@cp 004C  
                   sprintf@sp 0053              ___lwmod@dividend 007A       __end_of_I2C_Init_Master 0D9C  
                   stringcode 000D                    _OSCCONbits 008F            Lcd_Set_Cursor@temp 0079  
                    sprintf@c 0052                      sprintf@f 003D               ___lwmod@divisor 0078  
             ___lwmod@counter 007D                      stringdir 000D                      stringtab 0003  
                 ?_CLK_CONFIG 0070                   _SSPCON2bits 0091  
