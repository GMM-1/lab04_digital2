

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 09 22:43:34 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     008F                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     0105                     	;# 
   129     0107                     	;# 
   130     0108                     	;# 
   131     0109                     	;# 
   132     010C                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     0185                     	;# 
   138     0187                     	;# 
   139     0188                     	;# 
   140     0189                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008F                     	;# 
   188     0090                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009E                     	;# 
   205     009F                     	;# 
   206     0105                     	;# 
   207     0107                     	;# 
   208     0108                     	;# 
   209     0109                     	;# 
   210     010C                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     0185                     	;# 
   216     0187                     	;# 
   217     0188                     	;# 
   218     0189                     	;# 
   219     018C                     	;# 
   220     018D                     	;# 
   221     0000                     	;# 
   222     0001                     	;# 
   223     0002                     	;# 
   224     0003                     	;# 
   225     0004                     	;# 
   226     0005                     	;# 
   227     0006                     	;# 
   228     0007                     	;# 
   229     0008                     	;# 
   230     0009                     	;# 
   231     000A                     	;# 
   232     000B                     	;# 
   233     000C                     	;# 
   234     000D                     	;# 
   235     000E                     	;# 
   236     000E                     	;# 
   237     000F                     	;# 
   238     0010                     	;# 
   239     0011                     	;# 
   240     0012                     	;# 
   241     0013                     	;# 
   242     0014                     	;# 
   243     0015                     	;# 
   244     0015                     	;# 
   245     0016                     	;# 
   246     0017                     	;# 
   247     0018                     	;# 
   248     0019                     	;# 
   249     001A                     	;# 
   250     001B                     	;# 
   251     001B                     	;# 
   252     001C                     	;# 
   253     001D                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     0081                     	;# 
   257     0085                     	;# 
   258     0086                     	;# 
   259     0087                     	;# 
   260     0088                     	;# 
   261     0089                     	;# 
   262     008C                     	;# 
   263     008D                     	;# 
   264     008E                     	;# 
   265     008F                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     0105                     	;# 
   285     0107                     	;# 
   286     0108                     	;# 
   287     0109                     	;# 
   288     010C                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     0185                     	;# 
   294     0187                     	;# 
   295     0188                     	;# 
   296     0189                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0000                     	;# 
   300     0001                     	;# 
   301     0002                     	;# 
   302     0003                     	;# 
   303     0004                     	;# 
   304     0005                     	;# 
   305     0006                     	;# 
   306     0007                     	;# 
   307     0008                     	;# 
   308     0009                     	;# 
   309     000A                     	;# 
   310     000B                     	;# 
   311     000C                     	;# 
   312     000D                     	;# 
   313     000E                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0014                     	;# 
   321     0015                     	;# 
   322     0015                     	;# 
   323     0016                     	;# 
   324     0017                     	;# 
   325     0018                     	;# 
   326     0019                     	;# 
   327     001A                     	;# 
   328     001B                     	;# 
   329     001B                     	;# 
   330     001C                     	;# 
   331     001D                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     0081                     	;# 
   335     0085                     	;# 
   336     0086                     	;# 
   337     0087                     	;# 
   338     0088                     	;# 
   339     0089                     	;# 
   340     008C                     	;# 
   341     008D                     	;# 
   342     008E                     	;# 
   343     008F                     	;# 
   344     0090                     	;# 
   345     0091                     	;# 
   346     0092                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0095                     	;# 
   352     0096                     	;# 
   353     0097                     	;# 
   354     0098                     	;# 
   355     0099                     	;# 
   356     009A                     	;# 
   357     009B                     	;# 
   358     009C                     	;# 
   359     009D                     	;# 
   360     009E                     	;# 
   361     009F                     	;# 
   362     0105                     	;# 
   363     0107                     	;# 
   364     0108                     	;# 
   365     0109                     	;# 
   366     010C                     	;# 
   367     010C                     	;# 
   368     010D                     	;# 
   369     010E                     	;# 
   370     010F                     	;# 
   371     0185                     	;# 
   372     0187                     	;# 
   373     0188                     	;# 
   374     0189                     	;# 
   375     018C                     	;# 
   376     018D                     	;# 
   377                           
   378                           	psect	strings
   379     0003                     __pstrings:
   380     0003                     stringtab:
   381     0003                     __stringtab:
   382                           
   383                           ;	String table - string pointers are 1 byte each
   384     0003  1BFF               	btfsc	btemp+1,7
   385     0004  280D               	ljmp	stringcode
   386     0005  1383               	bcf	3,7
   387     0006  187F               	btfsc	btemp+1,0
   388     0007  1783               	bsf	3,7
   389     0008  0800               	movf	0,w
   390     0009  0A84               	incf	4,f
   391     000A  1903               	skipnz
   392     000B  0AFF               	incf	btemp+1,f
   393     000C  0008               	return
   394     000D                     stringcode:
   395     000D                     stringdir:
   396     000D  3000               	movlw	high stringdir
   397     000E  008A               	movwf	10
   398     000F  0804               	movf	4,w
   399     0010  0A84               	incf	4,f
   400     0011  0782               	addwf	2,f
   401     0012                     __stringbase:
   402     0012  3400               	retlw	0
   403     0013                     __end_of__stringtab:
   404     0013                     _dpowers:
   405     0013  3401               	retlw	1
   406     0014  3400               	retlw	0
   407     0015  340A               	retlw	10
   408     0016  3400               	retlw	0
   409     0017  3464               	retlw	100
   410     0018  3400               	retlw	0
   411     0019  34E8               	retlw	232
   412     001A  3403               	retlw	3
   413     001B  3410               	retlw	16
   414     001C  3427               	retlw	39
   415     001D                     __end_of_dpowers:
   416     0008                     _PORTDbits	set	8
   417     0006                     _PORTBbits	set	6
   418     0013                     _SSPBUF	set	19
   419     000C                     _PIR1bits	set	12
   420     0014                     _SSPCON	set	20
   421     0008                     _PORTD	set	8
   422     0006                     _PORTB	set	6
   423     0091                     _SSPCON2bits	set	145
   424     0093                     _SSPADD	set	147
   425     0091                     _SSPCON2	set	145
   426     0094                     _SSPSTAT	set	148
   427     0087                     _TRISCbits	set	135
   428     008F                     _OSCCONbits	set	143
   429     0088                     _TRISD	set	136
   430     0086                     _TRISB	set	134
   431     0189                     _ANSELH	set	393
   432     0188                     _ANSEL	set	392
   433     001D                     STR_1:
   434     001D  3441               	retlw	65	;'A'
   435     001E  3444               	retlw	68	;'D'
   436     001F  3443               	retlw	67	;'C'
   437     0020  343A               	retlw	58	;':'
   438     0021  3400               	retlw	0
   439     0022                     STR_2:
   440     0022  3425               	retlw	37	;'%'
   441     0023  3464               	retlw	100	;'d'
   442     0024  3420               	retlw	32	;' '
   443     0025  3400               	retlw	0
   444                           
   445                           	psect	cinit
   446     07F3                     start_initialization:	
   447                           ; #config settings
   448                           
   449     07F3                     __initialization:
   450                           
   451                           ; Clear objects allocated to BANK0
   452     07F3  1383               	bcf	3,7	;select IRP bank0
   453     07F4  3020               	movlw	low __pbssBANK0
   454     07F5  0084               	movwf	4
   455     07F6  3035               	movlw	low (__pbssBANK0+21)
   456     07F7  120A  118A  2477  120A  118A  	fcall	clear_ram0
   457     07FC                     end_of_initialization:	
   458                           ;End of C runtime variable initialization code
   459                           
   460     07FC                     __end_of__initialization:
   461     07FC  0183               	clrf	3
   462     07FD  120A  118A  2EB9   	ljmp	_main	;jump to C main() function
   463                           
   464                           	psect	bssBANK0
   465     0020                     __pbssBANK0:
   466     0020                     _valor_ADC:
   467     0020                     	ds	1
   468     0021                     _buffer:
   469     0021                     	ds	20
   470                           
   471                           	psect	clrtext
   472     0477                     clear_ram0:	
   473                           ;	Called with FSR containing the base address, and
   474                           ;	W with the last address+1
   475                           
   476     0477  0064               	clrwdt	;clear the watchdog before getting into this loop
   477     0478                     clrloop0:
   478     0478  0180               	clrf	0	;clear RAM location pointed to by FSR
   479     0479  0A84               	incf	4,f	;increment pointer
   480     047A  0604               	xorwf	4,w	;XOR with final address
   481     047B  1903               	btfsc	3,2	;have we reached the end yet?
   482     047C  3400               	retlw	0	;all done for this memory range, return
   483     047D  0604               	xorwf	4,w	;XOR again to restore value
   484     047E  2C78               	goto	clrloop0	;do the next byte
   485                           
   486                           	psect	cstackCOMMON
   487     0070                     __pcstackCOMMON:
   488     0070                     ?_setup:
   489     0070                     ?_Lcd_Init:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_I2C_Start:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ??_I2C_Start:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ??_I2C_Write:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_I2C_Read:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ??_I2C_Read:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_I2C_Stop:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ??_I2C_Stop:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_I2C_Init_Master:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ??_I2C_Init_Master:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_main:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_Lcd_Port:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ??_Lcd_Port:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_Lcd_Cmd:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_Lcd_Write_Char:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_I2C_Write:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?___lwdiv:	
   538                           ; 2 bytes @ 0x0
   539                           
   540     0070                     I2C_Init_Master@sp_i2c:	
   541                           ; 2 bytes @ 0x0
   542                           
   543     0070                     I2C_Write@data:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     Lcd_Port@a:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ___lwdiv@divisor:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 2 bytes @ 0x0
   554     0070                     	ds	1
   555     0071                     ??_setup:
   556     0071                     ??_Lcd_Cmd:	
   557                           ; 1 bytes @ 0x1
   558                           
   559     0071                     ??_Lcd_Write_Char:	
   560                           ; 1 bytes @ 0x1
   561                           
   562                           
   563                           ; 1 bytes @ 0x1
   564     0071                     	ds	1
   565     0072                     Lcd_Write_Char@temp:
   566     0072                     ___lwdiv@dividend:	
   567                           ; 1 bytes @ 0x2
   568                           
   569                           
   570                           ; 2 bytes @ 0x2
   571     0072                     	ds	1
   572     0073                     Lcd_Cmd@a:
   573     0073                     Lcd_Write_Char@y:	
   574                           ; 1 bytes @ 0x3
   575                           
   576                           
   577                           ; 1 bytes @ 0x3
   578     0073                     	ds	1
   579     0074                     ??_Lcd_Init:
   580     0074                     ?_Lcd_Set_Cursor:	
   581                           ; 1 bytes @ 0x4
   582                           
   583     0074                     ??___lwdiv:	
   584                           ; 1 bytes @ 0x4
   585                           
   586     0074                     Lcd_Set_Cursor@b:	
   587                           ; 1 bytes @ 0x4
   588                           
   589     0074                     Lcd_Write_Char@a:	
   590                           ; 1 bytes @ 0x4
   591                           
   592                           
   593                           ; 1 bytes @ 0x4
   594     0074                     	ds	1
   595     0075                     ??_Lcd_Set_Cursor:
   596     0075                     ?_Lcd_Write_String:	
   597                           ; 1 bytes @ 0x5
   598                           
   599     0075                     Lcd_Write_String@a:	
   600                           ; 1 bytes @ 0x5
   601                           
   602     0075                     ___lwdiv@quotient:	
   603                           ; 2 bytes @ 0x5
   604                           
   605                           
   606                           ; 2 bytes @ 0x5
   607     0075                     	ds	1
   608     0076                     Lcd_Set_Cursor@a:
   609                           
   610                           ; 1 bytes @ 0x6
   611     0076                     	ds	1
   612     0077                     ??_Lcd_Write_String:
   613     0077                     Lcd_Set_Cursor@z:	
   614                           ; 1 bytes @ 0x7
   615                           
   616     0077                     ___lwdiv@counter:	
   617                           ; 1 bytes @ 0x7
   618                           
   619                           
   620                           ; 1 bytes @ 0x7
   621     0077                     	ds	1
   622     0078                     ?___lwmod:
   623     0078                     Lcd_Set_Cursor@y:	
   624                           ; 2 bytes @ 0x8
   625                           
   626     0078                     ___lwmod@divisor:	
   627                           ; 1 bytes @ 0x8
   628                           
   629                           
   630                           ; 2 bytes @ 0x8
   631     0078                     	ds	1
   632     0079                     Lcd_Set_Cursor@temp:
   633                           
   634                           ; 1 bytes @ 0x9
   635     0079                     	ds	1
   636     007A                     Lcd_Write_String@i:
   637     007A                     ___lwmod@dividend:	
   638                           ; 2 bytes @ 0xA
   639                           
   640                           
   641                           ; 2 bytes @ 0xA
   642     007A                     	ds	2
   643     007C                     ??___lwmod:
   644                           
   645                           ; 1 bytes @ 0xC
   646     007C                     	ds	1
   647     007D                     ___lwmod@counter:
   648                           
   649                           ; 1 bytes @ 0xD
   650     007D                     	ds	1
   651                           
   652                           	psect	cstackBANK0
   653     0035                     __pcstackBANK0:
   654     0035                     ?_sprintf:
   655     0035                     sprintf@f:	
   656                           ; 2 bytes @ 0x0
   657                           
   658                           
   659                           ; 1 bytes @ 0x0
   660     0035                     	ds	3
   661     0038                     ??_sprintf:
   662                           
   663                           ; 1 bytes @ 0x3
   664     0038                     	ds	3
   665     003B                     sprintf@ap:
   666                           
   667                           ; 1 bytes @ 0x6
   668     003B                     	ds	1
   669     003C                     sprintf@flag:
   670                           
   671                           ; 1 bytes @ 0x7
   672     003C                     	ds	1
   673     003D                     sprintf@prec:
   674                           
   675                           ; 1 bytes @ 0x8
   676     003D                     	ds	1
   677     003E                     sprintf@val:
   678                           
   679                           ; 2 bytes @ 0x9
   680     003E                     	ds	2
   681     0040                     sprintf@sp:
   682                           
   683                           ; 1 bytes @ 0xB
   684     0040                     	ds	1
   685     0041                     sprintf@c:
   686                           
   687                           ; 1 bytes @ 0xC
   688     0041                     	ds	1
   689     0042                     ??_main:
   690                           
   691                           ; 1 bytes @ 0xD
   692     0042                     	ds	2
   693                           
   694                           	psect	maintext
   695     06B9                     __pmaintext:	
   696 ;;
   697 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   698 ;;
   699 ;; *************** function _main *****************
   700 ;; Defined at:
   701 ;;		line 54 in file "maestro.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : B00/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0
   717 ;;      Temps:          0       2       0       0       0
   718 ;;      Totals:         0       2       0       0       0
   719 ;;Total ram usage:        2 bytes
   720 ;; Hardware stack levels required when called: 3
   721 ;; This function calls:
   722 ;;		_I2C_Read
   723 ;;		_I2C_Start
   724 ;;		_I2C_Stop
   725 ;;		_I2C_Write
   726 ;;		_Lcd_Init
   727 ;;		_Lcd_Set_Cursor
   728 ;;		_Lcd_Write_String
   729 ;;		_setup
   730 ;;		_sprintf
   731 ;; This function is called by:
   732 ;;		Startup code after reset
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736     06B9                     _main:	
   737                           ;psect for function _main
   738                           
   739     06B9                     l1298:	
   740                           ;incstack = 0
   741                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   742                           
   743                           
   744                           ;maestro.c: 55:     setup();
   745     06B9  120A  118A  24AC  120A  118A  	fcall	_setup
   746                           
   747                           ;maestro.c: 56:     Lcd_Init();
   748     06BE  120A  118A  265B  120A  118A  	fcall	_Lcd_Init
   749                           
   750                           ;maestro.c: 59:     Lcd_Set_Cursor(1,1);
   751     06C3  01F4               	clrf	Lcd_Set_Cursor@b
   752     06C4  0AF4               	incf	Lcd_Set_Cursor@b,f
   753     06C5  3001               	movlw	1
   754     06C6  120A  118A  2615  120A  118A  	fcall	_Lcd_Set_Cursor
   755     06CB                     l1300:
   756                           
   757                           ;maestro.c: 60:     Lcd_Write_String("ADC:");
   758     06CB  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   759     06CC  00F5               	movwf	Lcd_Write_String@a
   760     06CD  3080               	movlw	128
   761     06CE  00F6               	movwf	Lcd_Write_String@a+1
   762     06CF  120A  118A  258F  120A  118A  	fcall	_Lcd_Write_String
   763     06D4                     l1302:
   764                           
   765                           ;maestro.c: 63:     {;maestro.c: 65:         I2C_Start();
   766     06D4  120A  118A  247F  120A  118A  	fcall	_I2C_Start
   767     06D9                     l1304:
   768                           
   769                           ;maestro.c: 66:         I2C_Write(0x51);
   770     06D9  3051               	movlw	81
   771     06DA  120A  118A  249E  120A  118A  	fcall	_I2C_Write
   772     06DF                     l1306:
   773                           
   774                           ;maestro.c: 67:         valor_ADC = I2C_Read();
   775     06DF  120A  118A  2493  120A  118A  	fcall	_I2C_Read
   776     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   777     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   778     06E6  00A0               	movwf	_valor_ADC
   779     06E7                     l1308:
   780                           
   781                           ;maestro.c: 68:         I2C_Stop();
   782     06E7  120A  118A  2489  120A  118A  	fcall	_I2C_Stop
   783     06EC                     l1310:
   784                           
   785                           ;maestro.c: 69:         _delay((unsigned long)((10)*(8000000/4000000.0)));
   786     06EC  3005               	movlw	5
   787     06ED  1283               	bcf	3,5	;RP0=0, select bank0
   788     06EE  1303               	bcf	3,6	;RP1=0, select bank0
   789     06EF  00C2               	movwf	??_main
   790     06F0                     u807:
   791     06F0  0BC2               	decfsz	??_main,f
   792     06F1  2EF0               	goto	u807
   793     06F2  2EF3               	nop2
   794     06F3                     l1312:
   795                           
   796                           ;maestro.c: 72:         Lcd_Set_Cursor(1,5);
   797     06F3  3005               	movlw	5
   798     06F4  00F4               	movwf	Lcd_Set_Cursor@b
   799     06F5  3001               	movlw	1
   800     06F6  120A  118A  2615  120A  118A  	fcall	_Lcd_Set_Cursor
   801     06FB                     l1314:
   802                           
   803                           ;maestro.c: 73:         sprintf(buffer,"%d ", valor_ADC);
   804     06FB  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   805     06FC  1283               	bcf	3,5	;RP0=0, select bank0
   806     06FD  1303               	bcf	3,6	;RP1=0, select bank0
   807     06FE  00B5               	movwf	sprintf@f
   808     06FF  0820               	movf	_valor_ADC,w
   809     0700  00C2               	movwf	??_main
   810     0701  01C3               	clrf	??_main+1
   811     0702  0842               	movf	??_main,w
   812     0703  00B6               	movwf	?_sprintf+1
   813     0704  0843               	movf	??_main+1,w
   814     0705  00B7               	movwf	?_sprintf+2
   815     0706  3021               	movlw	(low (_buffer| 0))& (0+255)
   816     0707  120A  118A  2719  120A  118A  	fcall	_sprintf
   817     070C                     l1316:
   818                           
   819                           ;maestro.c: 74:         Lcd_Write_String(buffer);
   820     070C  3021               	movlw	(low (_buffer| 0))& (0+255)
   821     070D  00F5               	movwf	Lcd_Write_String@a
   822     070E  3000               	movlw	0
   823     070F  00F6               	movwf	Lcd_Write_String@a+1
   824     0710  120A  118A  258F  120A  118A  	fcall	_Lcd_Write_String
   825     0715  2ED4               	goto	l1302
   826     0716  120A  118A  2800   	ljmp	start
   827     0719                     __end_of_main:
   828                           
   829                           	psect	text1
   830     0719                     __ptext1:	
   831 ;; *************** function _sprintf *****************
   832 ;; Defined at:
   833 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  sp              1    wreg     PTR unsigned char 
   836 ;;		 -> buffer(20), 
   837 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   838 ;;		 -> STR_2(4), 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   841 ;;		 -> buffer(20), 
   842 ;;  tmpval          4    0        struct .
   843 ;;  val             2    9[BANK0 ] unsigned int 
   844 ;;  cp              2    0        PTR const unsigned char 
   845 ;;  len             2    0        unsigned int 
   846 ;;  c               1   12[BANK0 ] unsigned char 
   847 ;;  prec            1    8[BANK0 ] char 
   848 ;;  flag            1    7[BANK0 ] unsigned char 
   849 ;;  ap              1    6[BANK0 ] PTR void [1]
   850 ;;		 -> ?_sprintf(2), 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  2    0[BANK0 ] int 
   853 ;; Registers used:
   854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   860 ;;      Params:         0       3       0       0       0
   861 ;;      Locals:         0       7       0       0       0
   862 ;;      Temps:          0       3       0       0       0
   863 ;;      Totals:         0      13       0       0       0
   864 ;;Total ram usage:       13 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 1
   867 ;; This function calls:
   868 ;;		___lwdiv
   869 ;;		___lwmod
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875     0719                     _sprintf:	
   876                           ;psect for function _sprintf
   877                           
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   881                           ;sprintf@sp stored from wreg
   882     0719  1283               	bcf	3,5	;RP0=0, select bank0
   883     071A  1303               	bcf	3,6	;RP1=0, select bank0
   884     071B  00C0               	movwf	sprintf@sp
   885     071C                     l1236:
   886                           
   887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   888     071C  3036               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   889     071D  00BB               	movwf	sprintf@ap
   890                           
   891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   892     071E  2FDE               	goto	l1288
   893     071F                     l1238:
   894                           
   895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   896     071F  3025               	movlw	37
   897     0720  0641               	xorwf	sprintf@c,w
   898     0721  1903               	btfsc	3,2
   899     0722  2F24               	goto	u731
   900     0723  2F25               	goto	u730
   901     0724                     u731:
   902     0724  2F2F               	goto	l1244
   903     0725                     u730:
   904     0725                     l1240:
   905                           
   906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   907     0725  0840               	movf	sprintf@sp,w
   908     0726  0084               	movwf	4
   909     0727  0841               	movf	sprintf@c,w
   910     0728  1383               	bcf	3,7	;select IRP bank0
   911     0729  0080               	movwf	0
   912     072A                     l1242:
   913     072A  3001               	movlw	1
   914     072B  00B8               	movwf	??_sprintf
   915     072C  0838               	movf	??_sprintf,w
   916     072D  07C0               	addwf	sprintf@sp,f
   917                           
   918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
   919     072E  2FDE               	goto	l1288
   920     072F                     l1244:
   921                           
   922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   923     072F  01BC               	clrf	sprintf@flag
   924     0730                     l1248:	
   925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   926                           
   927     0730  3001               	movlw	1
   928     0731  07B5               	addwf	sprintf@f,f
   929     0732  30FF               	movlw	-1
   930     0733  0735               	addwf	sprintf@f,w
   931     0734  0084               	movwf	4
   932     0735  120A  118A  200D  120A  118A  	fcall	stringdir
   933     073A  00C1               	movwf	sprintf@c
   934     073B  00B8               	movwf	??_sprintf
   935     073C  01B9               	clrf	??_sprintf+1
   936                           
   937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   938                           ; Switch size 1, requested type "simple"
   939                           ; Number of cases is 1, Range of values is 0 to 0
   940                           ; switch strategies available:
   941                           ; Name         Instructions Cycles
   942                           ; simple_byte            4     3 (average)
   943                           ; direct_byte           11     8 (fixed)
   944                           ; jumptable            260     6 (fixed)
   945                           ;	Chosen strategy is simple_byte
   946     073D  0839               	movf	??_sprintf+1,w
   947     073E  3A00               	xorlw	0	; case 0
   948     073F  1903               	skipnz
   949     0740  2F42               	goto	l1344
   950     0741  2FDE               	goto	l1288
   951     0742                     l1344:
   952                           
   953                           ; Switch size 1, requested type "simple"
   954                           ; Number of cases is 3, Range of values is 0 to 105
   955                           ; switch strategies available:
   956                           ; Name         Instructions Cycles
   957                           ; simple_byte           10     6 (average)
   958                           ; jumptable            260     6 (fixed)
   959                           ;	Chosen strategy is simple_byte
   960     0742  0838               	movf	??_sprintf,w
   961     0743  3A00               	xorlw	0	; case 0
   962     0744  1903               	skipnz
   963     0745  2FEE               	goto	l1290
   964     0746  3A64               	xorlw	100	; case 100
   965     0747  1903               	skipnz
   966     0748  2F4D               	goto	l1250
   967     0749  3A0D               	xorlw	13	; case 105
   968     074A  1903               	skipnz
   969     074B  2F4D               	goto	l1250
   970     074C  2FDE               	goto	l1288
   971     074D                     l1250:
   972                           
   973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   974     074D  083B               	movf	sprintf@ap,w
   975     074E  0084               	movwf	4
   976     074F  1383               	bcf	3,7	;select IRP bank0
   977     0750  0800               	movf	0,w
   978     0751  00BE               	movwf	sprintf@val
   979     0752  0A84               	incf	4,f
   980     0753  0800               	movf	0,w
   981     0754  00BF               	movwf	sprintf@val+1
   982     0755                     l1252:
   983     0755  3002               	movlw	2
   984     0756  00B8               	movwf	??_sprintf
   985     0757  0838               	movf	??_sprintf,w
   986     0758  07BB               	addwf	sprintf@ap,f
   987     0759                     l1254:
   988                           
   989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   990     0759  1FBF               	btfss	sprintf@val+1,7
   991     075A  2F5C               	goto	u741
   992     075B  2F5D               	goto	u740
   993     075C                     u741:
   994     075C  2F66               	goto	l1260
   995     075D                     u740:
   996     075D                     l1256:
   997                           
   998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   999     075D  3003               	movlw	3
  1000     075E  00B8               	movwf	??_sprintf
  1001     075F  0838               	movf	??_sprintf,w
  1002     0760  04BC               	iorwf	sprintf@flag,f
  1003     0761                     l1258:
  1004                           
  1005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1006     0761  09BE               	comf	sprintf@val,f
  1007     0762  09BF               	comf	sprintf@val+1,f
  1008     0763  0ABE               	incf	sprintf@val,f
  1009     0764  1903               	skipnz
  1010     0765  0ABF               	incf	sprintf@val+1,f
  1011     0766                     l1260:
  1012                           
  1013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1014     0766  01C1               	clrf	sprintf@c
  1015     0767  0AC1               	incf	sprintf@c,f
  1016     0768                     l1266:
  1017                           
  1018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1019     0768  0841               	movf	sprintf@c,w
  1020     0769  00B8               	movwf	??_sprintf
  1021     076A  0738               	addwf	??_sprintf,w
  1022     076B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1023     076C  0084               	movwf	4
  1024     076D  120A  118A  200D  120A  118A  	fcall	stringdir
  1025     0772  00B9               	movwf	??_sprintf+1
  1026     0773  120A  118A  200D  120A  118A  	fcall	stringdir
  1027     0778  00BA               	movwf	??_sprintf+2
  1028     0779  083A               	movf	??_sprintf+2,w
  1029     077A  023F               	subwf	sprintf@val+1,w
  1030     077B  1D03               	skipz
  1031     077C  2F7F               	goto	u755
  1032     077D  0839               	movf	??_sprintf+1,w
  1033     077E  023E               	subwf	sprintf@val,w
  1034     077F                     u755:
  1035     077F  1803               	skipnc
  1036     0780  2F82               	goto	u751
  1037     0781  2F83               	goto	u750
  1038     0782                     u751:
  1039     0782  2F84               	goto	l1270
  1040     0783                     u750:
  1041     0783  2F8E               	goto	l1272
  1042     0784                     l1270:
  1043     0784  3001               	movlw	1
  1044     0785  00B8               	movwf	??_sprintf
  1045     0786  0838               	movf	??_sprintf,w
  1046     0787  07C1               	addwf	sprintf@c,f
  1047     0788  3005               	movlw	5
  1048     0789  0641               	xorwf	sprintf@c,w
  1049     078A  1D03               	btfss	3,2
  1050     078B  2F8D               	goto	u761
  1051     078C  2F8E               	goto	u760
  1052     078D                     u761:
  1053     078D  2F68               	goto	l1266
  1054     078E                     u760:
  1055     078E                     l1272:
  1056                           
  1057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1058     078E  083C               	movf	sprintf@flag,w
  1059     078F  3903               	andlw	3
  1060     0790  1903               	btfsc	3,2
  1061     0791  2F93               	goto	u771
  1062     0792  2F94               	goto	u770
  1063     0793                     u771:
  1064     0793  2F9D               	goto	l1278
  1065     0794                     u770:
  1066     0794                     l1274:
  1067                           
  1068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1069     0794  0840               	movf	sprintf@sp,w
  1070     0795  0084               	movwf	4
  1071     0796  302D               	movlw	45
  1072     0797  1383               	bcf	3,7	;select IRP bank0
  1073     0798  0080               	movwf	0
  1074     0799                     l1276:
  1075     0799  3001               	movlw	1
  1076     079A  00B8               	movwf	??_sprintf
  1077     079B  0838               	movf	??_sprintf,w
  1078     079C  07C0               	addwf	sprintf@sp,f
  1079     079D                     l1278:
  1080                           
  1081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1082     079D  0841               	movf	sprintf@c,w
  1083     079E  00BD               	movwf	sprintf@prec
  1084                           
  1085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1086     079F  2FD5               	goto	l1286
  1087     07A0                     l1280:
  1088                           
  1089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1090     07A0  300A               	movlw	10
  1091     07A1  00F8               	movwf	___lwmod@divisor
  1092     07A2  3000               	movlw	0
  1093     07A3  00F9               	movwf	___lwmod@divisor+1
  1094     07A4  083D               	movf	sprintf@prec,w
  1095     07A5  00B8               	movwf	??_sprintf
  1096     07A6  0738               	addwf	??_sprintf,w
  1097     07A7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1098     07A8  0084               	movwf	4
  1099     07A9  120A  118A  200D  120A  118A  	fcall	stringdir
  1100     07AE  00F0               	movwf	___lwdiv@divisor
  1101     07AF  120A  118A  200D  120A  118A  	fcall	stringdir
  1102     07B4  00F1               	movwf	___lwdiv@divisor+1
  1103     07B5  083F               	movf	sprintf@val+1,w
  1104     07B6  00F3               	movwf	___lwdiv@dividend+1
  1105     07B7  083E               	movf	sprintf@val,w
  1106     07B8  00F2               	movwf	___lwdiv@dividend
  1107     07B9  120A  118A  25D1  120A  118A  	fcall	___lwdiv
  1108     07BE  0871               	movf	?___lwdiv+1,w
  1109     07BF  00FB               	movwf	___lwmod@dividend+1
  1110     07C0  0870               	movf	?___lwdiv,w
  1111     07C1  00FA               	movwf	___lwmod@dividend
  1112     07C2  120A  118A  2555  120A  118A  	fcall	___lwmod
  1113     07C7  0878               	movf	?___lwmod,w
  1114     07C8  3E30               	addlw	48
  1115     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1116     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1117     07CB  00C1               	movwf	sprintf@c
  1118     07CC                     l1282:
  1119                           
  1120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1121     07CC  0840               	movf	sprintf@sp,w
  1122     07CD  0084               	movwf	4
  1123     07CE  0841               	movf	sprintf@c,w
  1124     07CF  1383               	bcf	3,7	;select IRP bank0
  1125     07D0  0080               	movwf	0
  1126     07D1                     l1284:
  1127     07D1  3001               	movlw	1
  1128     07D2  00B8               	movwf	??_sprintf
  1129     07D3  0838               	movf	??_sprintf,w
  1130     07D4  07C0               	addwf	sprintf@sp,f
  1131     07D5                     l1286:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1134     07D5  30FF               	movlw	255
  1135     07D6  00B8               	movwf	??_sprintf
  1136     07D7  0838               	movf	??_sprintf,w
  1137     07D8  07BD               	addwf	sprintf@prec,f
  1138     07D9  0A3D               	incf	sprintf@prec,w
  1139     07DA  1D03               	btfss	3,2
  1140     07DB  2FDD               	goto	u781
  1141     07DC  2FDE               	goto	u780
  1142     07DD                     u781:
  1143     07DD  2FA0               	goto	l1280
  1144     07DE                     u780:
  1145     07DE                     l1288:
  1146                           
  1147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1148     07DE  3001               	movlw	1
  1149     07DF  07B5               	addwf	sprintf@f,f
  1150     07E0  30FF               	movlw	-1
  1151     07E1  0735               	addwf	sprintf@f,w
  1152     07E2  0084               	movwf	4
  1153     07E3  120A  118A  200D  120A  118A  	fcall	stringdir
  1154     07E8  00C1               	movwf	sprintf@c
  1155     07E9  0841               	movf	sprintf@c,w
  1156     07EA  1D03               	btfss	3,2
  1157     07EB  2FED               	goto	u791
  1158     07EC  2FEE               	goto	u790
  1159     07ED                     u791:
  1160     07ED  2F1F               	goto	l1238
  1161     07EE                     u790:
  1162     07EE                     l1290:
  1163                           
  1164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1165     07EE  0840               	movf	sprintf@sp,w
  1166     07EF  0084               	movwf	4
  1167     07F0  1383               	bcf	3,7	;select IRP bank0
  1168     07F1  0180               	clrf	0
  1169     07F2                     l272:
  1170     07F2  0008               	return
  1171     07F3                     __end_of_sprintf:
  1172                           
  1173                           	psect	text2
  1174     0555                     __ptext2:	
  1175 ;; *************** function ___lwmod *****************
  1176 ;; Defined at:
  1177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  divisor         2    8[COMMON] unsigned int 
  1180 ;;  dividend        2   10[COMMON] unsigned int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  counter         1   13[COMMON] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  2    8[COMMON] unsigned int 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         4       0       0       0       0
  1193 ;;      Locals:         1       0       0       0       0
  1194 ;;      Temps:          1       0       0       0       0
  1195 ;;      Totals:         6       0       0       0       0
  1196 ;;Total ram usage:        6 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_sprintf
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205     0555                     ___lwmod:	
  1206                           ;psect for function ___lwmod
  1207                           
  1208     0555                     l1146:	
  1209                           ;incstack = 0
  1210                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1211                           
  1212     0555  0878               	movf	___lwmod@divisor,w
  1213     0556  0479               	iorwf	___lwmod@divisor+1,w
  1214     0557  1903               	btfsc	3,2
  1215     0558  2D5A               	goto	u561
  1216     0559  2D5B               	goto	u560
  1217     055A                     u561:
  1218     055A  2D8A               	goto	l1164
  1219     055B                     u560:
  1220     055B                     l1148:
  1221     055B  01FD               	clrf	___lwmod@counter
  1222     055C  0AFD               	incf	___lwmod@counter,f
  1223     055D  2D69               	goto	l1154
  1224     055E                     l1150:
  1225     055E  3001               	movlw	1
  1226     055F                     u575:
  1227     055F  1003               	clrc
  1228     0560  0DF8               	rlf	___lwmod@divisor,f
  1229     0561  0DF9               	rlf	___lwmod@divisor+1,f
  1230     0562  3EFF               	addlw	-1
  1231     0563  1D03               	skipz
  1232     0564  2D5F               	goto	u575
  1233     0565                     l1152:
  1234     0565  3001               	movlw	1
  1235     0566  00FC               	movwf	??___lwmod
  1236     0567  087C               	movf	??___lwmod,w
  1237     0568  07FD               	addwf	___lwmod@counter,f
  1238     0569                     l1154:
  1239     0569  1FF9               	btfss	___lwmod@divisor+1,7
  1240     056A  2D6C               	goto	u581
  1241     056B  2D6D               	goto	u580
  1242     056C                     u581:
  1243     056C  2D5E               	goto	l1150
  1244     056D                     u580:
  1245     056D                     l1156:
  1246     056D  0879               	movf	___lwmod@divisor+1,w
  1247     056E  027B               	subwf	___lwmod@dividend+1,w
  1248     056F  1D03               	skipz
  1249     0570  2D73               	goto	u595
  1250     0571  0878               	movf	___lwmod@divisor,w
  1251     0572  027A               	subwf	___lwmod@dividend,w
  1252     0573                     u595:
  1253     0573  1C03               	skipc
  1254     0574  2D76               	goto	u591
  1255     0575  2D77               	goto	u590
  1256     0576                     u591:
  1257     0576  2D7D               	goto	l1160
  1258     0577                     u590:
  1259     0577                     l1158:
  1260     0577  0878               	movf	___lwmod@divisor,w
  1261     0578  02FA               	subwf	___lwmod@dividend,f
  1262     0579  0879               	movf	___lwmod@divisor+1,w
  1263     057A  1C03               	skipc
  1264     057B  03FB               	decf	___lwmod@dividend+1,f
  1265     057C  02FB               	subwf	___lwmod@dividend+1,f
  1266     057D                     l1160:
  1267     057D  3001               	movlw	1
  1268     057E                     u605:
  1269     057E  1003               	clrc
  1270     057F  0CF9               	rrf	___lwmod@divisor+1,f
  1271     0580  0CF8               	rrf	___lwmod@divisor,f
  1272     0581  3EFF               	addlw	-1
  1273     0582  1D03               	skipz
  1274     0583  2D7E               	goto	u605
  1275     0584                     l1162:
  1276     0584  3001               	movlw	1
  1277     0585  02FD               	subwf	___lwmod@counter,f
  1278     0586  1D03               	btfss	3,2
  1279     0587  2D89               	goto	u611
  1280     0588  2D8A               	goto	u610
  1281     0589                     u611:
  1282     0589  2D6D               	goto	l1156
  1283     058A                     u610:
  1284     058A                     l1164:
  1285     058A  087B               	movf	___lwmod@dividend+1,w
  1286     058B  00F9               	movwf	?___lwmod+1
  1287     058C  087A               	movf	___lwmod@dividend,w
  1288     058D  00F8               	movwf	?___lwmod
  1289     058E                     l558:
  1290     058E  0008               	return
  1291     058F                     __end_of___lwmod:
  1292                           
  1293                           	psect	text3
  1294     05D1                     __ptext3:	
  1295 ;; *************** function ___lwdiv *****************
  1296 ;; Defined at:
  1297 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  divisor         2    0[COMMON] unsigned int 
  1300 ;;  dividend        2    2[COMMON] unsigned int 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  quotient        2    5[COMMON] unsigned int 
  1303 ;;  counter         1    7[COMMON] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  2    0[COMMON] unsigned int 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         4       0       0       0       0
  1314 ;;      Locals:         3       0       0       0       0
  1315 ;;      Temps:          1       0       0       0       0
  1316 ;;      Totals:         8       0       0       0       0
  1317 ;;Total ram usage:        8 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_sprintf
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326     05D1                     ___lwdiv:	
  1327                           ;psect for function ___lwdiv
  1328                           
  1329     05D1                     l1120:	
  1330                           ;incstack = 0
  1331                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1332                           
  1333     05D1  01F5               	clrf	___lwdiv@quotient
  1334     05D2  01F6               	clrf	___lwdiv@quotient+1
  1335     05D3                     l1122:
  1336     05D3  0870               	movf	___lwdiv@divisor,w
  1337     05D4  0471               	iorwf	___lwdiv@divisor+1,w
  1338     05D5  1903               	btfsc	3,2
  1339     05D6  2DD8               	goto	u491
  1340     05D7  2DD9               	goto	u490
  1341     05D8                     u491:
  1342     05D8  2E10               	goto	l1142
  1343     05D9                     u490:
  1344     05D9                     l1124:
  1345     05D9  01F7               	clrf	___lwdiv@counter
  1346     05DA  0AF7               	incf	___lwdiv@counter,f
  1347     05DB  2DE7               	goto	l1130
  1348     05DC                     l1126:
  1349     05DC  3001               	movlw	1
  1350     05DD                     u505:
  1351     05DD  1003               	clrc
  1352     05DE  0DF0               	rlf	___lwdiv@divisor,f
  1353     05DF  0DF1               	rlf	___lwdiv@divisor+1,f
  1354     05E0  3EFF               	addlw	-1
  1355     05E1  1D03               	skipz
  1356     05E2  2DDD               	goto	u505
  1357     05E3                     l1128:
  1358     05E3  3001               	movlw	1
  1359     05E4  00F4               	movwf	??___lwdiv
  1360     05E5  0874               	movf	??___lwdiv,w
  1361     05E6  07F7               	addwf	___lwdiv@counter,f
  1362     05E7                     l1130:
  1363     05E7  1FF1               	btfss	___lwdiv@divisor+1,7
  1364     05E8  2DEA               	goto	u511
  1365     05E9  2DEB               	goto	u510
  1366     05EA                     u511:
  1367     05EA  2DDC               	goto	l1126
  1368     05EB                     u510:
  1369     05EB                     l1132:
  1370     05EB  3001               	movlw	1
  1371     05EC                     u525:
  1372     05EC  1003               	clrc
  1373     05ED  0DF5               	rlf	___lwdiv@quotient,f
  1374     05EE  0DF6               	rlf	___lwdiv@quotient+1,f
  1375     05EF  3EFF               	addlw	-1
  1376     05F0  1D03               	skipz
  1377     05F1  2DEC               	goto	u525
  1378     05F2  0871               	movf	___lwdiv@divisor+1,w
  1379     05F3  0273               	subwf	___lwdiv@dividend+1,w
  1380     05F4  1D03               	skipz
  1381     05F5  2DF8               	goto	u535
  1382     05F6  0870               	movf	___lwdiv@divisor,w
  1383     05F7  0272               	subwf	___lwdiv@dividend,w
  1384     05F8                     u535:
  1385     05F8  1C03               	skipc
  1386     05F9  2DFB               	goto	u531
  1387     05FA  2DFC               	goto	u530
  1388     05FB                     u531:
  1389     05FB  2E03               	goto	l1138
  1390     05FC                     u530:
  1391     05FC                     l1134:
  1392     05FC  0870               	movf	___lwdiv@divisor,w
  1393     05FD  02F2               	subwf	___lwdiv@dividend,f
  1394     05FE  0871               	movf	___lwdiv@divisor+1,w
  1395     05FF  1C03               	skipc
  1396     0600  03F3               	decf	___lwdiv@dividend+1,f
  1397     0601  02F3               	subwf	___lwdiv@dividend+1,f
  1398     0602                     l1136:
  1399     0602  1475               	bsf	___lwdiv@quotient,0
  1400     0603                     l1138:
  1401     0603  3001               	movlw	1
  1402     0604                     u545:
  1403     0604  1003               	clrc
  1404     0605  0CF1               	rrf	___lwdiv@divisor+1,f
  1405     0606  0CF0               	rrf	___lwdiv@divisor,f
  1406     0607  3EFF               	addlw	-1
  1407     0608  1D03               	skipz
  1408     0609  2E04               	goto	u545
  1409     060A                     l1140:
  1410     060A  3001               	movlw	1
  1411     060B  02F7               	subwf	___lwdiv@counter,f
  1412     060C  1D03               	btfss	3,2
  1413     060D  2E0F               	goto	u551
  1414     060E  2E10               	goto	u550
  1415     060F                     u551:
  1416     060F  2DEB               	goto	l1132
  1417     0610                     u550:
  1418     0610                     l1142:
  1419     0610  0876               	movf	___lwdiv@quotient+1,w
  1420     0611  00F1               	movwf	?___lwdiv+1
  1421     0612  0875               	movf	___lwdiv@quotient,w
  1422     0613  00F0               	movwf	?___lwdiv
  1423     0614                     l548:
  1424     0614  0008               	return
  1425     0615                     __end_of___lwdiv:
  1426                           
  1427                           	psect	text4
  1428     04AC                     __ptext4:	
  1429 ;; *************** function _setup *****************
  1430 ;; Defined at:
  1431 ;;		line 81 in file "maestro.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 1
  1452 ;; This function calls:
  1453 ;;		_I2C_Init_Master
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459     04AC                     _setup:	
  1460                           ;psect for function _setup
  1461                           
  1462     04AC                     l1168:	
  1463                           ;incstack = 0
  1464                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1465                           
  1466                           
  1467                           ;maestro.c: 84:     ANSEL = 0;
  1468     04AC  1683               	bsf	3,5	;RP0=1, select bank3
  1469     04AD  1703               	bsf	3,6	;RP1=1, select bank3
  1470     04AE  0188               	clrf	8	;volatile
  1471                           
  1472                           ;maestro.c: 85:     ANSELH = 0;
  1473     04AF  0189               	clrf	9	;volatile
  1474                           
  1475                           ;maestro.c: 88:     TRISB = 0;
  1476     04B0  1683               	bsf	3,5	;RP0=1, select bank1
  1477     04B1  1303               	bcf	3,6	;RP1=0, select bank1
  1478     04B2  0186               	clrf	6	;volatile
  1479                           
  1480                           ;maestro.c: 89:     TRISD = 0;
  1481     04B3  0188               	clrf	8	;volatile
  1482                           
  1483                           ;maestro.c: 92:     PORTB = 0;
  1484     04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1485     04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1486     04B6  0186               	clrf	6	;volatile
  1487                           
  1488                           ;maestro.c: 93:     PORTD = 0;
  1489     04B7  0188               	clrf	8	;volatile
  1490     04B8                     l1170:
  1491                           
  1492                           ;maestro.c: 96:     OSCCONbits.IRCF2 = 1;
  1493     04B8  1683               	bsf	3,5	;RP0=1, select bank1
  1494     04B9  1303               	bcf	3,6	;RP1=0, select bank1
  1495     04BA  170F               	bsf	15,6	;volatile
  1496     04BB                     l1172:
  1497                           
  1498                           ;maestro.c: 97:     OSCCONbits.IRCF1 = 1;
  1499     04BB  168F               	bsf	15,5	;volatile
  1500     04BC                     l1174:
  1501                           
  1502                           ;maestro.c: 98:     OSCCONbits.IRCF0 = 1;
  1503     04BC  160F               	bsf	15,4	;volatile
  1504     04BD                     l1176:
  1505                           
  1506                           ;maestro.c: 101:     OSCCONbits.SCS = 1;
  1507     04BD  140F               	bsf	15,0	;volatile
  1508     04BE                     l1178:
  1509                           
  1510                           ;maestro.c: 104:     I2C_Init_Master(0x80);
  1511     04BE  3080               	movlw	128
  1512     04BF  120A  118A  24DF  120A  118A  	fcall	_I2C_Init_Master
  1513     04C4                     l51:
  1514     04C4  0008               	return
  1515     04C5                     __end_of_setup:
  1516                           
  1517                           	psect	text5
  1518     04DF                     __ptext5:	
  1519 ;; *************** function _I2C_Init_Master *****************
  1520 ;; Defined at:
  1521 ;;		line 12 in file "i2c.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  sp_i2c          1    wreg     unsigned char 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  sp_i2c          1    0[COMMON] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         1       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0
  1538 ;;      Totals:         1       0       0       0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_setup
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548     04DF                     _I2C_Init_Master:	
  1549                           ;psect for function _I2C_Init_Master
  1550                           
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  1554                           ;I2C_Init_Master@sp_i2c stored from wreg
  1555     04DF  00F0               	movwf	I2C_Init_Master@sp_i2c
  1556     04E0                     l1076:
  1557                           
  1558                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  1559     04E0  1683               	bsf	3,5	;RP0=1, select bank1
  1560     04E1  1303               	bcf	3,6	;RP1=0, select bank1
  1561     04E2  1587               	bsf	7,3	;volatile
  1562                           
  1563                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  1564     04E3  1607               	bsf	7,4	;volatile
  1565     04E4                     l1078:
  1566                           
  1567                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  1568     04E4  0870               	movf	I2C_Init_Master@sp_i2c,w
  1569     04E5  0094               	movwf	20	;volatile
  1570                           
  1571                           ;i2c.c: 17:  SSPCON = 0x28;
  1572     04E6  3028               	movlw	40
  1573     04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1574     04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1575     04E9  0094               	movwf	20	;volatile
  1576     04EA                     l1080:
  1577                           
  1578                           ;i2c.c: 18:     SSPCON2 = 0x00;
  1579     04EA  1683               	bsf	3,5	;RP0=1, select bank1
  1580     04EB  1303               	bcf	3,6	;RP1=0, select bank1
  1581     04EC  0191               	clrf	17	;volatile
  1582     04ED                     l1082:
  1583                           
  1584                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  1585     04ED  3080               	movlw	128
  1586     04EE  0670               	xorwf	I2C_Init_Master@sp_i2c,w
  1587     04EF  1D03               	btfss	3,2
  1588     04F0  2CF2               	goto	u461
  1589     04F1  2CF3               	goto	u460
  1590     04F2                     u461:
  1591     04F2  2CF6               	goto	l1086
  1592     04F3                     u460:
  1593     04F3                     l1084:
  1594                           
  1595                           ;i2c.c: 20:         SSPADD = 19;
  1596     04F3  3013               	movlw	19
  1597     04F4  0093               	movwf	19	;volatile
  1598                           
  1599                           ;i2c.c: 21:     }
  1600     04F5  2CFD               	goto	l73
  1601     04F6                     l1086:
  1602     04F6  0870               	movf	I2C_Init_Master@sp_i2c,w
  1603     04F7  1D03               	btfss	3,2
  1604     04F8  2CFA               	goto	u471
  1605     04F9  2CFB               	goto	u470
  1606     04FA                     u471:
  1607     04FA  2CFD               	goto	l73
  1608     04FB                     u470:
  1609     04FB                     l1088:
  1610                           
  1611                           ;i2c.c: 23:         SSPADD = 29;
  1612     04FB  301D               	movlw	29
  1613     04FC  0093               	movwf	19	;volatile
  1614     04FD                     l73:
  1615     04FD  0008               	return
  1616     04FE                     __end_of_I2C_Init_Master:
  1617                           
  1618                           	psect	text6
  1619     058F                     __ptext6:	
  1620 ;; *************** function _Lcd_Write_String *****************
  1621 ;; Defined at:
  1622 ;;		line 98 in file "LCD.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  a               2    5[COMMON] PTR unsigned char 
  1625 ;;		 -> buffer(20), STR_1(5), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  i               2   10[COMMON] int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         2       0       0       0       0
  1638 ;;      Locals:         2       0       0       0       0
  1639 ;;      Temps:          3       0       0       0       0
  1640 ;;      Totals:         7       0       0       0       0
  1641 ;;Total ram usage:        7 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 2
  1644 ;; This function calls:
  1645 ;;		_Lcd_Write_Char
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651     058F                     _Lcd_Write_String:	
  1652                           ;psect for function _Lcd_Write_String
  1653                           
  1654     058F                     l1212:	
  1655                           ;incstack = 0
  1656                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1657                           
  1658                           
  1659                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1660     058F  01FA               	clrf	Lcd_Write_String@i
  1661     0590  01FB               	clrf	Lcd_Write_String@i+1
  1662     0591  2DB4               	goto	l1218
  1663     0592                     l1214:
  1664                           
  1665                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1666     0592  087A               	movf	Lcd_Write_String@i,w
  1667     0593  0775               	addwf	Lcd_Write_String@a,w
  1668     0594  00F8               	movwf	??_Lcd_Write_String+1
  1669     0595  0876               	movf	Lcd_Write_String@a+1,w
  1670     0596  00F7               	movwf	??_Lcd_Write_String
  1671     0597  1803               	skipnc
  1672     0598  0AF7               	incf	??_Lcd_Write_String,f
  1673     0599  1FFA               	btfss	Lcd_Write_String@i,7
  1674     059A  2D9C               	goto	u660
  1675     059B  03F7               	decf	??_Lcd_Write_String,f
  1676     059C                     u660:
  1677     059C  0877               	movf	??_Lcd_Write_String,w
  1678     059D  00F9               	movwf	??_Lcd_Write_String+2
  1679     059E  0879               	movf	??_Lcd_Write_String+2,w
  1680     059F  1283               	bcf	3,5	;RP0=0, select bank0
  1681     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1682     05A1  00FF               	movwf	btemp+1
  1683     05A2  0878               	movf	??_Lcd_Write_String+1,w
  1684     05A3  0084               	movwf	4
  1685     05A4  120A  118A  2003  120A  118A  	fcall	stringtab
  1686     05A9  120A  118A  2520  120A  118A  	fcall	_Lcd_Write_Char
  1687     05AE                     l1216:
  1688     05AE  3001               	movlw	1
  1689     05AF  07FA               	addwf	Lcd_Write_String@i,f
  1690     05B0  1803               	skipnc
  1691     05B1  0AFB               	incf	Lcd_Write_String@i+1,f
  1692     05B2  3000               	movlw	0
  1693     05B3  07FB               	addwf	Lcd_Write_String@i+1,f
  1694     05B4                     l1218:
  1695     05B4  087A               	movf	Lcd_Write_String@i,w
  1696     05B5  0775               	addwf	Lcd_Write_String@a,w
  1697     05B6  00F8               	movwf	??_Lcd_Write_String+1
  1698     05B7  0876               	movf	Lcd_Write_String@a+1,w
  1699     05B8  00F7               	movwf	??_Lcd_Write_String
  1700     05B9  1803               	skipnc
  1701     05BA  0AF7               	incf	??_Lcd_Write_String,f
  1702     05BB  1FFA               	btfss	Lcd_Write_String@i,7
  1703     05BC  2DBE               	goto	u670
  1704     05BD  03F7               	decf	??_Lcd_Write_String,f
  1705     05BE                     u670:
  1706     05BE  0877               	movf	??_Lcd_Write_String,w
  1707     05BF  00F9               	movwf	??_Lcd_Write_String+2
  1708     05C0  0879               	movf	??_Lcd_Write_String+2,w
  1709     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1710     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1711     05C3  00FF               	movwf	btemp+1
  1712     05C4  0878               	movf	??_Lcd_Write_String+1,w
  1713     05C5  0084               	movwf	4
  1714     05C6  120A  118A  2003  120A  118A  	fcall	stringtab
  1715     05CB  3A00               	xorlw	0
  1716     05CC  1D03               	skipz
  1717     05CD  2DCF               	goto	u681
  1718     05CE  2DD0               	goto	u680
  1719     05CF                     u681:
  1720     05CF  2D92               	goto	l1214
  1721     05D0                     u680:
  1722     05D0                     l156:
  1723     05D0  0008               	return
  1724     05D1                     __end_of_Lcd_Write_String:
  1725                           
  1726                           	psect	text7
  1727     0520                     __ptext7:	
  1728 ;; *************** function _Lcd_Write_Char *****************
  1729 ;; Defined at:
  1730 ;;		line 83 in file "LCD.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  a               1    wreg     unsigned char 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  a               1    4[COMMON] unsigned char 
  1735 ;;  y               1    3[COMMON] unsigned char 
  1736 ;;  temp            1    2[COMMON] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         3       0       0       0       0
  1748 ;;      Temps:          1       0       0       0       0
  1749 ;;      Totals:         4       0       0       0       0
  1750 ;;Total ram usage:        4 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 1
  1753 ;; This function calls:
  1754 ;;		_Lcd_Port
  1755 ;; This function is called by:
  1756 ;;		_Lcd_Write_String
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760     0520                     _Lcd_Write_Char:	
  1761                           ;psect for function _Lcd_Write_Char
  1762                           
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1766                           ;Lcd_Write_Char@a stored from wreg
  1767     0520  00F4               	movwf	Lcd_Write_Char@a
  1768     0521                     l1100:
  1769                           
  1770                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  1771     0521  0874               	movf	Lcd_Write_Char@a,w
  1772     0522  390F               	andlw	15
  1773     0523  00F2               	movwf	Lcd_Write_Char@temp
  1774                           
  1775                           ;LCD.c: 86:     y = a & 0xF0;
  1776     0524  0874               	movf	Lcd_Write_Char@a,w
  1777     0525  39F0               	andlw	240
  1778     0526  00F3               	movwf	Lcd_Write_Char@y
  1779     0527                     l1102:
  1780                           
  1781                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  1782     0527  1283               	bcf	3,5	;RP0=0, select bank0
  1783     0528  1303               	bcf	3,6	;RP1=0, select bank0
  1784     0529  1708               	bsf	8,6	;volatile
  1785     052A                     l1104:
  1786                           
  1787                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1788     052A  0873               	movf	Lcd_Write_Char@y,w
  1789     052B  00F1               	movwf	??_Lcd_Write_Char
  1790     052C  3004               	movlw	4
  1791     052D                     u485:
  1792     052D  1003               	clrc
  1793     052E  0CF1               	rrf	??_Lcd_Write_Char,f
  1794     052F  3EFF               	addlw	-1
  1795     0530  1D03               	skipz
  1796     0531  2D2D               	goto	u485
  1797     0532  0871               	movf	??_Lcd_Write_Char,w
  1798     0533  120A  118A  24FE  120A  118A  	fcall	_Lcd_Port
  1799     0538                     l1106:
  1800                           
  1801                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  1802     0538  1283               	bcf	3,5	;RP0=0, select bank0
  1803     0539  1303               	bcf	3,6	;RP1=0, select bank0
  1804     053A  1788               	bsf	8,7	;volatile
  1805     053B                     l1108:
  1806                           
  1807                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1808     053B  301A               	movlw	26
  1809     053C  00F1               	movwf	??_Lcd_Write_Char
  1810     053D                     u817:
  1811     053D  0BF1               	decfsz	??_Lcd_Write_Char,f
  1812     053E  2D3D               	goto	u817
  1813     053F  0000               	nop
  1814     0540                     l1110:
  1815                           
  1816                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  1817     0540  1283               	bcf	3,5	;RP0=0, select bank0
  1818     0541  1303               	bcf	3,6	;RP1=0, select bank0
  1819     0542  1388               	bcf	8,7	;volatile
  1820     0543                     l1112:
  1821                           
  1822                           ;LCD.c: 92:     Lcd_Port(temp);
  1823     0543  0872               	movf	Lcd_Write_Char@temp,w
  1824     0544  120A  118A  24FE  120A  118A  	fcall	_Lcd_Port
  1825     0549                     l1114:
  1826                           
  1827                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  1828     0549  1283               	bcf	3,5	;RP0=0, select bank0
  1829     054A  1303               	bcf	3,6	;RP1=0, select bank0
  1830     054B  1788               	bsf	8,7	;volatile
  1831     054C                     l1116:
  1832                           
  1833                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1834     054C  301A               	movlw	26
  1835     054D  00F1               	movwf	??_Lcd_Write_Char
  1836     054E                     u827:
  1837     054E  0BF1               	decfsz	??_Lcd_Write_Char,f
  1838     054F  2D4E               	goto	u827
  1839     0550  0000               	nop
  1840     0551                     l1118:
  1841                           
  1842                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  1843     0551  1283               	bcf	3,5	;RP0=0, select bank0
  1844     0552  1303               	bcf	3,6	;RP1=0, select bank0
  1845     0553  1388               	bcf	8,7	;volatile
  1846     0554                     l150:
  1847     0554  0008               	return
  1848     0555                     __end_of_Lcd_Write_Char:
  1849                           
  1850                           	psect	text8
  1851     0615                     __ptext8:	
  1852 ;; *************** function _Lcd_Set_Cursor *****************
  1853 ;; Defined at:
  1854 ;;		line 48 in file "LCD.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  a               1    wreg     unsigned char 
  1857 ;;  b               1    4[COMMON] unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  a               1    6[COMMON] unsigned char 
  1860 ;;  temp            1    9[COMMON] unsigned char 
  1861 ;;  y               1    8[COMMON] unsigned char 
  1862 ;;  z               1    7[COMMON] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         1       0       0       0       0
  1873 ;;      Locals:         4       0       0       0       0
  1874 ;;      Temps:          1       0       0       0       0
  1875 ;;      Totals:         6       0       0       0       0
  1876 ;;Total ram usage:        6 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 2
  1879 ;; This function calls:
  1880 ;;		_Lcd_Cmd
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886     0615                     _Lcd_Set_Cursor:	
  1887                           ;psect for function _Lcd_Set_Cursor
  1888                           
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1892                           ;Lcd_Set_Cursor@a stored from wreg
  1893     0615  00F6               	movwf	Lcd_Set_Cursor@a
  1894     0616                     l1192:
  1895                           
  1896                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  1897     0616  0376               	decf	Lcd_Set_Cursor@a,w
  1898     0617  1D03               	btfss	3,2
  1899     0618  2E1A               	goto	u621
  1900     0619  2E1B               	goto	u620
  1901     061A                     u621:
  1902     061A  2E38               	goto	l1202
  1903     061B                     u620:
  1904     061B                     l1194:
  1905                           
  1906                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1907     061B  0874               	movf	Lcd_Set_Cursor@b,w
  1908     061C  3E7F               	addlw	127
  1909     061D  00F9               	movwf	Lcd_Set_Cursor@temp
  1910                           
  1911                           ;LCD.c: 52:         z = temp >> 4;
  1912     061E  0879               	movf	Lcd_Set_Cursor@temp,w
  1913     061F  00F5               	movwf	??_Lcd_Set_Cursor
  1914     0620  3004               	movlw	4
  1915     0621                     u635:
  1916     0621  1003               	clrc
  1917     0622  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1918     0623  3EFF               	addlw	-1
  1919     0624  1D03               	skipz
  1920     0625  2E21               	goto	u635
  1921     0626  0875               	movf	??_Lcd_Set_Cursor,w
  1922     0627  00F7               	movwf	Lcd_Set_Cursor@z
  1923     0628                     l1196:
  1924                           
  1925                           ;LCD.c: 53:         y = temp & 0x0F;
  1926     0628  0879               	movf	Lcd_Set_Cursor@temp,w
  1927     0629  390F               	andlw	15
  1928     062A  00F8               	movwf	Lcd_Set_Cursor@y
  1929     062B                     l1198:
  1930                           
  1931                           ;LCD.c: 54:         Lcd_Cmd(z);
  1932     062B  0877               	movf	Lcd_Set_Cursor@z,w
  1933     062C  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  1934     0631                     l1200:
  1935                           
  1936                           ;LCD.c: 55:         Lcd_Cmd(y);
  1937     0631  0878               	movf	Lcd_Set_Cursor@y,w
  1938     0632  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  1939                           
  1940                           ;LCD.c: 56:     } else if (a == 2) {
  1941     0637  2E5A               	goto	l144
  1942     0638                     l1202:
  1943     0638  3002               	movlw	2
  1944     0639  0676               	xorwf	Lcd_Set_Cursor@a,w
  1945     063A  1D03               	btfss	3,2
  1946     063B  2E3D               	goto	u641
  1947     063C  2E3E               	goto	u640
  1948     063D                     u641:
  1949     063D  2E5A               	goto	l144
  1950     063E                     u640:
  1951     063E                     l1204:
  1952                           
  1953                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  1954     063E  0874               	movf	Lcd_Set_Cursor@b,w
  1955     063F  3EBF               	addlw	191
  1956     0640  00F9               	movwf	Lcd_Set_Cursor@temp
  1957                           
  1958                           ;LCD.c: 58:         z = temp >> 4;
  1959     0641  0879               	movf	Lcd_Set_Cursor@temp,w
  1960     0642  00F5               	movwf	??_Lcd_Set_Cursor
  1961     0643  3004               	movlw	4
  1962     0644                     u655:
  1963     0644  1003               	clrc
  1964     0645  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1965     0646  3EFF               	addlw	-1
  1966     0647  1D03               	skipz
  1967     0648  2E44               	goto	u655
  1968     0649  0875               	movf	??_Lcd_Set_Cursor,w
  1969     064A  00F7               	movwf	Lcd_Set_Cursor@z
  1970     064B                     l1206:
  1971                           
  1972                           ;LCD.c: 59:         y = temp & 0x0F;
  1973     064B  0879               	movf	Lcd_Set_Cursor@temp,w
  1974     064C  390F               	andlw	15
  1975     064D  00F8               	movwf	Lcd_Set_Cursor@y
  1976     064E                     l1208:
  1977                           
  1978                           ;LCD.c: 60:         Lcd_Cmd(z);
  1979     064E  0877               	movf	Lcd_Set_Cursor@z,w
  1980     064F  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  1981     0654                     l1210:
  1982                           
  1983                           ;LCD.c: 61:         Lcd_Cmd(y);
  1984     0654  0878               	movf	Lcd_Set_Cursor@y,w
  1985     0655  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  1986     065A                     l144:
  1987     065A  0008               	return
  1988     065B                     __end_of_Lcd_Set_Cursor:
  1989                           
  1990                           	psect	text9
  1991     065B                     __ptext9:	
  1992 ;; *************** function _Lcd_Init *****************
  1993 ;; Defined at:
  1994 ;;		line 65 in file "LCD.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0
  2010 ;;      Temps:          2       0       0       0       0
  2011 ;;      Totals:         2       0       0       0       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 2
  2015 ;; This function calls:
  2016 ;;		_Lcd_Cmd
  2017 ;;		_Lcd_Port
  2018 ;; This function is called by:
  2019 ;;		_main
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023     065B                     _Lcd_Init:	
  2024                           ;psect for function _Lcd_Init
  2025                           
  2026     065B                     l1180:	
  2027                           ;incstack = 0
  2028                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2029                           
  2030                           
  2031                           ;LCD.c: 66:     Lcd_Port(0x00);
  2032     065B  3000               	movlw	0
  2033     065C  120A  118A  24FE  120A  118A  	fcall	_Lcd_Port
  2034     0661                     l1182:
  2035                           
  2036                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2037     0661  3034               	movlw	52
  2038     0662  00F5               	movwf	??_Lcd_Init+1
  2039     0663  30F1               	movlw	241
  2040     0664  00F4               	movwf	??_Lcd_Init
  2041     0665                     u837:
  2042     0665  0BF4               	decfsz	??_Lcd_Init,f
  2043     0666  2E65               	goto	u837
  2044     0667  0BF5               	decfsz	??_Lcd_Init+1,f
  2045     0668  2E65               	goto	u837
  2046     0669  2E6A               	nop2
  2047     066A                     l1184:
  2048                           
  2049                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2050     066A  3003               	movlw	3
  2051     066B  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2052                           
  2053                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2054     0670  300D               	movlw	13
  2055     0671  00F5               	movwf	??_Lcd_Init+1
  2056     0672  30FB               	movlw	251
  2057     0673  00F4               	movwf	??_Lcd_Init
  2058     0674                     u847:
  2059     0674  0BF4               	decfsz	??_Lcd_Init,f
  2060     0675  2E74               	goto	u847
  2061     0676  0BF5               	decfsz	??_Lcd_Init+1,f
  2062     0677  2E74               	goto	u847
  2063     0678  2E79               	nop2
  2064     0679                     l1186:
  2065                           
  2066                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2067     0679  3003               	movlw	3
  2068     067A  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2069     067F                     l1188:
  2070                           
  2071                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2072     067F  3085               	movlw	133
  2073     0680  00F4               	movwf	??_Lcd_Init
  2074     0681                     u857:
  2075     0681  0BF4               	decfsz	??_Lcd_Init,f
  2076     0682  2E81               	goto	u857
  2077                           
  2078                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2079     0683  3003               	movlw	3
  2080     0684  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2081                           
  2082                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  2083     0689  3002               	movlw	2
  2084     068A  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2085                           
  2086                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2087     068F  3002               	movlw	2
  2088     0690  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2089                           
  2090                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  2091     0695  3008               	movlw	8
  2092     0696  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2093                           
  2094                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  2095     069B  3000               	movlw	0
  2096     069C  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2097                           
  2098                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  2099     06A1  300C               	movlw	12
  2100     06A2  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2101                           
  2102                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  2103     06A7  3000               	movlw	0
  2104     06A8  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2105                           
  2106                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  2107     06AD  3006               	movlw	6
  2108     06AE  120A  118A  24C5  120A  118A  	fcall	_Lcd_Cmd
  2109     06B3                     l1190:
  2110                           
  2111                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  2112     06B3  3042               	movlw	66
  2113     06B4  00F4               	movwf	??_Lcd_Init
  2114     06B5                     u867:
  2115     06B5  0BF4               	decfsz	??_Lcd_Init,f
  2116     06B6  2EB5               	goto	u867
  2117     06B7  0000               	nop
  2118     06B8                     l147:
  2119     06B8  0008               	return
  2120     06B9                     __end_of_Lcd_Init:
  2121                           
  2122                           	psect	text10
  2123     04C5                     __ptext10:	
  2124 ;; *************** function _Lcd_Cmd *****************
  2125 ;; Defined at:
  2126 ;;		line 35 in file "LCD.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  a               1    wreg     unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  a               1    3[COMMON] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0, pclath, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         0       0       0       0       0
  2141 ;;      Locals:         1       0       0       0       0
  2142 ;;      Temps:          2       0       0       0       0
  2143 ;;      Totals:         3       0       0       0       0
  2144 ;;Total ram usage:        3 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 1
  2147 ;; This function calls:
  2148 ;;		_Lcd_Port
  2149 ;; This function is called by:
  2150 ;;		_Lcd_Set_Cursor
  2151 ;;		_Lcd_Init
  2152 ;;		_Lcd_Clear
  2153 ;;		_Lcd_Shift_Right
  2154 ;;		_Lcd_Shift_Left
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158     04C5                     _Lcd_Cmd:	
  2159                           ;psect for function _Lcd_Cmd
  2160                           
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2164                           ;Lcd_Cmd@a stored from wreg
  2165     04C5  00F3               	movwf	Lcd_Cmd@a
  2166     04C6                     l1090:
  2167                           
  2168                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  2169     04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2170     04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2171     04C8  1308               	bcf	8,6	;volatile
  2172     04C9                     l1092:
  2173                           
  2174                           ;LCD.c: 37:     Lcd_Port(a);
  2175     04C9  0873               	movf	Lcd_Cmd@a,w
  2176     04CA  120A  118A  24FE  120A  118A  	fcall	_Lcd_Port
  2177     04CF                     l1094:
  2178                           
  2179                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  2180     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2181     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2182     04D1  1788               	bsf	8,7	;volatile
  2183     04D2                     l1096:
  2184                           
  2185                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2186     04D2  300B               	movlw	11
  2187     04D3  00F2               	movwf	??_Lcd_Cmd+1
  2188     04D4  3062               	movlw	98
  2189     04D5  00F1               	movwf	??_Lcd_Cmd
  2190     04D6                     u877:
  2191     04D6  0BF1               	decfsz	??_Lcd_Cmd,f
  2192     04D7  2CD6               	goto	u877
  2193     04D8  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2194     04D9  2CD6               	goto	u877
  2195     04DA  0000               	nop
  2196     04DB                     l1098:
  2197                           
  2198                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  2199     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2200     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2201     04DD  1388               	bcf	8,7	;volatile
  2202     04DE                     l135:
  2203     04DE  0008               	return
  2204     04DF                     __end_of_Lcd_Cmd:
  2205                           
  2206                           	psect	text11
  2207     04FE                     __ptext11:	
  2208 ;; *************** function _Lcd_Port *****************
  2209 ;; Defined at:
  2210 ;;		line 13 in file "LCD.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  a               1    wreg     unsigned char 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  a               1    0[COMMON] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         1       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0
  2227 ;;      Totals:         1       0       0       0       0
  2228 ;;Total ram usage:        1 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_Lcd_Cmd
  2234 ;;		_Lcd_Init
  2235 ;;		_Lcd_Write_Char
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239     04FE                     _Lcd_Port:	
  2240                           ;psect for function _Lcd_Port
  2241                           
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _Lcd_Port: [wreg]
  2245                           ;Lcd_Port@a stored from wreg
  2246     04FE  00F0               	movwf	Lcd_Port@a
  2247     04FF                     l1066:
  2248                           
  2249                           ;LCD.c: 14:     if (a & 1)
  2250     04FF  1C70               	btfss	Lcd_Port@a,0
  2251     0500  2D02               	goto	u421
  2252     0501  2D03               	goto	u420
  2253     0502                     u421:
  2254     0502  2D07               	goto	l124
  2255     0503                     u420:
  2256     0503                     l1068:
  2257                           
  2258                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  2259     0503  1283               	bcf	3,5	;RP0=0, select bank0
  2260     0504  1303               	bcf	3,6	;RP1=0, select bank0
  2261     0505  1606               	bsf	6,4	;volatile
  2262     0506  2D0A               	goto	l125
  2263     0507                     l124:	
  2264                           ;LCD.c: 16:     else
  2265                           
  2266                           
  2267                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  2268     0507  1283               	bcf	3,5	;RP0=0, select bank0
  2269     0508  1303               	bcf	3,6	;RP1=0, select bank0
  2270     0509  1206               	bcf	6,4	;volatile
  2271     050A                     l125:
  2272                           
  2273                           ;LCD.c: 19:     if (a & 2)
  2274     050A  1CF0               	btfss	Lcd_Port@a,1
  2275     050B  2D0D               	goto	u431
  2276     050C  2D0E               	goto	u430
  2277     050D                     u431:
  2278     050D  2D10               	goto	l126
  2279     050E                     u430:
  2280     050E                     l1070:
  2281                           
  2282                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  2283     050E  1686               	bsf	6,5	;volatile
  2284     050F  2D11               	goto	l127
  2285     0510                     l126:	
  2286                           ;LCD.c: 21:     else
  2287                           
  2288                           
  2289                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  2290     0510  1286               	bcf	6,5	;volatile
  2291     0511                     l127:
  2292                           
  2293                           ;LCD.c: 24:     if (a & 4)
  2294     0511  1D70               	btfss	Lcd_Port@a,2
  2295     0512  2D14               	goto	u441
  2296     0513  2D15               	goto	u440
  2297     0514                     u441:
  2298     0514  2D17               	goto	l128
  2299     0515                     u440:
  2300     0515                     l1072:
  2301                           
  2302                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  2303     0515  1706               	bsf	6,6	;volatile
  2304     0516  2D18               	goto	l129
  2305     0517                     l128:	
  2306                           ;LCD.c: 26:     else
  2307                           
  2308                           
  2309                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  2310     0517  1306               	bcf	6,6	;volatile
  2311     0518                     l129:
  2312                           
  2313                           ;LCD.c: 29:     if (a & 8)
  2314     0518  1DF0               	btfss	Lcd_Port@a,3
  2315     0519  2D1B               	goto	u451
  2316     051A  2D1C               	goto	u450
  2317     051B                     u451:
  2318     051B  2D1E               	goto	l130
  2319     051C                     u450:
  2320     051C                     l1074:
  2321                           
  2322                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  2323     051C  1786               	bsf	6,7	;volatile
  2324     051D  2D1F               	goto	l132
  2325     051E                     l130:	
  2326                           ;LCD.c: 31:     else
  2327                           
  2328                           
  2329                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  2330     051E  1386               	bcf	6,7	;volatile
  2331     051F                     l132:
  2332     051F  0008               	return
  2333     0520                     __end_of_Lcd_Port:
  2334                           
  2335                           	psect	text12
  2336     049E                     __ptext12:	
  2337 ;; *************** function _I2C_Write *****************
  2338 ;; Defined at:
  2339 ;;		line 64 in file "i2c.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  data            1    wreg     unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  data            1    0[COMMON] unsigned char 
  2344 ;;  b_ok            2    0        short 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  2   12[None  ] short 
  2347 ;; Registers used:
  2348 ;;		wreg
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2354 ;;      Params:         0       0       0       0       0
  2355 ;;      Locals:         1       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0
  2357 ;;      Totals:         1       0       0       0       0
  2358 ;;Total ram usage:        1 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367     049E                     _I2C_Write:	
  2368                           ;psect for function _I2C_Write
  2369                           
  2370                           
  2371                           ;incstack = 0
  2372                           ; Regs used in _I2C_Write: [wreg]
  2373                           ;I2C_Write@data stored from wreg
  2374     049E  00F0               	movwf	I2C_Write@data
  2375     049F                     l1222:
  2376                           
  2377                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  2378     049F  0870               	movf	I2C_Write@data,w
  2379     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2380     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2381     04A2  0093               	movwf	19	;volatile
  2382     04A3                     l106:	
  2383                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  2384                           
  2385     04A3  1D8C               	btfss	12,3	;volatile
  2386     04A4  2CA6               	goto	u701
  2387     04A5  2CA7               	goto	u700
  2388     04A6                     u701:
  2389     04A6  2CA3               	goto	l106
  2390     04A7                     u700:
  2391     04A7                     l108:
  2392                           
  2393                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  2394     04A7  118C               	bcf	12,3	;volatile
  2395     04A8                     l1224:
  2396     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  2397     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  2398     04AA  0811               	movf	17,w	;volatile
  2399     04AB                     l109:
  2400     04AB  0008               	return
  2401     04AC                     __end_of_I2C_Write:
  2402                           
  2403                           	psect	text13
  2404     0489                     __ptext13:	
  2405 ;; *************** function _I2C_Stop *****************
  2406 ;; Defined at:
  2407 ;;		line 34 in file "i2c.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		None
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2421 ;;      Params:         0       0       0       0       0
  2422 ;;      Locals:         0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0
  2424 ;;      Totals:         0       0       0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434     0489                     _I2C_Stop:	
  2435                           ;psect for function _I2C_Stop
  2436                           
  2437     0489                     l1234:	
  2438                           ;incstack = 0
  2439                           ; Regs used in _I2C_Stop: []
  2440                           
  2441                           
  2442                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  2443     0489  1683               	bsf	3,5	;RP0=1, select bank1
  2444     048A  1303               	bcf	3,6	;RP1=0, select bank1
  2445     048B  1511               	bsf	17,2	;volatile
  2446     048C                     l82:	
  2447                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  2448                           
  2449     048C  1283               	bcf	3,5	;RP0=0, select bank0
  2450     048D  1D8C               	btfss	12,3	;volatile
  2451     048E  2C90               	goto	u721
  2452     048F  2C91               	goto	u720
  2453     0490                     u721:
  2454     0490  2C8C               	goto	l82
  2455     0491                     u720:
  2456     0491                     l84:
  2457                           
  2458                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  2459     0491  118C               	bcf	12,3	;volatile
  2460     0492                     l85:
  2461     0492  0008               	return
  2462     0493                     __end_of_I2C_Stop:
  2463                           
  2464                           	psect	text14
  2465     047F                     __ptext14:	
  2466 ;; *************** function _I2C_Start *****************
  2467 ;; Defined at:
  2468 ;;		line 27 in file "i2c.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		None
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495     047F                     _I2C_Start:	
  2496                           ;psect for function _I2C_Start
  2497                           
  2498     047F                     l1220:	
  2499                           ;incstack = 0
  2500                           ; Regs used in _I2C_Start: []
  2501                           
  2502                           
  2503                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  2504     047F  1683               	bsf	3,5	;RP0=1, select bank1
  2505     0480  1303               	bcf	3,6	;RP1=0, select bank1
  2506     0481  1411               	bsf	17,0	;volatile
  2507     0482                     l76:	
  2508                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  2509                           
  2510     0482  1283               	bcf	3,5	;RP0=0, select bank0
  2511     0483  1D8C               	btfss	12,3	;volatile
  2512     0484  2C86               	goto	u691
  2513     0485  2C87               	goto	u690
  2514     0486                     u691:
  2515     0486  2C82               	goto	l76
  2516     0487                     u690:
  2517     0487                     l78:
  2518                           
  2519                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  2520     0487  118C               	bcf	12,3	;volatile
  2521     0488                     l79:
  2522     0488  0008               	return
  2523     0489                     __end_of_I2C_Start:
  2524                           
  2525                           	psect	text15
  2526     0493                     __ptext15:	
  2527 ;; *************** function _I2C_Read *****************
  2528 ;; Defined at:
  2529 ;;		line 73 in file "i2c.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      unsigned char 
  2536 ;; Registers used:
  2537 ;;		wreg
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0
  2546 ;;      Totals:         0       0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556     0493                     _I2C_Read:	
  2557                           ;psect for function _I2C_Read
  2558                           
  2559     0493                     l1228:	
  2560                           ;incstack = 0
  2561                           ; Regs used in _I2C_Read: [wreg]
  2562                           
  2563                           
  2564                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
  2565     0493  1683               	bsf	3,5	;RP0=1, select bank1
  2566     0494  1303               	bcf	3,6	;RP1=0, select bank1
  2567     0495  1591               	bsf	17,3	;volatile
  2568     0496                     l112:	
  2569                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
  2570                           
  2571     0496  1283               	bcf	3,5	;RP0=0, select bank0
  2572     0497  1D8C               	btfss	12,3	;volatile
  2573     0498  2C9A               	goto	u711
  2574     0499  2C9B               	goto	u710
  2575     049A                     u711:
  2576     049A  2C96               	goto	l112
  2577     049B                     u710:
  2578     049B                     l114:
  2579                           
  2580                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
  2581     049B  118C               	bcf	12,3	;volatile
  2582     049C                     l1230:
  2583                           
  2584                           ;i2c.c: 78:     return SSPBUF;
  2585     049C  0813               	movf	19,w	;volatile
  2586     049D                     l115:
  2587     049D  0008               	return
  2588     049E                     __end_of_I2C_Read:
  2589     007E                     btemp	set	126	;btemp
  2590     007E                     wtemp0	set	126
  2591                           
  2592                           	psect	idloc
  2593                           
  2594                           ;Config register IDLOC0 @ 0x2000
  2595                           ;	unspecified, using default values
  2596     2000                     	org	8192
  2597     2000  3FFF               	dw	16383
  2598                           
  2599                           ;Config register IDLOC1 @ 0x2001
  2600                           ;	unspecified, using default values
  2601     2001                     	org	8193
  2602     2001  3FFF               	dw	16383
  2603                           
  2604                           ;Config register IDLOC2 @ 0x2002
  2605                           ;	unspecified, using default values
  2606     2002                     	org	8194
  2607     2002  3FFF               	dw	16383
  2608                           
  2609                           ;Config register IDLOC3 @ 0x2003
  2610                           ;	unspecified, using default values
  2611     2003                     	org	8195
  2612     2003  3FFF               	dw	16383
  2613                           
  2614                           	psect	config
  2615                           
  2616                           ;Config register CONFIG1 @ 0x2007
  2617                           ;	Oscillator Selection bits
  2618                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2619                           ;	Watchdog Timer Enable bit
  2620                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2621                           ;	Power-up Timer Enable bit
  2622                           ;	PWRTE = OFF, PWRT disabled
  2623                           ;	RE3/MCLR pin function select bit
  2624                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2625                           ;	Code Protection bit
  2626                           ;	CP = OFF, Program memory code protection is disabled
  2627                           ;	Data Code Protection bit
  2628                           ;	CPD = OFF, Data memory code protection is disabled
  2629                           ;	Brown Out Reset Selection bits
  2630                           ;	BOREN = OFF, BOR disabled
  2631                           ;	Internal External Switchover bit
  2632                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2633                           ;	Fail-Safe Clock Monitor Enabled bit
  2634                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2635                           ;	Low Voltage Programming Enable bit
  2636                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2637                           ;	In-Circuit Debugger Mode bit
  2638                           ;	DEBUG = 0x1, unprogramme  2639     2007                     	org	8199
  2640     2007  20D4               	dw	8404
  2641                           
  2642                           ;Config register CONFIG2 @ 0x2008
  2643                           ;	Brown-out Reset Selection bit
  2644                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2645                           ;	Flash Program Memory Self Write Enable bits
  2646                           ;	WRT = OFF, Write protection off
  2647     2008                     	org	8200
  2648     2008  3FFF               	dw	16383

Data Sizes:
    Strings     9
    Constant    10
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Init_Master
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2456
                                             13 BANK0      2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      66
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _I2C_Init_Master
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 09 22:43:34 2023

                       pc 0002                        l51 04C4                        l73 04FD  
                      l82 048C                        l76 0482                        l84 0491  
                      l85 0492                        l78 0487                        l79 0488  
                      fsr 0004                       l112 0496                       l114 049B  
                     l106 04A3                       l130 051E                       l115 049D  
                     l108 04A7                       l132 051F                       l124 0507  
                     l109 04AB                       l125 050A                       l126 0510  
                     l150 0554                       l127 0511                       l135 04DE  
                     l128 0517                       l144 065A                       l129 0518  
                     l147 06B8                       l156 05D0                       l272 07F2  
                     l548 0614                       l558 058E                       u420 0503  
                     u421 0502                       u430 050E                       u510 05EB  
                     u431 050D                       u511 05EA                       u440 0515  
                     u441 0514                       u505 05DD                       u450 051C  
                     u530 05FC                       u610 058A                       u451 051B  
                     u531 05FB                       u611 0589                       u700 04A7  
                     u620 061B                       u460 04F3                       u701 04A6  
                     u621 061A                       u461 04F2                       u525 05EC  
                     u605 057E                       u710 049B                       u470 04FB  
                     u550 0610                       u711 049A                       u471 04FA  
                     u551 060F                       u535 05F8                       u720 0491  
                     u640 063E                       u560 055B                       u721 0490  
                     u641 063D                       u545 0604                       u561 055A  
                     u490 05D9                       u730 0725                       u635 0621  
                     u491 05D8                       u731 0724                       u660 059C  
                     u580 056D                       u740 075D                       u485 052D  
                     u581 056C                       u741 075C                       u670 05BE  
                     u590 0577                       u750 0783                       u655 0644  
                     u591 0576                       u575 055F                       u751 0782  
                     u807 06F0                       u680 05D0                       u760 078E  
                     u817 053D                       u681 05CF                       u761 078D  
                     u690 0487                       u770 0794                       u691 0486  
                     u827 054E                       u595 0573                       u771 0793  
                     u755 077F                       u780 07DE                       u837 0665  
                     u781 07DD                       u790 07EE                       u847 0674  
                     u791 07ED                       u857 0681                       u867 06B5  
                     u877 04D6                       fsr0 0004                       indf 0000  
                    l1100 0521                      l1110 0540                      l1102 0527  
                    l1200 0631                      l1112 0543                      l1104 052A  
                    l1120 05D1                      l1210 0654                      l1202 0638  
                    l1114 0549                      l1106 0538                      l1130 05E7  
                    l1122 05D3                      l1220 047F                      l1204 063E  
                    l1116 054C                      l1108 053B                      l1212 058F  
                    l1140 060A                      l1132 05EB                      l1124 05D9  
                    l1300 06CB                      l1230 049C                      l1222 049F  
                    l1070 050E                      l1206 064B                      l1118 0551  
                    l1214 0592                      l1134 05FC                      l1126 05DC  
                    l1142 0610                      l1150 055E                      l1310 06EC  
                    l1302 06D4                      l1224 04A8                      l1072 0515  
                    l1208 064E                      l1216 05AE                      l1080 04EA  
                    l1136 0602                      l1128 05E3                      l1160 057D  
                    l1152 0565                      l1240 0725                      l1312 06F3  
                    l1304 06D9                      l1234 0489                      l1074 051C  
                    l1066 04FF                      l1090 04C6                      l1218 05B4  
                    l1082 04ED                      l1170 04B8                      l1138 0603  
                    l1162 0584                      l1154 0569                      l1146 0555  
                    l1250 074D                      l1242 072A                      l1314 06FB  
                    l1306 06DF                      l1228 0493                      l1068 0503  
                    l1092 04C9                      l1180 065B                      l1084 04F3  
                    l1076 04E0                      l1172 04BB                      l1156 056D  
                    l1148 055B                      l1164 058A                      l1260 0766  
                    l1252 0755                      l1244 072F                      l1236 071C  
                    l1316 070C                      l1308 06E7                      l1094 04CF  
                    l1190 06B3                      l1182 0661                      l1086 04F6  
                    l1078 04E4                      l1174 04BC                      l1158 0577  
                    l1270 0784                      l1254 0759                      l1238 071F  
                    l1096 04D2                      l1184 066A                      l1192 0616  
                    l1088 04FB                      l1176 04BD                      l1168 04AC  
                    l1280 07A0                      l1272 078E                      l1256 075D  
                    l1344 0742                      l1248 0730                      l1098 04DB  
                    l1186 0679                      l1194 061B                      l1178 04BE  
                    l1282 07CC                      l1274 0794                      l1266 0768  
                    l1258 0761                      l1290 07EE                      l1188 067F  
                    l1196 0628                      l1284 07D1                      l1276 0799  
                    l1198 062B                      l1286 07D5                      l1278 079D  
                    l1288 07DE                      l1298 06B9                      STR_1 001D  
                    STR_2 0022         ?_Lcd_Write_String 0075                      _main 06B9  
        __end_of_I2C_Read 049E                      btemp 007E          __end_of_I2C_Stop 0493  
                    start 0000        ??_Lcd_Write_String 0077          ?_I2C_Init_Master 0070  
         __end_of_Lcd_Cmd 04DF                     ?_main 0070                     _ANSEL 0188  
         __end_of___lwdiv 0615           __end_of___lwmod 058F                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISD 0088  
         __end_of_dpowers 001D                     _setup 04AC         __end_of_I2C_Start 0489  
       __end_of_I2C_Write 04AC                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07F3          __end_of_Lcd_Init 06B9  
        __end_of_Lcd_Port 0520           __initialization 07F3              __end_of_main 0719  
                  ??_main 0042                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013                 ??___lwdiv 0074                 ??___lwmod 007C  
                  _buffer 0021                 ?_I2C_Read 0070                 ?_I2C_Stop 0070  
               ??_sprintf 0038           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC  
          __pcstackCOMMON 0070             __end_of_setup 04C5            _Lcd_Set_Cursor 0615  
              ??_I2C_Read 0070                ??_I2C_Stop 0070                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0071                __pbssBANK0 0020  
              __pmaintext 06B9    __end_of_Lcd_Set_Cursor 065B                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 0003            _Lcd_Write_Char 0520                   _Lcd_Cmd 04C5  
               _I2C_Start 047F                 _I2C_Write 049E                   ___lwdiv 05D1  
                 ___lwmod 0555           ?_Lcd_Set_Cursor 0074                   __ptext1 0719  
                 __ptext2 0555                   __ptext3 05D1                   __ptext4 04AC  
                 __ptext5 04DF                   __ptext6 058F                   __ptext7 0520  
                 __ptext8 0615                   __ptext9 065B                   _dpowers 0013  
                 _sprintf 0719                   clrloop0 0478    __end_of_Lcd_Write_Char 0555  
    end_of_initialization 07FC                ?_I2C_Start 0070                ?_I2C_Write 0070  
               Lcd_Port@a 0070                 _PORTBbits 0006                 _PORTDbits 0008  
               _TRISCbits 0087           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A          _Lcd_Write_String 058F       start_initialization 07F3  
       ??_I2C_Init_Master 0070     I2C_Init_Master@sp_i2c 0070               ??_I2C_Start 0070  
             ??_I2C_Write 0070           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___latbits 0002             __pcstackBANK0 0035                  ?_Lcd_Cmd 0070  
             sprintf@flag 003C               sprintf@prec 003D          ___lwdiv@dividend 0072  
        ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070                  ?___lwmod 0078  
               __pstrings 0003                  _I2C_Read 0493                  _I2C_Stop 0489  
        ___lwdiv@quotient 0075                  ?_sprintf 0035                 clear_ram0 0477  
                Lcd_Cmd@a 0073                  _PIR1bits 000C                 _valor_ADC 0020  
             __stringbase 0012          ??_Lcd_Write_Char 0071                  _Lcd_Init 065B  
                _Lcd_Port 04FE  __end_of_Lcd_Write_String 05D1           _I2C_Init_Master 04DF  
           I2C_Write@data 0070        __end_of__stringtab 0013                sprintf@val 003E  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 04C5  
                __ptext11 04FE                  __ptext12 049E                  __ptext13 0489  
                __ptext14 047F                  __ptext15 0493        Lcd_Write_Char@temp 0072  
               sprintf@ap 003B                 sprintf@sp 0040          ___lwmod@dividend 007A  
 __end_of_I2C_Init_Master 04FE                 stringcode 000D                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0079                  sprintf@c 0041                  sprintf@f 0035  
         ___lwmod@divisor 0078           ___lwmod@counter 007D                  stringdir 000D  
                stringtab 0003               _SSPCON2bits 0091  
