

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 00:54:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Version 2.40
    45                           ; Generated 17/11/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000D                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0014                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     0087                     	;# 
   118     0088                     	;# 
   119     0089                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     008E                     	;# 
   123     008F                     	;# 
   124     0090                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0095                     	;# 
   132     0096                     	;# 
   133     0097                     	;# 
   134     0098                     	;# 
   135     0099                     	;# 
   136     009A                     	;# 
   137     009B                     	;# 
   138     009C                     	;# 
   139     009D                     	;# 
   140     009E                     	;# 
   141     009F                     	;# 
   142     0105                     	;# 
   143     0107                     	;# 
   144     0108                     	;# 
   145     0109                     	;# 
   146     010C                     	;# 
   147     010C                     	;# 
   148     010D                     	;# 
   149     010E                     	;# 
   150     010F                     	;# 
   151     0185                     	;# 
   152     0187                     	;# 
   153     0188                     	;# 
   154     0189                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     0008                     	;# 
   166     0009                     	;# 
   167     000A                     	;# 
   168     000B                     	;# 
   169     000C                     	;# 
   170     000D                     	;# 
   171     000E                     	;# 
   172     000E                     	;# 
   173     000F                     	;# 
   174     0010                     	;# 
   175     0011                     	;# 
   176     0012                     	;# 
   177     0013                     	;# 
   178     0014                     	;# 
   179     0015                     	;# 
   180     0015                     	;# 
   181     0016                     	;# 
   182     0017                     	;# 
   183     0018                     	;# 
   184     0019                     	;# 
   185     001A                     	;# 
   186     001B                     	;# 
   187     001B                     	;# 
   188     001C                     	;# 
   189     001D                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     0087                     	;# 
   196     0088                     	;# 
   197     0089                     	;# 
   198     008C                     	;# 
   199     008D                     	;# 
   200     008E                     	;# 
   201     008F                     	;# 
   202     0090                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0094                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0098                     	;# 
   213     0099                     	;# 
   214     009A                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     0105                     	;# 
   221     0107                     	;# 
   222     0108                     	;# 
   223     0109                     	;# 
   224     010C                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     0185                     	;# 
   230     0187                     	;# 
   231     0188                     	;# 
   232     0189                     	;# 
   233     018C                     	;# 
   234     018D                     	;# 
   235     0000                     	;# 
   236     0001                     	;# 
   237     0002                     	;# 
   238     0003                     	;# 
   239     0004                     	;# 
   240     0005                     	;# 
   241     0006                     	;# 
   242     0007                     	;# 
   243     0008                     	;# 
   244     0009                     	;# 
   245     000A                     	;# 
   246     000B                     	;# 
   247     000C                     	;# 
   248     000D                     	;# 
   249     000E                     	;# 
   250     000E                     	;# 
   251     000F                     	;# 
   252     0010                     	;# 
   253     0011                     	;# 
   254     0012                     	;# 
   255     0013                     	;# 
   256     0014                     	;# 
   257     0015                     	;# 
   258     0015                     	;# 
   259     0016                     	;# 
   260     0017                     	;# 
   261     0018                     	;# 
   262     0019                     	;# 
   263     001A                     	;# 
   264     001B                     	;# 
   265     001B                     	;# 
   266     001C                     	;# 
   267     001D                     	;# 
   268     001E                     	;# 
   269     001F                     	;# 
   270     0081                     	;# 
   271     0085                     	;# 
   272     0086                     	;# 
   273     0087                     	;# 
   274     0088                     	;# 
   275     0089                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     008F                     	;# 
   280     0090                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0095                     	;# 
   288     0096                     	;# 
   289     0097                     	;# 
   290     0098                     	;# 
   291     0099                     	;# 
   292     009A                     	;# 
   293     009B                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     0105                     	;# 
   299     0107                     	;# 
   300     0108                     	;# 
   301     0109                     	;# 
   302     010C                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     010F                     	;# 
   307     0185                     	;# 
   308     0187                     	;# 
   309     0188                     	;# 
   310     0189                     	;# 
   311     018C                     	;# 
   312     018D                     	;# 
   313     0000                     	;# 
   314     0001                     	;# 
   315     0002                     	;# 
   316     0003                     	;# 
   317     0004                     	;# 
   318     0005                     	;# 
   319     0006                     	;# 
   320     0007                     	;# 
   321     0008                     	;# 
   322     0009                     	;# 
   323     000A                     	;# 
   324     000B                     	;# 
   325     000C                     	;# 
   326     000D                     	;# 
   327     000E                     	;# 
   328     000E                     	;# 
   329     000F                     	;# 
   330     0010                     	;# 
   331     0011                     	;# 
   332     0012                     	;# 
   333     0013                     	;# 
   334     0014                     	;# 
   335     0015                     	;# 
   336     0015                     	;# 
   337     0016                     	;# 
   338     0017                     	;# 
   339     0018                     	;# 
   340     0019                     	;# 
   341     001A                     	;# 
   342     001B                     	;# 
   343     001B                     	;# 
   344     001C                     	;# 
   345     001D                     	;# 
   346     001E                     	;# 
   347     001F                     	;# 
   348     0081                     	;# 
   349     0085                     	;# 
   350     0086                     	;# 
   351     0087                     	;# 
   352     0088                     	;# 
   353     0089                     	;# 
   354     008C                     	;# 
   355     008D                     	;# 
   356     008E                     	;# 
   357     008F                     	;# 
   358     0090                     	;# 
   359     0091                     	;# 
   360     0092                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0094                     	;# 
   365     0095                     	;# 
   366     0096                     	;# 
   367     0097                     	;# 
   368     0098                     	;# 
   369     0099                     	;# 
   370     009A                     	;# 
   371     009B                     	;# 
   372     009C                     	;# 
   373     009D                     	;# 
   374     009E                     	;# 
   375     009F                     	;# 
   376     0105                     	;# 
   377     0107                     	;# 
   378     0108                     	;# 
   379     0109                     	;# 
   380     010C                     	;# 
   381     010C                     	;# 
   382     010D                     	;# 
   383     010E                     	;# 
   384     010F                     	;# 
   385     0185                     	;# 
   386     0187                     	;# 
   387     0188                     	;# 
   388     0189                     	;# 
   389     018C                     	;# 
   390     018D                     	;# 
   391     0000                     	;# 
   392     0001                     	;# 
   393     0002                     	;# 
   394     0003                     	;# 
   395     0004                     	;# 
   396     0005                     	;# 
   397     0006                     	;# 
   398     0007                     	;# 
   399     0008                     	;# 
   400     0009                     	;# 
   401     000A                     	;# 
   402     000B                     	;# 
   403     000C                     	;# 
   404     000D                     	;# 
   405     000E                     	;# 
   406     000E                     	;# 
   407     000F                     	;# 
   408     0010                     	;# 
   409     0011                     	;# 
   410     0012                     	;# 
   411     0013                     	;# 
   412     0014                     	;# 
   413     0015                     	;# 
   414     0015                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001B                     	;# 
   422     001C                     	;# 
   423     001D                     	;# 
   424     001E                     	;# 
   425     001F                     	;# 
   426     0081                     	;# 
   427     0085                     	;# 
   428     0086                     	;# 
   429     0087                     	;# 
   430     0088                     	;# 
   431     0089                     	;# 
   432     008C                     	;# 
   433     008D                     	;# 
   434     008E                     	;# 
   435     008F                     	;# 
   436     0090                     	;# 
   437     0091                     	;# 
   438     0092                     	;# 
   439     0093                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0094                     	;# 
   443     0095                     	;# 
   444     0096                     	;# 
   445     0097                     	;# 
   446     0098                     	;# 
   447     0099                     	;# 
   448     009A                     	;# 
   449     009B                     	;# 
   450     009C                     	;# 
   451     009D                     	;# 
   452     009E                     	;# 
   453     009F                     	;# 
   454     0105                     	;# 
   455     0107                     	;# 
   456     0108                     	;# 
   457     0109                     	;# 
   458     010C                     	;# 
   459     010C                     	;# 
   460     010D                     	;# 
   461     010E                     	;# 
   462     010F                     	;# 
   463     0185                     	;# 
   464     0187                     	;# 
   465     0188                     	;# 
   466     0189                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469                           
   470                           	psect	idataBANK1
   471     00CC                     __pidataBANK1:
   472                           
   473                           ;initializer for _dw
   474     00CC  3444               	retlw	68
   475     00CD  346F               	retlw	111
   476     00CE  346D               	retlw	109
   477     00CF  3469               	retlw	105
   478     00D0  346E               	retlw	110
   479     00D1  3467               	retlw	103
   480     00D2  346F               	retlw	111
   481     00D3  3400               	retlw	0
   482     00D4  3400               	retlw	0
   483     00D5  3400               	retlw	0
   484     00D6  3400               	retlw	0
   485     00D7  344C               	retlw	76
   486     00D8  3475               	retlw	117
   487     00D9  346E               	retlw	110
   488     00DA  3465               	retlw	101
   489     00DB  3473               	retlw	115
   490     00DC  3400               	retlw	0
   491     00DD  3400               	retlw	0
   492     00DE  3400               	retlw	0
   493     00DF  3400               	retlw	0
   494     00E0  3400               	retlw	0
   495     00E1  3400               	retlw	0
   496     00E2  344D               	retlw	77
   497     00E3  3461               	retlw	97
   498     00E4  3472               	retlw	114
   499     00E5  3474               	retlw	116
   500     00E6  3465               	retlw	101
   501     00E7  3473               	retlw	115
   502     00E8  3400               	retlw	0
   503     00E9  3400               	retlw	0
   504     00EA  3400               	retlw	0
   505     00EB  3400               	retlw	0
   506     00EC  3400               	retlw	0
   507     00ED  344D               	retlw	77
   508     00EE  3469               	retlw	105
   509     00EF  3465               	retlw	101
   510     00F0  3472               	retlw	114
   511     00F1  3463               	retlw	99
   512     00F2  346F               	retlw	111
   513     00F3  346C               	retlw	108
   514     00F4  3465               	retlw	101
   515     00F5  3473               	retlw	115
   516     00F6  3400               	retlw	0
   517     00F7  3400               	retlw	0
   518     00F8  344A               	retlw	74
   519     00F9  3475               	retlw	117
   520     00FA  3465               	retlw	101
   521     00FB  3476               	retlw	118
   522     00FC  3465               	retlw	101
   523     00FD  3473               	retlw	115
   524     00FE  3400               	retlw	0
   525     00FF  3400               	retlw	0
   526     0100  3400               	retlw	0
   527     0101  3400               	retlw	0
   528     0102  3400               	retlw	0
   529     0103  3456               	retlw	86
   530     0104  3469               	retlw	105
   531     0105  3465               	retlw	101
   532     0106  3472               	retlw	114
   533     0107  346E               	retlw	110
   534     0108  3465               	retlw	101
   535     0109  3473               	retlw	115
   536     010A  3400               	retlw	0
   537     010B  3400               	retlw	0
   538     010C  3400               	retlw	0
   539     010D  3400               	retlw	0
   540     010E  3453               	retlw	83
   541     010F  3461               	retlw	97
   542     0110  3462               	retlw	98
   543     0111  3461               	retlw	97
   544     0112  3464               	retlw	100
   545     0113  346F               	retlw	111
   546     0114  3400               	retlw	0
   547     0115  3400               	retlw	0
   548     0116  3400               	retlw	0
   549     0117  3400               	retlw	0
   550     0118  3400               	retlw	0
   551                           
   552                           	psect	strings
   553     0003                     __pstrings:
   554     0003                     stringtab:
   555     0003                     __stringtab:
   556                           
   557                           ;	String table - string pointers are 1 byte each
   558     0003  1BFF               	btfsc	btemp+1,7
   559     0004  280D               	ljmp	stringcode
   560     0005  1383               	bcf	3,7
   561     0006  187F               	btfsc	btemp+1,0
   562     0007  1783               	bsf	3,7
   563     0008  0800               	movf	0,w
   564     0009  0A84               	incf	4,f
   565     000A  1903               	skipnz
   566     000B  0AFF               	incf	btemp+1,f
   567     000C  0008               	return
   568     000D                     stringcode:
   569     000D                     stringdir:
   570     000D  3000               	movlw	high stringdir
   571     000E  008A               	movwf	10
   572     000F  0804               	movf	4,w
   573     0010  0A84               	incf	4,f
   574     0011  0782               	addwf	2,f
   575     0012                     __stringbase:
   576     0012  3400               	retlw	0
   577     0013                     __end_of__stringtab:
   578     0013                     _dpowers:
   579     0013  3401               	retlw	1
   580     0014  3400               	retlw	0
   581     0015  340A               	retlw	10
   582     0016  3400               	retlw	0
   583     0017  3464               	retlw	100
   584     0018  3400               	retlw	0
   585     0019  34E8               	retlw	232
   586     001A  3403               	retlw	3
   587     001B  3410               	retlw	16
   588     001C  3427               	retlw	39
   589     001D                     __end_of_dpowers:
   590     0008                     _PORTDbits	set	8
   591     0006                     _PORTBbits	set	6
   592     0013                     _SSPBUF	set	19
   593     000C                     _PIR1bits	set	12
   594     0014                     _SSPCON	set	20
   595     0005                     _PORTA	set	5
   596     0008                     _PORTD	set	8
   597     0006                     _PORTB	set	6
   598     0005                     _PORTAbits	set	5
   599     0091                     _SSPCON2bits	set	145
   600     0093                     _SSPADD	set	147
   601     0091                     _SSPCON2	set	145
   602     0094                     _SSPSTAT	set	148
   603     0087                     _TRISCbits	set	135
   604     008F                     _OSCCONbits	set	143
   605     0085                     _TRISA	set	133
   606     0088                     _TRISD	set	136
   607     0086                     _TRISB	set	134
   608     0189                     _ANSELH	set	393
   609     001D                     STR_11:
   610     001D  346D               	retlw	109	;'m'
   611     001E  3469               	retlw	105	;'i'
   612     001F  346E               	retlw	110	;'n'
   613     0020  3475               	retlw	117	;'u'
   614     0021  3474               	retlw	116	;'t'
   615     0022  346F               	retlw	111	;'o'
   616     0023  3473               	retlw	115	;'s'
   617     0024  3475               	retlw	117	;'u'
   618     0025  3474               	retlw	116	;'t'
   619     0026  346F               	retlw	111	;'o'
   620     0027  343A               	retlw	58	;':'
   621     0028  3420               	retlw	32	;' '
   622     0029  3425               	retlw	37	;'%'
   623     002A  3430               	retlw	48	;'0'
   624     002B  3432               	retlw	50	;'2'
   625     002C  3475               	retlw	117	;'u'
   626     002D  3400               	retlw	0
   627     002E                     STR_4:
   628     002E  3425               	retlw	37	;'%'
   629     002F  3430               	retlw	48	;'0'
   630     0030  3432               	retlw	50	;'2'
   631     0031  3475               	retlw	117	;'u'
   632     0032  342F               	retlw	47	;'/'
   633     0033  3425               	retlw	37	;'%'
   634     0034  3430               	retlw	48	;'0'
   635     0035  3432               	retlw	50	;'2'
   636     0036  3475               	retlw	117	;'u'
   637     0037  342F               	retlw	47	;'/'
   638     0038  3432               	retlw	50	;'2'
   639     0039  3430               	retlw	48	;'0'
   640     003A  3425               	retlw	37	;'%'
   641     003B  3430               	retlw	48	;'0'
   642     003C  3432               	retlw	50	;'2'
   643     003D  3475               	retlw	117	;'u'
   644     003E  3400               	retlw	0
   645     003F                     STR_8:
   646     003F  3444               	retlw	68	;'D'
   647     0040  3469               	retlw	105	;'i'
   648     0041  3461               	retlw	97	;'a'
   649     0042  3420               	retlw	32	;' '
   650     0043  3473               	retlw	115	;'s'
   651     0044  3465               	retlw	101	;'e'
   652     0045  346D               	retlw	109	;'m'
   653     0046  3461               	retlw	97	;'a'
   654     0047  346E               	retlw	110	;'n'
   655     0048  3461               	retlw	97	;'a'
   656     0049  343A               	retlw	58	;':'
   657     004A  3420               	retlw	32	;' '
   658     004B  3425               	retlw	37	;'%'
   659     004C  3475               	retlw	117	;'u'
   660     004D  3400               	retlw	0
   661     004E                     STR_3:
   662     004E  3425               	retlw	37	;'%'
   663     004F  3430               	retlw	48	;'0'
   664     0050  3432               	retlw	50	;'2'
   665     0051  3475               	retlw	117	;'u'
   666     0052  343A               	retlw	58	;':'
   667     0053  3425               	retlw	37	;'%'
   668     0054  3430               	retlw	48	;'0'
   669     0055  3432               	retlw	50	;'2'
   670     0056  3475               	retlw	117	;'u'
   671     0057  343A               	retlw	58	;':'
   672     0058  3425               	retlw	37	;'%'
   673     0059  3430               	retlw	48	;'0'
   674     005A  3432               	retlw	50	;'2'
   675     005B  3475               	retlw	117	;'u'
   676     005C  3400               	retlw	0
   677     005D                     STR_12:
   678     005D  3453               	retlw	83	;'S'
   679     005E  3465               	retlw	101	;'e'
   680     005F  3467               	retlw	103	;'g'
   681     0060  3475               	retlw	117	;'u'
   682     0061  346E               	retlw	110	;'n'
   683     0062  3464               	retlw	100	;'d'
   684     0063  346F               	retlw	111	;'o'
   685     0064  343A               	retlw	58	;':'
   686     0065  3420               	retlw	32	;' '
   687     0066  3425               	retlw	37	;'%'
   688     0067  3430               	retlw	48	;'0'
   689     0068  3432               	retlw	50	;'2'
   690     0069  3475               	retlw	117	;'u'
   691     006A  3400               	retlw	0
   692     006B                     STR_10:
   693     006B  3448               	retlw	72	;'H'
   694     006C  346F               	retlw	111	;'o'
   695     006D  3472               	retlw	114	;'r'
   696     006E  3461               	retlw	97	;'a'
   697     006F  343A               	retlw	58	;':'
   698     0070  3420               	retlw	32	;' '
   699     0071  3425               	retlw	37	;'%'
   700     0072  3430               	retlw	48	;'0'
   701     0073  3432               	retlw	50	;'2'
   702     0074  3475               	retlw	117	;'u'
   703     0075  3400               	retlw	0
   704     0076                     STR_7:
   705     0076  3441               	retlw	65	;'A'
   706     0077  344E               	retlw	78	;'N'
   707     0078  344F               	retlw	79	;'O'
   708     0079  343A               	retlw	58	;':'
   709     007A  3420               	retlw	32	;' '
   710     007B  3425               	retlw	37	;'%'
   711     007C  3430               	retlw	48	;'0'
   712     007D  3432               	retlw	50	;'2'
   713     007E  3475               	retlw	117	;'u'
   714     007F  3400               	retlw	0
   715     0080                     STR_5:
   716     0080  3444               	retlw	68	;'D'
   717     0081  3469               	retlw	105	;'i'
   718     0082  3461               	retlw	97	;'a'
   719     0083  343A               	retlw	58	;':'
   720     0084  3420               	retlw	32	;' '
   721     0085  3425               	retlw	37	;'%'
   722     0086  3430               	retlw	48	;'0'
   723     0087  3432               	retlw	50	;'2'
   724     0088  3475               	retlw	117	;'u'
   725     0089  3400               	retlw	0
   726     008A                     STR_6:
   727     008A  344D               	retlw	77	;'M'
   728     008B  3465               	retlw	101	;'e'
   729     008C  3473               	retlw	115	;'s'
   730     008D  343A               	retlw	58	;':'
   731     008E  3420               	retlw	32	;' '
   732     008F  3425               	retlw	37	;'%'
   733     0090  3430               	retlw	48	;'0'
   734     0091  3432               	retlw	50	;'2'
   735     0092  3475               	retlw	117	;'u'
   736     0093  3400               	retlw	0
   737     0094                     STR_14:
   738     0094  3428               	retlw	40	;'('
   739     0095  346E               	retlw	110	;'n'
   740     0096  3475               	retlw	117	;'u'
   741     0097  346C               	retlw	108	;'l'
   742     0098  346C               	retlw	108	;'l'
   743     0099  3429               	retlw	41	;')'
   744     009A  3400               	retlw	0
   745     009B                     STR_9:
   746     009B  3425               	retlw	37	;'%'
   747     009C  3473               	retlw	115	;'s'
   748     009D  3420               	retlw	32	;' '
   749     009E  3420               	retlw	32	;' '
   750     009F  3420               	retlw	32	;' '
   751     00A0  3420               	retlw	32	;' '
   752     00A1  3400               	retlw	0
   753     00A2                     STR_1:
   754     00A2  3441               	retlw	65	;'A'
   755     00A3  3444               	retlw	68	;'D'
   756     00A4  3443               	retlw	67	;'C'
   757     00A5  343A               	retlw	58	;':'
   758     00A6  3400               	retlw	0
   759     00A7                     STR_2:
   760     00A7  3425               	retlw	37	;'%'
   761     00A8  3464               	retlw	100	;'d'
   762     00A9  3420               	retlw	32	;' '
   763     00AA  3400               	retlw	0
   764     00AB                     STR_13:
   765     00AB  3425               	retlw	37	;'%'
   766     00AC  3473               	retlw	115	;'s'
   767     00AD  3400               	retlw	0
   768                           
   769                           	psect	cinit
   770     07E6                     start_initialization:	
   771                           ; #config settings
   772                           
   773     07E6                     __initialization:
   774                           
   775                           ; Initialize objects allocated to BANK1
   776     07E6  1383               	bcf	3,7	;select IRP bank0
   777     07E7  30ED               	movlw	low (__pdataBANK1+77)
   778     07E8  00FD               	movwf	btemp+-1
   779     07E9  3000               	movlw	high __pidataBANK1
   780     07EA  00FE               	movwf	btemp
   781     07EB  30CC               	movlw	low __pidataBANK1
   782     07EC  00FF               	movwf	btemp+1
   783     07ED  30A0               	movlw	low __pdataBANK1
   784     07EE  0084               	movwf	4
   785     07EF  120A  158A  255B  120A  118A  	fcall	init_ram0
   786                           
   787                           ; Clear objects allocated to BANK0
   788     07F4  3020               	movlw	low __pbssBANK0
   789     07F5  0084               	movwf	4
   790     07F6  303D               	movlw	low (__pbssBANK0+29)
   791     07F7  120A  158A  24EE  120A  118A  	fcall	clear_ram0
   792     07FC                     end_of_initialization:	
   793                           ;End of C runtime variable initialization code
   794                           
   795     07FC                     __end_of__initialization:
   796     07FC  0183               	clrf	3
   797     07FD  120A  118A  2919   	ljmp	_main	;jump to C main() function
   798                           
   799                           	psect	bssBANK0
   800     0020                     __pbssBANK0:
   801     0020                     _segundos:
   802     0020                     	ds	1
   803     0021                     _minutos:
   804     0021                     	ds	1
   805     0022                     _horas:
   806     0022                     	ds	1
   807     0023                     _dow:
   808     0023                     	ds	1
   809     0024                     _ano:
   810     0024                     	ds	1
   811     0025                     _mes:
   812     0025                     	ds	1
   813     0026                     _dia:
   814     0026                     	ds	1
   815     0027                     _selector:
   816     0027                     	ds	1
   817     0028                     _valor_ADC:
   818     0028                     	ds	1
   819     0029                     _buffer:
   820     0029                     	ds	20
   821                           
   822                           	psect	dataBANK1
   823     00A0                     __pdataBANK1:
   824     00A0                     _dw:
   825     00A0                     	ds	77
   826                           
   827                           	psect	inittext
   828     0D57                     init_fetch0:	
   829                           ;	Called with low address in FSR and high address in W
   830                           
   831     0D57  087E               	movf	btemp,w
   832     0D58  008A               	movwf	10
   833     0D59  087F               	movf	btemp+1,w
   834     0D5A  0082               	movwf	2
   835     0D5B                     init_ram0:	
   836                           ;Called with:
   837                           ;	high address of idata address in btemp 
   838                           ;	low address of idata address in btemp+1 
   839                           ;	low address of data in FSR
   840                           ;	high address + 1 of data in btemp-1
   841                           
   842     0D5B  120A  158A  2557  120A  158A  	fcall	init_fetch0
   843     0D60  0080               	movwf	0
   844     0D61  0A84               	incf	4,f
   845     0D62  0804               	movf	4,w
   846     0D63  067D               	xorwf	btemp+-1,w
   847     0D64  1903               	btfsc	3,2
   848     0D65  3400               	retlw	0
   849     0D66  0AFF               	incf	btemp+1,f
   850     0D67  1903               	btfsc	3,2
   851     0D68  0AFE               	incf	btemp,f
   852     0D69  2D5B               	goto	init_ram0
   853                           
   854                           	psect	clrtext
   855     0CEE                     clear_ram0:	
   856                           ;	Called with FSR containing the base address, and
   857                           ;	W with the last address+1
   858                           
   859     0CEE  0064               	clrwdt	;clear the watchdog before getting into this loop
   860     0CEF                     clrloop0:
   861     0CEF  0180               	clrf	0	;clear RAM location pointed to by FSR
   862     0CF0  0A84               	incf	4,f	;increment pointer
   863     0CF1  0604               	xorwf	4,w	;XOR with final address
   864     0CF2  1903               	btfsc	3,2	;have we reached the end yet?
   865     0CF3  3400               	retlw	0	;all done for this memory range, return
   866     0CF4  0604               	xorwf	4,w	;XOR again to restore value
   867     0CF5  2CEF               	goto	clrloop0	;do the next byte
   868                           
   869                           	psect	cstackCOMMON
   870     0070                     __pcstackCOMMON:
   871     0070                     ?_isdigit:
   872     0070                     ?_setup:	
   873                           ; 1 bit 
   874                           
   875     0070                     ?_Lcd_Init:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ?_I2C_Start:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ??_I2C_Start:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ??_I2C_Write:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ?_I2C_Read:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ??_I2C_Read:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_I2C_Stop:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ??_I2C_Stop:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0070                     ?_Lcd_Clear:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ?_CLK_CONFIG:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ?_I2C_Init_Master:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ??_I2C_Init_Master:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     ?_DS3231_Bcd_Bin:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ??_DS3231_Bcd_Bin:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     ?_DS3231_Read:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ??_isdigit:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ?_main:	
   924                           ; 1 bytes @ 0x0
   925                           
   926     0070                     ?_I2C_Restart:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ??_I2C_Restart:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     ?_I2C_Nack:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0070                     ??_I2C_Nack:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0070                     ?_Lcd_Port:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0070                     ??_Lcd_Port:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0070                     ?_Lcd_Cmd:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0070                     ?_Lcd_Write_Char:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0070                     ?___bmul:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0070                     ?_I2C_Write:	
   954                           ; 1 bytes @ 0x0
   955                           
   956     0070                     ?___wmul:	
   957                           ; 2 bytes @ 0x0
   958                           
   959     0070                     ?___lwdiv:	
   960                           ; 2 bytes @ 0x0
   961                           
   962     0070                     I2C_Init_Master@sp_i2c:	
   963                           ; 2 bytes @ 0x0
   964                           
   965     0070                     I2C_Write@data:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0070                     Lcd_Port@a:	
   969                           ; 1 bytes @ 0x0
   970                           
   971     0070                     ___bmul@multiplicand:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0070                     _isdigit$922:	
   975                           ; 1 bytes @ 0x0
   976                           
   977     0070                     ___wmul@multiplier:	
   978                           ; 1 bytes @ 0x0
   979                           
   980     0070                     ___lwdiv@divisor:	
   981                           ; 2 bytes @ 0x0
   982                           
   983                           
   984                           ; 2 bytes @ 0x0
   985     0070                     	ds	1
   986     0071                     ??_setup:
   987     0071                     ??_DS3231_Read:	
   988                           ; 1 bytes @ 0x1
   989                           
   990     0071                     ??_Lcd_Cmd:	
   991                           ; 1 bytes @ 0x1
   992                           
   993     0071                     ??_Lcd_Write_Char:	
   994                           ; 1 bytes @ 0x1
   995                           
   996     0071                     ??___bmul:	
   997                           ; 1 bytes @ 0x1
   998                           
   999     0071                     DS3231_Read@reg:	
  1000                           ; 1 bytes @ 0x1
  1001                           
  1002     0071                     isdigit@c:	
  1003                           ; 1 bytes @ 0x1
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x1
  1007     0071                     	ds	1
  1008     0072                     Lcd_Write_Char@temp:
  1009     0072                     DS3231_Read@data:	
  1010                           ; 1 bytes @ 0x2
  1011                           
  1012     0072                     DS3231_Bcd_Bin@bcd_value:	
  1013                           ; 1 bytes @ 0x2
  1014                           
  1015     0072                     ___bmul@product:	
  1016                           ; 1 bytes @ 0x2
  1017                           
  1018     0072                     ___wmul@multiplicand:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021     0072                     ___lwdiv@dividend:	
  1022                           ; 2 bytes @ 0x2
  1023                           
  1024                           
  1025                           ; 2 bytes @ 0x2
  1026     0072                     	ds	1
  1027     0073                     Lcd_Cmd@a:
  1028     0073                     Lcd_Write_Char@y:	
  1029                           ; 1 bytes @ 0x3
  1030                           
  1031     0073                     DS3231_Bcd_Bin@temp:	
  1032                           ; 1 bytes @ 0x3
  1033                           
  1034     0073                     ___bmul@multiplier:	
  1035                           ; 1 bytes @ 0x3
  1036                           
  1037                           
  1038                           ; 1 bytes @ 0x3
  1039     0073                     	ds	1
  1040     0074                     ??_Lcd_Init:
  1041     0074                     ??_Lcd_Clear:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044     0074                     ?_DS3231_Get_Date:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047     0074                     ?_DS3231_Get_Time:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050     0074                     ?_Lcd_Set_Cursor:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053     0074                     ??___wmul:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056     0074                     ??___lwdiv:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059     0074                     Lcd_Set_Cursor@b:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062     0074                     Lcd_Write_Char@a:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065     0074                     DS3231_Get_Date@day:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068     0074                     DS3231_Get_Time@hr:	
  1069                           ; 2 bytes @ 0x4
  1070                           
  1071     0074                     ___wmul@product:	
  1072                           ; 2 bytes @ 0x4
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0x4
  1076     0074                     	ds	1
  1077     0075                     ??_Lcd_Set_Cursor:
  1078     0075                     ?_Lcd_Write_String:	
  1079                           ; 1 bytes @ 0x5
  1080                           
  1081     0075                     Lcd_Write_String@a:	
  1082                           ; 1 bytes @ 0x5
  1083                           
  1084     0075                     ___lwdiv@quotient:	
  1085                           ; 2 bytes @ 0x5
  1086                           
  1087                           
  1088                           ; 2 bytes @ 0x5
  1089     0075                     	ds	1
  1090     0076                     Lcd_Set_Cursor@a:
  1091     0076                     DS3231_Get_Date@mth:	
  1092                           ; 1 bytes @ 0x6
  1093                           
  1094     0076                     DS3231_Get_Time@min:	
  1095                           ; 2 bytes @ 0x6
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x6
  1099     0076                     	ds	1
  1100     0077                     ??_Lcd_Write_String:
  1101     0077                     Lcd_Set_Cursor@z:	
  1102                           ; 1 bytes @ 0x7
  1103                           
  1104     0077                     ___lwdiv@counter:	
  1105                           ; 1 bytes @ 0x7
  1106                           
  1107                           
  1108                           ; 1 bytes @ 0x7
  1109     0077                     	ds	1
  1110     0078                     ?___lwmod:
  1111     0078                     Lcd_Set_Cursor@y:	
  1112                           ; 2 bytes @ 0x8
  1113                           
  1114     0078                     DS3231_Get_Date@year:	
  1115                           ; 1 bytes @ 0x8
  1116                           
  1117     0078                     DS3231_Get_Time@sec:	
  1118                           ; 2 bytes @ 0x8
  1119                           
  1120     0078                     ___lwmod@divisor:	
  1121                           ; 2 bytes @ 0x8
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0x8
  1125     0078                     	ds	1
  1126     0079                     Lcd_Set_Cursor@temp:
  1127                           
  1128                           ; 1 bytes @ 0x9
  1129     0079                     	ds	1
  1130     007A                     ??_DS3231_Get_Time:
  1131     007A                     Lcd_Write_String@i:	
  1132                           ; 1 bytes @ 0xA
  1133                           
  1134     007A                     DS3231_Get_Date@dow:	
  1135                           ; 2 bytes @ 0xA
  1136                           
  1137     007A                     ___lwmod@dividend:	
  1138                           ; 2 bytes @ 0xA
  1139                           
  1140                           
  1141                           ; 2 bytes @ 0xA
  1142     007A                     	ds	2
  1143     007C                     ??_DS3231_Get_Date:
  1144     007C                     ??___lwmod:	
  1145                           ; 1 bytes @ 0xC
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0xC
  1149     007C                     	ds	1
  1150     007D                     ___lwmod@counter:
  1151                           
  1152                           ; 1 bytes @ 0xD
  1153     007D                     	ds	1
  1154                           
  1155                           	psect	cstackBANK0
  1156     003D                     __pcstackBANK0:
  1157     003D                     ?_sprintf:
  1158     003D                     sprintf@f:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161                           
  1162                           ; 1 bytes @ 0x0
  1163     003D                     	ds	7
  1164     0044                     ??_sprintf:
  1165                           
  1166                           ; 1 bytes @ 0x7
  1167     0044                     	ds	3
  1168     0047                     sprintf@prec:
  1169                           
  1170                           ; 1 bytes @ 0xA
  1171     0047                     	ds	1
  1172     0048                     sprintf@cp:
  1173                           
  1174                           ; 2 bytes @ 0xB
  1175     0048                     	ds	2
  1176     004A                     sprintf@ap:
  1177                           
  1178                           ; 1 bytes @ 0xD
  1179     004A                     	ds	1
  1180     004B                     sprintf@len:
  1181                           
  1182                           ; 2 bytes @ 0xE
  1183     004B                     	ds	2
  1184     004D                     sprintf@val:
  1185                           
  1186                           ; 2 bytes @ 0x10
  1187     004D                     	ds	2
  1188     004F                     sprintf@flag:
  1189                           
  1190                           ; 1 bytes @ 0x12
  1191     004F                     	ds	1
  1192     0050                     sprintf@c:
  1193                           
  1194                           ; 1 bytes @ 0x13
  1195     0050                     	ds	1
  1196     0051                     sprintf@width:
  1197                           
  1198                           ; 2 bytes @ 0x14
  1199     0051                     	ds	2
  1200     0053                     sprintf@sp:
  1201                           
  1202                           ; 1 bytes @ 0x16
  1203     0053                     	ds	1
  1204     0054                     ??_CLK_CONFIG:
  1205                           
  1206                           ; 1 bytes @ 0x17
  1207     0054                     	ds	3
  1208     0057                     ??_main:
  1209                           
  1210                           ; 1 bytes @ 0x1A
  1211     0057                     	ds	2
  1212                           
  1213                           	psect	maintext
  1214     0119                     __pmaintext:	
  1215 ;;
  1216 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1217 ;;
  1218 ;; *************** function _main *****************
  1219 ;; Defined at:
  1220 ;;		line 68 in file "maestro.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : B00/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0
  1236 ;;      Temps:          0       2       0       0       0
  1237 ;;      Totals:         0       2       0       0       0
  1238 ;;Total ram usage:        2 bytes
  1239 ;; Hardware stack levels required when called: 4
  1240 ;; This function calls:
  1241 ;;		_CLK_CONFIG
  1242 ;;		_I2C_Read
  1243 ;;		_I2C_Start
  1244 ;;		_I2C_Stop
  1245 ;;		_I2C_Write
  1246 ;;		_Lcd_Clear
  1247 ;;		_Lcd_Init
  1248 ;;		_setup
  1249 ;; This function is called by:
  1250 ;;		Startup code after reset
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254     0119                     _main:	
  1255                           ;psect for function _main
  1256                           
  1257     0119                     l2441:	
  1258                           ;incstack = 0
  1259                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1260                           
  1261                           
  1262                           ;maestro.c: 69:     setup();
  1263     0119  120A  118A  20B1  120A  118A  	fcall	_setup
  1264                           
  1265                           ;maestro.c: 70:     Lcd_Init();
  1266     011E  120A  118A  216A  120A  118A  	fcall	_Lcd_Init
  1267     0123                     l2443:
  1268                           
  1269                           ;maestro.c: 73:     {;maestro.c: 75:         I2C_Start();
  1270     0123  120A  158A  2500  120A  118A  	fcall	_I2C_Start
  1271     0128                     l2445:
  1272                           
  1273                           ;maestro.c: 76:         I2C_Write(0x51);
  1274     0128  3051               	movlw	81
  1275     0129  120A  158A  2537  120A  118A  	fcall	_I2C_Write
  1276     012E                     l2447:
  1277                           
  1278                           ;maestro.c: 77:         valor_ADC = I2C_Read();
  1279     012E  120A  158A  251F  120A  118A  	fcall	_I2C_Read
  1280     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1281     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1282     0135  00A8               	movwf	_valor_ADC
  1283     0136                     l2449:
  1284                           
  1285                           ;maestro.c: 78:         I2C_Stop();
  1286     0136  120A  158A  250A  120A  118A  	fcall	_I2C_Stop
  1287     013B                     l2451:
  1288                           
  1289                           ;maestro.c: 79:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1290     013B  3005               	movlw	5
  1291     013C  1283               	bcf	3,5	;RP0=0, select bank0
  1292     013D  1303               	bcf	3,6	;RP1=0, select bank0
  1293     013E  00D7               	movwf	??_main
  1294     013F                     u2397:
  1295     013F  0BD7               	decfsz	??_main,f
  1296     0140  293F               	goto	u2397
  1297     0141  2942               	nop2
  1298     0142                     l2453:
  1299                           
  1300                           ;maestro.c: 81:           if(PORTAbits.RA0 == 1)
  1301     0142  1283               	bcf	3,5	;RP0=0, select bank0
  1302     0143  1303               	bcf	3,6	;RP1=0, select bank0
  1303     0144  1C05               	btfss	5,0	;volatile
  1304     0145  2947               	goto	u2371
  1305     0146  2948               	goto	u2370
  1306     0147                     u2371:
  1307     0147  2961               	goto	l2463
  1308     0148                     u2370:
  1309     0148                     l77:
  1310     0148  1805               	btfsc	5,0	;volatile
  1311     0149  294B               	goto	u2381
  1312     014A  294C               	goto	u2380
  1313     014B                     u2381:
  1314     014B  2948               	goto	l77
  1315     014C                     u2380:
  1316     014C                     l2457:
  1317                           
  1318                           ;maestro.c: 84:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1319     014C  3034               	movlw	52
  1320     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1321     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1322     014F  00D8               	movwf	??_main+1
  1323     0150  30F1               	movlw	241
  1324     0151  00D7               	movwf	??_main
  1325     0152                     u2407:
  1326     0152  0BD7               	decfsz	??_main,f
  1327     0153  2952               	goto	u2407
  1328     0154  0BD8               	decfsz	??_main+1,f
  1329     0155  2952               	goto	u2407
  1330     0156                     l2459:
  1331                           
  1332                           ;maestro.c: 85:             Lcd_Clear();
  1333     0156  120A  158A  252A  120A  118A  	fcall	_Lcd_Clear
  1334     015B                     l2461:
  1335                           
  1336                           ;maestro.c: 86:             selector++;
  1337     015B  3001               	movlw	1
  1338     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1339     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1340     015E  00D7               	movwf	??_main
  1341     015F  0857               	movf	??_main,w
  1342     0160  07A7               	addwf	_selector,f
  1343     0161                     l2463:
  1344                           
  1345                           ;maestro.c: 89:         CLK_CONFIG();
  1346     0161  120A  118A  2423  120A  118A  	fcall	_CLK_CONFIG
  1347     0166  2923               	goto	l2443
  1348     0167  120A  118A  2800   	ljmp	start
  1349     016A                     __end_of_main:
  1350                           
  1351                           	psect	text1
  1352     00B1                     __ptext1:	
  1353 ;; *************** function _setup *****************
  1354 ;; Defined at:
  1355 ;;		line 96 in file "maestro.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 1
  1376 ;; This function calls:
  1377 ;;		_I2C_Init_Master
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383     00B1                     _setup:	
  1384                           ;psect for function _setup
  1385                           
  1386     00B1                     l2151:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1389                           
  1390                           
  1391                           ;maestro.c: 100:     ANSELH = 0;
  1392     00B1  1683               	bsf	3,5	;RP0=1, select bank3
  1393     00B2  1703               	bsf	3,6	;RP1=1, select bank3
  1394     00B3  0189               	clrf	9	;volatile
  1395                           
  1396                           ;maestro.c: 103:     TRISB = 0;
  1397     00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1398     00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1399     00B6  0186               	clrf	6	;volatile
  1400                           
  1401                           ;maestro.c: 104:     TRISD = 0;
  1402     00B7  0188               	clrf	8	;volatile
  1403     00B8                     l2153:
  1404                           
  1405                           ;maestro.c: 107:     TRISA = 1;
  1406     00B8  3001               	movlw	1
  1407     00B9  0085               	movwf	5	;volatile
  1408     00BA                     l2155:
  1409                           
  1410                           ;maestro.c: 110:     PORTB = 0;
  1411     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1412     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1413     00BC  0186               	clrf	6	;volatile
  1414     00BD                     l2157:
  1415                           
  1416                           ;maestro.c: 111:     PORTD = 0;
  1417     00BD  0188               	clrf	8	;volatile
  1418     00BE                     l2159:
  1419                           
  1420                           ;maestro.c: 112:     PORTA = 0;
  1421     00BE  0185               	clrf	5	;volatile
  1422     00BF                     l2161:
  1423                           
  1424                           ;maestro.c: 115:     OSCCONbits.IRCF2 = 1;
  1425     00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1426     00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1427     00C1  170F               	bsf	15,6	;volatile
  1428     00C2                     l2163:
  1429                           
  1430                           ;maestro.c: 116:     OSCCONbits.IRCF1 = 1;
  1431     00C2  168F               	bsf	15,5	;volatile
  1432     00C3                     l2165:
  1433                           
  1434                           ;maestro.c: 117:     OSCCONbits.IRCF0 = 1;
  1435     00C3  160F               	bsf	15,4	;volatile
  1436     00C4                     l2167:
  1437                           
  1438                           ;maestro.c: 120:     OSCCONbits.SCS = 1;
  1439     00C4  140F               	bsf	15,0	;volatile
  1440     00C5                     l2169:
  1441                           
  1442                           ;maestro.c: 123:     I2C_Init_Master(0x80);
  1443     00C5  3080               	movlw	128
  1444     00C6  120A  158A  25B1  120A  118A  	fcall	_I2C_Init_Master
  1445     00CB                     l85:
  1446     00CB  0008               	return
  1447     00CC                     __end_of_setup:
  1448                           
  1449                           	psect	text2
  1450     0DB1                     __ptext2:	
  1451 ;; *************** function _I2C_Init_Master *****************
  1452 ;; Defined at:
  1453 ;;		line 12 in file "i2c.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  sp_i2c          1    wreg     unsigned char 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  sp_i2c          1    0[COMMON] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       0       0       0       0
  1468 ;;      Locals:         1       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0
  1470 ;;      Totals:         1       0       0       0       0
  1471 ;;Total ram usage:        1 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_setup
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480     0DB1                     _I2C_Init_Master:	
  1481                           ;psect for function _I2C_Init_Master
  1482                           
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  1486                           ;I2C_Init_Master@sp_i2c stored from wreg
  1487     0DB1  00F0               	movwf	I2C_Init_Master@sp_i2c
  1488     0DB2                     l1935:
  1489                           
  1490                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  1491     0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  1492     0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  1493     0DB4  1587               	bsf	7,3	;volatile
  1494                           
  1495                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  1496     0DB5  1607               	bsf	7,4	;volatile
  1497     0DB6                     l1937:
  1498                           
  1499                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  1500     0DB6  0870               	movf	I2C_Init_Master@sp_i2c,w
  1501     0DB7  0094               	movwf	20	;volatile
  1502                           
  1503                           ;i2c.c: 17:  SSPCON = 0x28;
  1504     0DB8  3028               	movlw	40
  1505     0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  1506     0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  1507     0DBB  0094               	movwf	20	;volatile
  1508     0DBC                     l1939:
  1509                           
  1510                           ;i2c.c: 18:     SSPCON2 = 0x00;
  1511     0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  1512     0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  1513     0DBE  0191               	clrf	17	;volatile
  1514     0DBF                     l1941:
  1515                           
  1516                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  1517     0DBF  3080               	movlw	128
  1518     0DC0  0670               	xorwf	I2C_Init_Master@sp_i2c,w
  1519     0DC1  1D03               	btfss	3,2
  1520     0DC2  2DC4               	goto	u1521
  1521     0DC3  2DC5               	goto	u1520
  1522     0DC4                     u1521:
  1523     0DC4  2DC8               	goto	l1945
  1524     0DC5                     u1520:
  1525     0DC5                     l1943:
  1526                           
  1527                           ;i2c.c: 20:         SSPADD = 19;
  1528     0DC5  3013               	movlw	19
  1529     0DC6  0093               	movwf	19	;volatile
  1530                           
  1531                           ;i2c.c: 21:     }
  1532     0DC7  2DCF               	goto	l188
  1533     0DC8                     l1945:
  1534     0DC8  0870               	movf	I2C_Init_Master@sp_i2c,w
  1535     0DC9  1D03               	btfss	3,2
  1536     0DCA  2DCC               	goto	u1531
  1537     0DCB  2DCD               	goto	u1530
  1538     0DCC                     u1531:
  1539     0DCC  2DCF               	goto	l188
  1540     0DCD                     u1530:
  1541     0DCD                     l1947:
  1542                           
  1543                           ;i2c.c: 23:         SSPADD = 29;
  1544     0DCD  301D               	movlw	29
  1545     0DCE  0093               	movwf	19	;volatile
  1546     0DCF                     l188:
  1547     0DCF  0008               	return
  1548     0DD0                     __end_of_I2C_Init_Master:
  1549                           
  1550                           	psect	text3
  1551     016A                     __ptext3:	
  1552 ;; *************** function _Lcd_Init *****************
  1553 ;; Defined at:
  1554 ;;		line 65 in file "LCD.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0, pclath, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0
  1570 ;;      Temps:          2       0       0       0       0
  1571 ;;      Totals:         2       0       0       0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 2
  1575 ;; This function calls:
  1576 ;;		_Lcd_Cmd
  1577 ;;		_Lcd_Port
  1578 ;; This function is called by:
  1579 ;;		_main
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583     016A                     _Lcd_Init:	
  1584                           ;psect for function _Lcd_Init
  1585                           
  1586     016A                     l2171:	
  1587                           ;incstack = 0
  1588                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1589                           
  1590                           
  1591                           ;LCD.c: 66:     Lcd_Port(0x00);
  1592     016A  3000               	movlw	0
  1593     016B  120A  158A  25D0  120A  118A  	fcall	_Lcd_Port
  1594     0170                     l2173:
  1595                           
  1596                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1597     0170  3034               	movlw	52
  1598     0171  00F5               	movwf	??_Lcd_Init+1
  1599     0172  30F1               	movlw	241
  1600     0173  00F4               	movwf	??_Lcd_Init
  1601     0174                     u2417:
  1602     0174  0BF4               	decfsz	??_Lcd_Init,f
  1603     0175  2974               	goto	u2417
  1604     0176  0BF5               	decfsz	??_Lcd_Init+1,f
  1605     0177  2974               	goto	u2417
  1606     0178  2979               	nop2
  1607     0179                     l2175:
  1608                           
  1609                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1610     0179  3003               	movlw	3
  1611     017A  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1612                           
  1613                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1614     017F  300D               	movlw	13
  1615     0180  00F5               	movwf	??_Lcd_Init+1
  1616     0181  30FB               	movlw	251
  1617     0182  00F4               	movwf	??_Lcd_Init
  1618     0183                     u2427:
  1619     0183  0BF4               	decfsz	??_Lcd_Init,f
  1620     0184  2983               	goto	u2427
  1621     0185  0BF5               	decfsz	??_Lcd_Init+1,f
  1622     0186  2983               	goto	u2427
  1623     0187  2988               	nop2
  1624     0188                     l2177:
  1625                           
  1626                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1627     0188  3003               	movlw	3
  1628     0189  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1629     018E                     l2179:
  1630                           
  1631                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  1632     018E  3085               	movlw	133
  1633     018F  00F4               	movwf	??_Lcd_Init
  1634     0190                     u2437:
  1635     0190  0BF4               	decfsz	??_Lcd_Init,f
  1636     0191  2990               	goto	u2437
  1637                           
  1638                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1639     0192  3003               	movlw	3
  1640     0193  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1641                           
  1642                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  1643     0198  3002               	movlw	2
  1644     0199  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1645                           
  1646                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1647     019E  3002               	movlw	2
  1648     019F  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1649                           
  1650                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  1651     01A4  3008               	movlw	8
  1652     01A5  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1653                           
  1654                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  1655     01AA  3000               	movlw	0
  1656     01AB  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1657                           
  1658                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  1659     01B0  300C               	movlw	12
  1660     01B1  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1661                           
  1662                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  1663     01B6  3000               	movlw	0
  1664     01B7  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1665                           
  1666                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  1667     01BC  3006               	movlw	6
  1668     01BD  120A  158A  2597  120A  118A  	fcall	_Lcd_Cmd
  1669     01C2                     l2181:
  1670                           
  1671                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  1672     01C2  3042               	movlw	66
  1673     01C3  00F4               	movwf	??_Lcd_Init
  1674     01C4                     u2447:
  1675     01C4  0BF4               	decfsz	??_Lcd_Init,f
  1676     01C5  29C4               	goto	u2447
  1677     01C6  0000               	nop
  1678     01C7                     l262:
  1679     01C7  0008               	return
  1680     01C8                     __end_of_Lcd_Init:
  1681                           
  1682                           	psect	text4
  1683     0D2A                     __ptext4:	
  1684 ;; *************** function _Lcd_Clear *****************
  1685 ;; Defined at:
  1686 ;;		line 43 in file "LCD.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0
  1703 ;;      Totals:         0       0       0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 2
  1707 ;; This function calls:
  1708 ;;		_Lcd_Cmd
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714     0D2A                     _Lcd_Clear:	
  1715                           ;psect for function _Lcd_Clear
  1716                           
  1717     0D2A                     l2183:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1720                           
  1721                           
  1722                           ;LCD.c: 44:     Lcd_Cmd(0);
  1723     0D2A  3000               	movlw	0
  1724     0D2B  120A  158A  2597  120A  158A  	fcall	_Lcd_Cmd
  1725                           
  1726                           ;LCD.c: 45:     Lcd_Cmd(1);
  1727     0D30  3001               	movlw	1
  1728     0D31  120A  158A  2597  120A  158A  	fcall	_Lcd_Cmd
  1729     0D36                     l253:
  1730     0D36  0008               	return
  1731     0D37                     __end_of_Lcd_Clear:
  1732                           
  1733                           	psect	text5
  1734     0423                     __ptext5:	
  1735 ;; *************** function _CLK_CONFIG *****************
  1736 ;; Defined at:
  1737 ;;		line 126 in file "maestro.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0
  1753 ;;      Temps:          0       3       0       0       0
  1754 ;;      Totals:         0       3       0       0       0
  1755 ;;Total ram usage:        3 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 3
  1758 ;; This function calls:
  1759 ;;		_DS3231_Get_Date
  1760 ;;		_DS3231_Get_Time
  1761 ;;		_Lcd_Set_Cursor
  1762 ;;		_Lcd_Write_String
  1763 ;;		___bmul
  1764 ;;		_sprintf
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770     0423                     _CLK_CONFIG:	
  1771                           ;psect for function _CLK_CONFIG
  1772                           
  1773     0423                     l2185:	
  1774                           ;incstack = 0
  1775                           ; Regs used in _CLK_CONFIG: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1776                           
  1777                           
  1778                           ;maestro.c: 129:     if(selector == 0)
  1779     0423  1283               	bcf	3,5	;RP0=0, select bank0
  1780     0424  1303               	bcf	3,6	;RP1=0, select bank0
  1781     0425  0827               	movf	_selector,w
  1782     0426  1D03               	btfss	3,2
  1783     0427  2C29               	goto	u1871
  1784     0428  2C2A               	goto	u1870
  1785     0429                     u1871:
  1786     0429  2CE6               	goto	l2213
  1787     042A                     u1870:
  1788     042A                     l2187:
  1789                           
  1790                           ;maestro.c: 130:     {;maestro.c: 132:         DS3231_Get_Date((uint8_t)&dia, (uint8_t)&
      +                          mes, (uint8_t)&ano, (uint8_t)&dow);
  1791     042A  3026               	movlw	low _dia
  1792     042B  00F4               	movwf	DS3231_Get_Date@day
  1793     042C  3000               	movlw	high _dia
  1794     042D  00F5               	movwf	DS3231_Get_Date@day+1
  1795     042E  3025               	movlw	low _mes
  1796     042F  00F6               	movwf	DS3231_Get_Date@mth
  1797     0430  3000               	movlw	high _mes
  1798     0431  00F7               	movwf	DS3231_Get_Date@mth+1
  1799     0432  3024               	movlw	low _ano
  1800     0433  00F8               	movwf	DS3231_Get_Date@year
  1801     0434  3000               	movlw	high _ano
  1802     0435  00F9               	movwf	DS3231_Get_Date@year+1
  1803     0436  3023               	movlw	low _dow
  1804     0437  00FA               	movwf	DS3231_Get_Date@dow
  1805     0438  3000               	movlw	high _dow
  1806     0439  00FB               	movwf	DS3231_Get_Date@dow+1
  1807     043A  120A  158A  27B8  120A  118A  	fcall	_DS3231_Get_Date
  1808                           
  1809                           ;maestro.c: 133:         DS3231_Get_Time((uint8_t)&horas, (uint8_t)&minutos, (uint8_t)&s
      +                          egundos);
  1810     043F  3022               	movlw	low _horas
  1811     0440  00F4               	movwf	DS3231_Get_Time@hr
  1812     0441  3000               	movlw	high _horas
  1813     0442  00F5               	movwf	DS3231_Get_Time@hr+1
  1814     0443  3021               	movlw	low _minutos
  1815     0444  00F6               	movwf	DS3231_Get_Time@min
  1816     0445  3000               	movlw	high _minutos
  1817     0446  00F7               	movwf	DS3231_Get_Time@min+1
  1818     0447  3020               	movlw	low _segundos
  1819     0448  00F8               	movwf	DS3231_Get_Time@sec
  1820     0449  3000               	movlw	high _segundos
  1821     044A  00F9               	movwf	DS3231_Get_Time@sec+1
  1822     044B  120A  158A  267B  120A  118A  	fcall	_DS3231_Get_Time
  1823     0450                     l2189:
  1824                           
  1825                           ;maestro.c: 138:         Lcd_Set_Cursor(1,1);
  1826     0450  01F4               	clrf	Lcd_Set_Cursor@b
  1827     0451  0AF4               	incf	Lcd_Set_Cursor@b,f
  1828     0452  3001               	movlw	1
  1829     0453  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  1830     0458                     l2191:
  1831                           
  1832                           ;maestro.c: 139:         Lcd_Write_String("ADC:");
  1833     0458  3090               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1834     0459  00F5               	movwf	Lcd_Write_String@a
  1835     045A  3080               	movlw	128
  1836     045B  00F6               	movwf	Lcd_Write_String@a+1
  1837     045C  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  1838     0461                     l2193:
  1839                           
  1840                           ;maestro.c: 140:         Lcd_Set_Cursor(2,1);
  1841     0461  01F4               	clrf	Lcd_Set_Cursor@b
  1842     0462  0AF4               	incf	Lcd_Set_Cursor@b,f
  1843     0463  3002               	movlw	2
  1844     0464  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  1845     0469                     l2195:
  1846                           
  1847                           ;maestro.c: 141:         sprintf(buffer,"%d ", valor_ADC);
  1848     0469  3095               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1849     046A  1283               	bcf	3,5	;RP0=0, select bank0
  1850     046B  1303               	bcf	3,6	;RP1=0, select bank0
  1851     046C  00BD               	movwf	sprintf@f
  1852     046D  0828               	movf	_valor_ADC,w
  1853     046E  00D4               	movwf	??_CLK_CONFIG
  1854     046F  01D5               	clrf	??_CLK_CONFIG+1
  1855     0470  0854               	movf	??_CLK_CONFIG,w
  1856     0471  00BE               	movwf	?_sprintf+1
  1857     0472  0855               	movf	??_CLK_CONFIG+1,w
  1858     0473  00BF               	movwf	?_sprintf+2
  1859     0474  3029               	movlw	(low (_buffer| 0))& (0+255)
  1860     0475  120A  118A  21C8  120A  118A  	fcall	_sprintf
  1861     047A                     l2197:
  1862                           
  1863                           ;maestro.c: 142:         Lcd_Write_String(buffer);
  1864     047A  3029               	movlw	(low (_buffer| 0))& (0+255)
  1865     047B  00F5               	movwf	Lcd_Write_String@a
  1866     047C  3000               	movlw	0
  1867     047D  00F6               	movwf	Lcd_Write_String@a+1
  1868     047E  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  1869     0483                     l2199:
  1870                           
  1871                           ;maestro.c: 145:         sprintf(buffer, "%02u:%02u:%02u", horas, minutos, segundos);
  1872     0483  303C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1873     0484  1283               	bcf	3,5	;RP0=0, select bank0
  1874     0485  1303               	bcf	3,6	;RP1=0, select bank0
  1875     0486  00BD               	movwf	sprintf@f
  1876     0487  0822               	movf	_horas,w
  1877     0488  00BE               	movwf	?_sprintf+1
  1878     0489  01BF               	clrf	?_sprintf+2
  1879     048A  1BBE               	btfsc	?_sprintf+1,7
  1880     048B  03BF               	decf	?_sprintf+2,f
  1881     048C  0821               	movf	_minutos,w
  1882     048D  00C0               	movwf	?_sprintf+3
  1883     048E  01C1               	clrf	?_sprintf+4
  1884     048F  1BC0               	btfsc	?_sprintf+3,7
  1885     0490  03C1               	decf	?_sprintf+4,f
  1886     0491  0820               	movf	_segundos,w
  1887     0492  00C2               	movwf	?_sprintf+5
  1888     0493  01C3               	clrf	?_sprintf+6
  1889     0494  1BC2               	btfsc	?_sprintf+5,7
  1890     0495  03C3               	decf	?_sprintf+6,f
  1891     0496  3029               	movlw	(low (_buffer| 0))& (0+255)
  1892     0497  120A  118A  21C8  120A  118A  	fcall	_sprintf
  1893     049C                     l2201:
  1894                           
  1895                           ;maestro.c: 146:         Lcd_Set_Cursor(1,8);
  1896     049C  3008               	movlw	8
  1897     049D  00F4               	movwf	Lcd_Set_Cursor@b
  1898     049E  3001               	movlw	1
  1899     049F  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  1900     04A4                     l2203:
  1901                           
  1902                           ;maestro.c: 147:         Lcd_Write_String(buffer);
  1903     04A4  3029               	movlw	(low (_buffer| 0))& (0+255)
  1904     04A5  00F5               	movwf	Lcd_Write_String@a
  1905     04A6  3000               	movlw	0
  1906     04A7  00F6               	movwf	Lcd_Write_String@a+1
  1907     04A8  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  1908     04AD                     l2205:
  1909                           
  1910                           ;maestro.c: 148:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1911     04AD  3003               	movlw	3
  1912     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1913     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1914     04B0  00D6               	movwf	??_CLK_CONFIG+2
  1915     04B1  3008               	movlw	8
  1916     04B2  00D5               	movwf	??_CLK_CONFIG+1
  1917     04B3  3076               	movlw	118
  1918     04B4  00D4               	movwf	??_CLK_CONFIG
  1919     04B5                     u2457:
  1920     04B5  0BD4               	decfsz	??_CLK_CONFIG,f
  1921     04B6  2CB5               	goto	u2457
  1922     04B7  0BD5               	decfsz	??_CLK_CONFIG+1,f
  1923     04B8  2CB5               	goto	u2457
  1924     04B9  0BD6               	decfsz	??_CLK_CONFIG+2,f
  1925     04BA  2CB5               	goto	u2457
  1926     04BB  0000               	nop
  1927     04BC                     l2207:
  1928                           
  1929                           ;maestro.c: 151:         sprintf(buffer, "%02u/%02u/20%02u", dia, mes, ano);
  1930     04BC  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1931     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1932     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1933     04BF  00BD               	movwf	sprintf@f
  1934     04C0  0826               	movf	_dia,w
  1935     04C1  00BE               	movwf	?_sprintf+1
  1936     04C2  01BF               	clrf	?_sprintf+2
  1937     04C3  1BBE               	btfsc	?_sprintf+1,7
  1938     04C4  03BF               	decf	?_sprintf+2,f
  1939     04C5  0825               	movf	_mes,w
  1940     04C6  00C0               	movwf	?_sprintf+3
  1941     04C7  01C1               	clrf	?_sprintf+4
  1942     04C8  1BC0               	btfsc	?_sprintf+3,7
  1943     04C9  03C1               	decf	?_sprintf+4,f
  1944     04CA  0824               	movf	_ano,w
  1945     04CB  00C2               	movwf	?_sprintf+5
  1946     04CC  01C3               	clrf	?_sprintf+6
  1947     04CD  1BC2               	btfsc	?_sprintf+5,7
  1948     04CE  03C3               	decf	?_sprintf+6,f
  1949     04CF  3029               	movlw	(low (_buffer| 0))& (0+255)
  1950     04D0  120A  118A  21C8  120A  118A  	fcall	_sprintf
  1951     04D5                     l2209:
  1952                           
  1953                           ;maestro.c: 152:         Lcd_Set_Cursor(2,6);
  1954     04D5  3006               	movlw	6
  1955     04D6  00F4               	movwf	Lcd_Set_Cursor@b
  1956     04D7  3002               	movlw	2
  1957     04D8  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  1958     04DD                     l2211:
  1959                           
  1960                           ;maestro.c: 153:         Lcd_Write_String(buffer);
  1961     04DD  3029               	movlw	(low (_buffer| 0))& (0+255)
  1962     04DE  00F5               	movwf	Lcd_Write_String@a
  1963     04DF  3000               	movlw	0
  1964     04E0  00F6               	movwf	Lcd_Write_String@a+1
  1965     04E1  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  1966     04E6                     l2213:
  1967                           
  1968                           ;maestro.c: 155:     if(selector == 1)
  1969     04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1970     04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1971     04E8  0327               	decf	_selector,w
  1972     04E9  1D03               	btfss	3,2
  1973     04EA  2CEC               	goto	u1881
  1974     04EB  2CED               	goto	u1880
  1975     04EC                     u1881:
  1976     04EC  2D51               	goto	l2245
  1977     04ED                     u1880:
  1978     04ED                     l2215:
  1979                           
  1980                           ;maestro.c: 156:     {;maestro.c: 157:       Lcd_Set_Cursor(1,1);
  1981     04ED  01F4               	clrf	Lcd_Set_Cursor@b
  1982     04EE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1983     04EF  3001               	movlw	1
  1984     04F0  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  1985     04F5                     l2217:
  1986                           
  1987                           ;maestro.c: 158:                 sprintf(buffer, "Dia: %02u", dia);
  1988     04F5  306E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1989     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1990     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1991     04F8  00BD               	movwf	sprintf@f
  1992     04F9  0826               	movf	_dia,w
  1993     04FA  00BE               	movwf	?_sprintf+1
  1994     04FB  01BF               	clrf	?_sprintf+2
  1995     04FC  1BBE               	btfsc	?_sprintf+1,7
  1996     04FD  03BF               	decf	?_sprintf+2,f
  1997     04FE  3029               	movlw	(low (_buffer| 0))& (0+255)
  1998     04FF  120A  118A  21C8  120A  118A  	fcall	_sprintf
  1999     0504                     l2219:
  2000                           
  2001                           ;maestro.c: 159:                 Lcd_Write_String(buffer);
  2002     0504  3029               	movlw	(low (_buffer| 0))& (0+255)
  2003     0505  00F5               	movwf	Lcd_Write_String@a
  2004     0506  3000               	movlw	0
  2005     0507  00F6               	movwf	Lcd_Write_String@a+1
  2006     0508  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  2007     050D                     l2221:
  2008                           
  2009                           ;maestro.c: 160:                 if(PORTAbits.RA1 == 1)
  2010     050D  1283               	bcf	3,5	;RP0=0, select bank0
  2011     050E  1303               	bcf	3,6	;RP1=0, select bank0
  2012     050F  1C85               	btfss	5,1	;volatile
  2013     0510  2D12               	goto	u1891
  2014     0511  2D13               	goto	u1890
  2015     0512                     u1891:
  2016     0512  2D30               	goto	l2233
  2017     0513                     u1890:
  2018     0513                     l91:
  2019     0513  1885               	btfsc	5,1	;volatile
  2020     0514  2D16               	goto	u1901
  2021     0515  2D17               	goto	u1900
  2022     0516                     u1901:
  2023     0516  2D13               	goto	l91
  2024     0517                     u1900:
  2025     0517                     l2225:
  2026                           
  2027                           ;maestro.c: 163:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2028     0517  3034               	movlw	52
  2029     0518  1283               	bcf	3,5	;RP0=0, select bank0
  2030     0519  1303               	bcf	3,6	;RP1=0, select bank0
  2031     051A  00D5               	movwf	??_CLK_CONFIG+1
  2032     051B  30F1               	movlw	241
  2033     051C  00D4               	movwf	??_CLK_CONFIG
  2034     051D                     u2467:
  2035     051D  0BD4               	decfsz	??_CLK_CONFIG,f
  2036     051E  2D1D               	goto	u2467
  2037     051F  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2038     0520  2D1D               	goto	u2467
  2039     0521                     l2227:
  2040                           
  2041                           ;maestro.c: 164:                     dia++;
  2042     0521  3001               	movlw	1
  2043     0522  1283               	bcf	3,5	;RP0=0, select bank0
  2044     0523  1303               	bcf	3,6	;RP1=0, select bank0
  2045     0524  00D4               	movwf	??_CLK_CONFIG
  2046     0525  0854               	movf	??_CLK_CONFIG,w
  2047     0526  07A6               	addwf	_dia,f
  2048     0527                     l2229:
  2049                           
  2050                           ;maestro.c: 165:                     if(dia > 31){
  2051     0527  0826               	movf	_dia,w
  2052     0528  3A80               	xorlw	128
  2053     0529  3E60               	addlw	-160
  2054     052A  1C03               	skipc
  2055     052B  2D2D               	goto	u1911
  2056     052C  2D2E               	goto	u1910
  2057     052D                     u1911:
  2058     052D  2D30               	goto	l2233
  2059     052E                     u1910:
  2060     052E                     l2231:
  2061                           
  2062                           ;maestro.c: 166:                         dia = 31;
  2063     052E  301F               	movlw	31
  2064     052F  00A6               	movwf	_dia
  2065     0530                     l2233:
  2066                           
  2067                           ;maestro.c: 169:                 if(PORTAbits.RA2 == 1)
  2068     0530  1D05               	btfss	5,2	;volatile
  2069     0531  2D33               	goto	u1921
  2070     0532  2D34               	goto	u1920
  2071     0533                     u1921:
  2072     0533  2D51               	goto	l2245
  2073     0534                     u1920:
  2074     0534                     l96:
  2075     0534  1905               	btfsc	5,2	;volatile
  2076     0535  2D37               	goto	u1931
  2077     0536  2D38               	goto	u1930
  2078     0537                     u1931:
  2079     0537  2D34               	goto	l96
  2080     0538                     u1930:
  2081     0538                     l2237:
  2082                           
  2083                           ;maestro.c: 172:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2084     0538  3034               	movlw	52
  2085     0539  1283               	bcf	3,5	;RP0=0, select bank0
  2086     053A  1303               	bcf	3,6	;RP1=0, select bank0
  2087     053B  00D5               	movwf	??_CLK_CONFIG+1
  2088     053C  30F1               	movlw	241
  2089     053D  00D4               	movwf	??_CLK_CONFIG
  2090     053E                     u2477:
  2091     053E  0BD4               	decfsz	??_CLK_CONFIG,f
  2092     053F  2D3E               	goto	u2477
  2093     0540  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2094     0541  2D3E               	goto	u2477
  2095     0542                     l2239:
  2096                           
  2097                           ;maestro.c: 173:                     dia--;
  2098     0542  30FF               	movlw	255
  2099     0543  1283               	bcf	3,5	;RP0=0, select bank0
  2100     0544  1303               	bcf	3,6	;RP1=0, select bank0
  2101     0545  00D4               	movwf	??_CLK_CONFIG
  2102     0546  0854               	movf	??_CLK_CONFIG,w
  2103     0547  07A6               	addwf	_dia,f
  2104     0548                     l2241:
  2105                           
  2106                           ;maestro.c: 174:                     if(dia < 1){
  2107     0548  0826               	movf	_dia,w
  2108     0549  3A80               	xorlw	128
  2109     054A  3E7F               	addlw	-129
  2110     054B  1803               	skipnc
  2111     054C  2D4E               	goto	u1941
  2112     054D  2D4F               	goto	u1940
  2113     054E                     u1941:
  2114     054E  2D51               	goto	l2245
  2115     054F                     u1940:
  2116     054F                     l2243:
  2117                           
  2118                           ;maestro.c: 175:                         dia = 1;
  2119     054F  01A6               	clrf	_dia
  2120     0550  0AA6               	incf	_dia,f
  2121     0551                     l2245:
  2122                           
  2123                           ;maestro.c: 179:     if(selector == 2)
  2124     0551  3002               	movlw	2
  2125     0552  0627               	xorwf	_selector,w
  2126     0553  1D03               	btfss	3,2
  2127     0554  2D56               	goto	u1951
  2128     0555  2D57               	goto	u1950
  2129     0556                     u1951:
  2130     0556  2DBB               	goto	l2277
  2131     0557                     u1950:
  2132     0557                     l2247:
  2133                           
  2134                           ;maestro.c: 180:     {;maestro.c: 181:     Lcd_Set_Cursor(1,1);
  2135     0557  01F4               	clrf	Lcd_Set_Cursor@b
  2136     0558  0AF4               	incf	Lcd_Set_Cursor@b,f
  2137     0559  3001               	movlw	1
  2138     055A  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  2139     055F                     l2249:
  2140                           
  2141                           ;maestro.c: 182:                 sprintf(buffer, "Mes: %02u", mes);
  2142     055F  3078               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2143     0560  1283               	bcf	3,5	;RP0=0, select bank0
  2144     0561  1303               	bcf	3,6	;RP1=0, select bank0
  2145     0562  00BD               	movwf	sprintf@f
  2146     0563  0825               	movf	_mes,w
  2147     0564  00BE               	movwf	?_sprintf+1
  2148     0565  01BF               	clrf	?_sprintf+2
  2149     0566  1BBE               	btfsc	?_sprintf+1,7
  2150     0567  03BF               	decf	?_sprintf+2,f
  2151     0568  3029               	movlw	(low (_buffer| 0))& (0+255)
  2152     0569  120A  118A  21C8  120A  118A  	fcall	_sprintf
  2153     056E                     l2251:
  2154                           
  2155                           ;maestro.c: 183:                 Lcd_Write_String(buffer);
  2156     056E  3029               	movlw	(low (_buffer| 0))& (0+255)
  2157     056F  00F5               	movwf	Lcd_Write_String@a
  2158     0570  3000               	movlw	0
  2159     0571  00F6               	movwf	Lcd_Write_String@a+1
  2160     0572  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  2161     0577                     l2253:
  2162                           
  2163                           ;maestro.c: 184:                 if(PORTAbits.RA1 == 1)
  2164     0577  1283               	bcf	3,5	;RP0=0, select bank0
  2165     0578  1303               	bcf	3,6	;RP1=0, select bank0
  2166     0579  1C85               	btfss	5,1	;volatile
  2167     057A  2D7C               	goto	u1961
  2168     057B  2D7D               	goto	u1960
  2169     057C                     u1961:
  2170     057C  2D9A               	goto	l2265
  2171     057D                     u1960:
  2172     057D                     l102:
  2173     057D  1885               	btfsc	5,1	;volatile
  2174     057E  2D80               	goto	u1971
  2175     057F  2D81               	goto	u1970
  2176     0580                     u1971:
  2177     0580  2D7D               	goto	l102
  2178     0581                     u1970:
  2179     0581                     l2257:
  2180                           
  2181                           ;maestro.c: 187:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2182     0581  3034               	movlw	52
  2183     0582  1283               	bcf	3,5	;RP0=0, select bank0
  2184     0583  1303               	bcf	3,6	;RP1=0, select bank0
  2185     0584  00D5               	movwf	??_CLK_CONFIG+1
  2186     0585  30F1               	movlw	241
  2187     0586  00D4               	movwf	??_CLK_CONFIG
  2188     0587                     u2487:
  2189     0587  0BD4               	decfsz	??_CLK_CONFIG,f
  2190     0588  2D87               	goto	u2487
  2191     0589  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2192     058A  2D87               	goto	u2487
  2193     058B                     l2259:
  2194                           
  2195                           ;maestro.c: 188:                     mes++;
  2196     058B  3001               	movlw	1
  2197     058C  1283               	bcf	3,5	;RP0=0, select bank0
  2198     058D  1303               	bcf	3,6	;RP1=0, select bank0
  2199     058E  00D4               	movwf	??_CLK_CONFIG
  2200     058F  0854               	movf	??_CLK_CONFIG,w
  2201     0590  07A5               	addwf	_mes,f
  2202     0591                     l2261:
  2203                           
  2204                           ;maestro.c: 189:                     if(mes > 12){
  2205     0591  0825               	movf	_mes,w
  2206     0592  3A80               	xorlw	128
  2207     0593  3E73               	addlw	-141
  2208     0594  1C03               	skipc
  2209     0595  2D97               	goto	u1981
  2210     0596  2D98               	goto	u1980
  2211     0597                     u1981:
  2212     0597  2D9A               	goto	l2265
  2213     0598                     u1980:
  2214     0598                     l2263:
  2215                           
  2216                           ;maestro.c: 190:                         mes = 12;
  2217     0598  300C               	movlw	12
  2218     0599  00A5               	movwf	_mes
  2219     059A                     l2265:
  2220                           
  2221                           ;maestro.c: 193:                 if(PORTAbits.RA2 == 1)
  2222     059A  1D05               	btfss	5,2	;volatile
  2223     059B  2D9D               	goto	u1991
  2224     059C  2D9E               	goto	u1990
  2225     059D                     u1991:
  2226     059D  2DBB               	goto	l2277
  2227     059E                     u1990:
  2228     059E                     l107:
  2229     059E  1905               	btfsc	5,2	;volatile
  2230     059F  2DA1               	goto	u2001
  2231     05A0  2DA2               	goto	u2000
  2232     05A1                     u2001:
  2233     05A1  2D9E               	goto	l107
  2234     05A2                     u2000:
  2235     05A2                     l2269:
  2236                           
  2237                           ;maestro.c: 196:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2238     05A2  3034               	movlw	52
  2239     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2240     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2241     05A5  00D5               	movwf	??_CLK_CONFIG+1
  2242     05A6  30F1               	movlw	241
  2243     05A7  00D4               	movwf	??_CLK_CONFIG
  2244     05A8                     u2497:
  2245     05A8  0BD4               	decfsz	??_CLK_CONFIG,f
  2246     05A9  2DA8               	goto	u2497
  2247     05AA  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2248     05AB  2DA8               	goto	u2497
  2249     05AC                     l2271:
  2250                           
  2251                           ;maestro.c: 197:                     mes--;
  2252     05AC  30FF               	movlw	255
  2253     05AD  1283               	bcf	3,5	;RP0=0, select bank0
  2254     05AE  1303               	bcf	3,6	;RP1=0, select bank0
  2255     05AF  00D4               	movwf	??_CLK_CONFIG
  2256     05B0  0854               	movf	??_CLK_CONFIG,w
  2257     05B1  07A5               	addwf	_mes,f
  2258     05B2                     l2273:
  2259                           
  2260                           ;maestro.c: 198:                     if(mes < 1){
  2261     05B2  0825               	movf	_mes,w
  2262     05B3  3A80               	xorlw	128
  2263     05B4  3E7F               	addlw	-129
  2264     05B5  1803               	skipnc
  2265     05B6  2DB8               	goto	u2011
  2266     05B7  2DB9               	goto	u2010
  2267     05B8                     u2011:
  2268     05B8  2DBB               	goto	l2277
  2269     05B9                     u2010:
  2270     05B9                     l2275:
  2271                           
  2272                           ;maestro.c: 199:                         mes = 1;
  2273     05B9  01A5               	clrf	_mes
  2274     05BA  0AA5               	incf	_mes,f
  2275     05BB                     l2277:
  2276                           
  2277                           ;maestro.c: 203:     if (selector == 3)
  2278     05BB  3003               	movlw	3
  2279     05BC  0627               	xorwf	_selector,w
  2280     05BD  1D03               	btfss	3,2
  2281     05BE  2DC0               	goto	u2021
  2282     05BF  2DC1               	goto	u2020
  2283     05C0                     u2021:
  2284     05C0  2E22               	goto	l2309
  2285     05C1                     u2020:
  2286     05C1                     l2279:
  2287                           
  2288                           ;maestro.c: 204:     {;maestro.c: 205:      Lcd_Set_Cursor(1,1);
  2289     05C1  01F4               	clrf	Lcd_Set_Cursor@b
  2290     05C2  0AF4               	incf	Lcd_Set_Cursor@b,f
  2291     05C3  3001               	movlw	1
  2292     05C4  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  2293     05C9                     l2281:
  2294                           
  2295                           ;maestro.c: 206:                 sprintf(buffer, "ANO: %02u", ano);
  2296     05C9  3064               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2297     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2298     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2299     05CC  00BD               	movwf	sprintf@f
  2300     05CD  0824               	movf	_ano,w
  2301     05CE  00BE               	movwf	?_sprintf+1
  2302     05CF  01BF               	clrf	?_sprintf+2
  2303     05D0  1BBE               	btfsc	?_sprintf+1,7
  2304     05D1  03BF               	decf	?_sprintf+2,f
  2305     05D2  3029               	movlw	(low (_buffer| 0))& (0+255)
  2306     05D3  120A  118A  21C8  120A  118A  	fcall	_sprintf
  2307     05D8                     l2283:
  2308                           
  2309                           ;maestro.c: 207:                 Lcd_Write_String(buffer);
  2310     05D8  3029               	movlw	(low (_buffer| 0))& (0+255)
  2311     05D9  00F5               	movwf	Lcd_Write_String@a
  2312     05DA  3000               	movlw	0
  2313     05DB  00F6               	movwf	Lcd_Write_String@a+1
  2314     05DC  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  2315     05E1                     l2285:
  2316                           
  2317                           ;maestro.c: 208:                 if(PORTAbits.RA1 == 1)
  2318     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2319     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2320     05E3  1C85               	btfss	5,1	;volatile
  2321     05E4  2DE6               	goto	u2031
  2322     05E5  2DE7               	goto	u2030
  2323     05E6                     u2031:
  2324     05E6  2E04               	goto	l2297
  2325     05E7                     u2030:
  2326     05E7                     l113:
  2327     05E7  1885               	btfsc	5,1	;volatile
  2328     05E8  2DEA               	goto	u2041
  2329     05E9  2DEB               	goto	u2040
  2330     05EA                     u2041:
  2331     05EA  2DE7               	goto	l113
  2332     05EB                     u2040:
  2333     05EB                     l2289:
  2334                           
  2335                           ;maestro.c: 211:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2336     05EB  3034               	movlw	52
  2337     05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2338     05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2339     05EE  00D5               	movwf	??_CLK_CONFIG+1
  2340     05EF  30F1               	movlw	241
  2341     05F0  00D4               	movwf	??_CLK_CONFIG
  2342     05F1                     u2507:
  2343     05F1  0BD4               	decfsz	??_CLK_CONFIG,f
  2344     05F2  2DF1               	goto	u2507
  2345     05F3  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2346     05F4  2DF1               	goto	u2507
  2347     05F5                     l2291:
  2348                           
  2349                           ;maestro.c: 212:                     ano++;
  2350     05F5  3001               	movlw	1
  2351     05F6  1283               	bcf	3,5	;RP0=0, select bank0
  2352     05F7  1303               	bcf	3,6	;RP1=0, select bank0
  2353     05F8  00D4               	movwf	??_CLK_CONFIG
  2354     05F9  0854               	movf	??_CLK_CONFIG,w
  2355     05FA  07A4               	addwf	_ano,f
  2356     05FB                     l2293:
  2357                           
  2358                           ;maestro.c: 213:                     if(ano > 99){
  2359     05FB  0824               	movf	_ano,w
  2360     05FC  3A80               	xorlw	128
  2361     05FD  3E1C               	addlw	-228
  2362     05FE  1C03               	skipc
  2363     05FF  2E01               	goto	u2051
  2364     0600  2E02               	goto	u2050
  2365     0601                     u2051:
  2366     0601  2E04               	goto	l2297
  2367     0602                     u2050:
  2368     0602                     l2295:
  2369                           
  2370                           ;maestro.c: 214:                         ano = 99;
  2371     0602  3063               	movlw	99
  2372     0603  00A4               	movwf	_ano
  2373     0604                     l2297:
  2374                           
  2375                           ;maestro.c: 217:                 if(PORTAbits.RA2 == 1)
  2376     0604  1D05               	btfss	5,2	;volatile
  2377     0605  2E07               	goto	u2061
  2378     0606  2E08               	goto	u2060
  2379     0607                     u2061:
  2380     0607  2E22               	goto	l2309
  2381     0608                     u2060:
  2382     0608                     l118:
  2383     0608  1905               	btfsc	5,2	;volatile
  2384     0609  2E0B               	goto	u2071
  2385     060A  2E0C               	goto	u2070
  2386     060B                     u2071:
  2387     060B  2E08               	goto	l118
  2388     060C                     u2070:
  2389     060C                     l2301:
  2390                           
  2391                           ;maestro.c: 220:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2392     060C  3034               	movlw	52
  2393     060D  1283               	bcf	3,5	;RP0=0, select bank0
  2394     060E  1303               	bcf	3,6	;RP1=0, select bank0
  2395     060F  00D5               	movwf	??_CLK_CONFIG+1
  2396     0610  30F1               	movlw	241
  2397     0611  00D4               	movwf	??_CLK_CONFIG
  2398     0612                     u2517:
  2399     0612  0BD4               	decfsz	??_CLK_CONFIG,f
  2400     0613  2E12               	goto	u2517
  2401     0614  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2402     0615  2E12               	goto	u2517
  2403     0616                     l2303:
  2404                           
  2405                           ;maestro.c: 221:                     ano--;
  2406     0616  30FF               	movlw	255
  2407     0617  1283               	bcf	3,5	;RP0=0, select bank0
  2408     0618  1303               	bcf	3,6	;RP1=0, select bank0
  2409     0619  00D4               	movwf	??_CLK_CONFIG
  2410     061A  0854               	movf	??_CLK_CONFIG,w
  2411     061B  07A4               	addwf	_ano,f
  2412     061C                     l2305:
  2413                           
  2414                           ;maestro.c: 222:                     if(ano == -1){
  2415     061C  0A24               	incf	_ano,w
  2416     061D  1D03               	btfss	3,2
  2417     061E  2E20               	goto	u2081
  2418     061F  2E21               	goto	u2080
  2419     0620                     u2081:
  2420     0620  2E22               	goto	l2309
  2421     0621                     u2080:
  2422     0621                     l2307:
  2423                           
  2424                           ;maestro.c: 223:                         ano = 0;
  2425     0621  01A4               	clrf	_ano
  2426     0622                     l2309:
  2427                           
  2428                           ;maestro.c: 227:     if (selector == 4)
  2429     0622  3004               	movlw	4
  2430     0623  0627               	xorwf	_selector,w
  2431     0624  1D03               	btfss	3,2
  2432     0625  2E27               	goto	u2091
  2433     0626  2E28               	goto	u2090
  2434     0627                     u2091:
  2435     0627  2EB0               	goto	l2345
  2436     0628                     u2090:
  2437     0628                     l2311:
  2438                           
  2439                           ;maestro.c: 228:     {;maestro.c: 229:        Lcd_Set_Cursor(1,1);
  2440     0628  01F4               	clrf	Lcd_Set_Cursor@b
  2441     0629  0AF4               	incf	Lcd_Set_Cursor@b,f
  2442     062A  3001               	movlw	1
  2443     062B  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  2444     0630                     l2313:
  2445                           
  2446                           ;maestro.c: 230:                 sprintf(buffer, "Dia semana: %u", dow);
  2447     0630  302D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2448     0631  1283               	bcf	3,5	;RP0=0, select bank0
  2449     0632  1303               	bcf	3,6	;RP1=0, select bank0
  2450     0633  00BD               	movwf	sprintf@f
  2451     0634  0823               	movf	_dow,w
  2452     0635  00BE               	movwf	?_sprintf+1
  2453     0636  01BF               	clrf	?_sprintf+2
  2454     0637  1BBE               	btfsc	?_sprintf+1,7
  2455     0638  03BF               	decf	?_sprintf+2,f
  2456     0639  3029               	movlw	(low (_buffer| 0))& (0+255)
  2457     063A  120A  118A  21C8  120A  118A  	fcall	_sprintf
  2458     063F                     l2315:
  2459                           
  2460                           ;maestro.c: 231:                 Lcd_Write_String(buffer);
  2461     063F  3029               	movlw	(low (_buffer| 0))& (0+255)
  2462     0640  00F5               	movwf	Lcd_Write_String@a
  2463     0641  3000               	movlw	0
  2464     0642  00F6               	movwf	Lcd_Write_String@a+1
  2465     0643  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  2466                           
  2467                           ;maestro.c: 232:                 Lcd_Set_Cursor(2,1);
  2468     0648  01F4               	clrf	Lcd_Set_Cursor@b
  2469     0649  0AF4               	incf	Lcd_Set_Cursor@b,f
  2470     064A  3002               	movlw	2
  2471     064B  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  2472     0650                     l2317:
  2473                           
  2474                           ;maestro.c: 233:                 sprintf(buffer, "%s    ", dw[dow]);
  2475     0650  3089               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2476     0651  1283               	bcf	3,5	;RP0=0, select bank0
  2477     0652  1303               	bcf	3,6	;RP1=0, select bank0
  2478     0653  00BD               	movwf	sprintf@f
  2479     0654  300B               	movlw	11
  2480     0655  00F0               	movwf	___bmul@multiplicand
  2481     0656  0823               	movf	_dow,w
  2482     0657  120A  158A  256A  120A  118A  	fcall	___bmul
  2483     065C  3EA0               	addlw	(low (_dw| 0))& (0+255)
  2484     065D  1283               	bcf	3,5	;RP0=0, select bank0
  2485     065E  1303               	bcf	3,6	;RP1=0, select bank0
  2486     065F  00BE               	movwf	low ((?_sprintf| 0+1))
  2487     0660  3029               	movlw	(low (_buffer| 0))& (0+255)
  2488     0661  120A  118A  21C8  120A  118A  	fcall	_sprintf
  2489     0666                     l2319:
  2490                           
  2491                           ;maestro.c: 234:                 Lcd_Write_String(buffer);
  2492     0666  3029               	movlw	(low (_buffer| 0))& (0+255)
  2493     0667  00F5               	movwf	Lcd_Write_String@a
  2494     0668  3000               	movlw	0
  2495     0669  00F6               	movwf	Lcd_Write_String@a+1
  2496     066A  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  2497     066F                     l2321:
  2498                           
  2499                           ;maestro.c: 235:                 if(PORTAbits.RA1 == 1)
  2500     066F  1283               	bcf	3,5	;RP0=0, select bank0
  2501     0670  1303               	bcf	3,6	;RP1=0, select bank0
  2502     0671  1C85               	btfss	5,1	;volatile
  2503     0672  2E74               	goto	u2101
  2504     0673  2E75               	goto	u2100
  2505     0674                     u2101:
  2506     0674  2E92               	goto	l2333
  2507     0675                     u2100:
  2508     0675                     l124:
  2509     0675  1885               	btfsc	5,1	;volatile
  2510     0676  2E78               	goto	u2111
  2511     0677  2E79               	goto	u2110
  2512     0678                     u2111:
  2513     0678  2E75               	goto	l124
  2514     0679                     u2110:
  2515     0679                     l2325:
  2516                           
  2517                           ;maestro.c: 238:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2518     0679  3034               	movlw	52
  2519     067A  1283               	bcf	3,5	;RP0=0, select bank0
  2520     067B  1303               	bcf	3,6	;RP1=0, select bank0
  2521     067C  00D5               	movwf	??_CLK_CONFIG+1
  2522     067D  30F1               	movlw	241
  2523     067E  00D4               	movwf	??_CLK_CONFIG
  2524     067F                     u2527:
  2525     067F  0BD4               	decfsz	??_CLK_CONFIG,f
  2526     0680  2E7F               	goto	u2527
  2527     0681  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2528     0682  2E7F               	goto	u2527
  2529     0683                     l2327:
  2530                           
  2531                           ;maestro.c: 239:                     dow++;
  2532     0683  3001               	movlw	1
  2533     0684  1283               	bcf	3,5	;RP0=0, select bank0
  2534     0685  1303               	bcf	3,6	;RP1=0, select bank0
  2535     0686  00D4               	movwf	??_CLK_CONFIG
  2536     0687  0854               	movf	??_CLK_CONFIG,w
  2537     0688  07A3               	addwf	_dow,f
  2538     0689                     l2329:
  2539                           
  2540                           ;maestro.c: 240:                     if(dow > 6){
  2541     0689  0823               	movf	_dow,w
  2542     068A  3A80               	xorlw	128
  2543     068B  3E79               	addlw	-135
  2544     068C  1C03               	skipc
  2545     068D  2E8F               	goto	u2121
  2546     068E  2E90               	goto	u2120
  2547     068F                     u2121:
  2548     068F  2E92               	goto	l2333
  2549     0690                     u2120:
  2550     0690                     l2331:
  2551                           
  2552                           ;maestro.c: 241:                         dow = 6;
  2553     0690  3006               	movlw	6
  2554     0691  00A3               	movwf	_dow
  2555     0692                     l2333:
  2556                           
  2557                           ;maestro.c: 244:                 if(PORTAbits.RA2 == 1)
  2558     0692  1D05               	btfss	5,2	;volatile
  2559     0693  2E95               	goto	u2131
  2560     0694  2E96               	goto	u2130
  2561     0695                     u2131:
  2562     0695  2EB0               	goto	l2345
  2563     0696                     u2130:
  2564     0696                     l129:
  2565     0696  1905               	btfsc	5,2	;volatile
  2566     0697  2E99               	goto	u2141
  2567     0698  2E9A               	goto	u2140
  2568     0699                     u2141:
  2569     0699  2E96               	goto	l129
  2570     069A                     u2140:
  2571     069A                     l2337:
  2572                           
  2573                           ;maestro.c: 247:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2574     069A  3034               	movlw	52
  2575     069B  1283               	bcf	3,5	;RP0=0, select bank0
  2576     069C  1303               	bcf	3,6	;RP1=0, select bank0
  2577     069D  00D5               	movwf	??_CLK_CONFIG+1
  2578     069E  30F1               	movlw	241
  2579     069F  00D4               	movwf	??_CLK_CONFIG
  2580     06A0                     u2537:
  2581     06A0  0BD4               	decfsz	??_CLK_CONFIG,f
  2582     06A1  2EA0               	goto	u2537
  2583     06A2  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2584     06A3  2EA0               	goto	u2537
  2585     06A4                     l2339:
  2586                           
  2587                           ;maestro.c: 248:                     dow--;
  2588     06A4  30FF               	movlw	255
  2589     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2590     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2591     06A7  00D4               	movwf	??_CLK_CONFIG
  2592     06A8  0854               	movf	??_CLK_CONFIG,w
  2593     06A9  07A3               	addwf	_dow,f
  2594     06AA                     l2341:
  2595                           
  2596                           ;maestro.c: 249:                     if(dow == -1){
  2597     06AA  0A23               	incf	_dow,w
  2598     06AB  1D03               	btfss	3,2
  2599     06AC  2EAE               	goto	u2151
  2600     06AD  2EAF               	goto	u2150
  2601     06AE                     u2151:
  2602     06AE  2EB0               	goto	l2345
  2603     06AF                     u2150:
  2604     06AF                     l2343:
  2605                           
  2606                           ;maestro.c: 250:                         dow = 0;
  2607     06AF  01A3               	clrf	_dow
  2608     06B0                     l2345:
  2609                           
  2610                           ;maestro.c: 254:     if(selector == 5)
  2611     06B0  3005               	movlw	5
  2612     06B1  0627               	xorwf	_selector,w
  2613     06B2  1D03               	btfss	3,2
  2614     06B3  2EB5               	goto	u2161
  2615     06B4  2EB6               	goto	u2160
  2616     06B5                     u2161:
  2617     06B5  2F17               	goto	l2377
  2618     06B6                     u2160:
  2619     06B6                     l2347:
  2620                           
  2621                           ;maestro.c: 255:     {;maestro.c: 256:        Lcd_Set_Cursor(1,1);
  2622     06B6  01F4               	clrf	Lcd_Set_Cursor@b
  2623     06B7  0AF4               	incf	Lcd_Set_Cursor@b,f
  2624     06B8  3001               	movlw	1
  2625     06B9  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  2626     06BE                     l2349:
  2627                           
  2628                           ;maestro.c: 257:                 sprintf(buffer, "Hora: %02u", horas);
  2629     06BE  3059               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2630     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2631     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2632     06C1  00BD               	movwf	sprintf@f
  2633     06C2  0822               	movf	_horas,w
  2634     06C3  00BE               	movwf	?_sprintf+1
  2635     06C4  01BF               	clrf	?_sprintf+2
  2636     06C5  1BBE               	btfsc	?_sprintf+1,7
  2637     06C6  03BF               	decf	?_sprintf+2,f
  2638     06C7  3029               	movlw	(low (_buffer| 0))& (0+255)
  2639     06C8  120A  118A  21C8  120A  118A  	fcall	_sprintf
  2640     06CD                     l2351:
  2641                           
  2642                           ;maestro.c: 258:                 Lcd_Write_String(buffer);
  2643     06CD  3029               	movlw	(low (_buffer| 0))& (0+255)
  2644     06CE  00F5               	movwf	Lcd_Write_String@a
  2645     06CF  3000               	movlw	0
  2646     06D0  00F6               	movwf	Lcd_Write_String@a+1
  2647     06D1  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  2648     06D6                     l2353:
  2649                           
  2650                           ;maestro.c: 259:                 if(PORTAbits.RA1 == 1)
  2651     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2652     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2653     06D8  1C85               	btfss	5,1	;volatile
  2654     06D9  2EDB               	goto	u2171
  2655     06DA  2EDC               	goto	u2170
  2656     06DB                     u2171:
  2657     06DB  2EF9               	goto	l2365
  2658     06DC                     u2170:
  2659     06DC                     l135:
  2660     06DC  1885               	btfsc	5,1	;volatile
  2661     06DD  2EDF               	goto	u2181
  2662     06DE  2EE0               	goto	u2180
  2663     06DF                     u2181:
  2664     06DF  2EDC               	goto	l135
  2665     06E0                     u2180:
  2666     06E0                     l2357:
  2667                           
  2668                           ;maestro.c: 262:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2669     06E0  3034               	movlw	52
  2670     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2671     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2672     06E3  00D5               	movwf	??_CLK_CONFIG+1
  2673     06E4  30F1               	movlw	241
  2674     06E5  00D4               	movwf	??_CLK_CONFIG
  2675     06E6                     u2547:
  2676     06E6  0BD4               	decfsz	??_CLK_CONFIG,f
  2677     06E7  2EE6               	goto	u2547
  2678     06E8  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2679     06E9  2EE6               	goto	u2547
  2680     06EA                     l2359:
  2681                           
  2682                           ;maestro.c: 263:                     horas++;
  2683     06EA  3001               	movlw	1
  2684     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2685     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2686     06ED  00D4               	movwf	??_CLK_CONFIG
  2687     06EE  0854               	movf	??_CLK_CONFIG,w
  2688     06EF  07A2               	addwf	_horas,f
  2689     06F0                     l2361:
  2690                           
  2691                           ;maestro.c: 264:                     if(horas > 23){
  2692     06F0  0822               	movf	_horas,w
  2693     06F1  3A80               	xorlw	128
  2694     06F2  3E68               	addlw	-152
  2695     06F3  1C03               	skipc
  2696     06F4  2EF6               	goto	u2191
  2697     06F5  2EF7               	goto	u2190
  2698     06F6                     u2191:
  2699     06F6  2EF9               	goto	l2365
  2700     06F7                     u2190:
  2701     06F7                     l2363:
  2702                           
  2703                           ;maestro.c: 265:                         horas = 23;
  2704     06F7  3017               	movlw	23
  2705     06F8  00A2               	movwf	_horas
  2706     06F9                     l2365:
  2707                           
  2708                           ;maestro.c: 268:                 if(PORTAbits.RA2 == 1)
  2709     06F9  1D05               	btfss	5,2	;volatile
  2710     06FA  2EFC               	goto	u2201
  2711     06FB  2EFD               	goto	u2200
  2712     06FC                     u2201:
  2713     06FC  2F17               	goto	l2377
  2714     06FD                     u2200:
  2715     06FD                     l140:
  2716     06FD  1905               	btfsc	5,2	;volatile
  2717     06FE  2F00               	goto	u2211
  2718     06FF  2F01               	goto	u2210
  2719     0700                     u2211:
  2720     0700  2EFD               	goto	l140
  2721     0701                     u2210:
  2722     0701                     l2369:
  2723                           
  2724                           ;maestro.c: 271:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2725     0701  3034               	movlw	52
  2726     0702  1283               	bcf	3,5	;RP0=0, select bank0
  2727     0703  1303               	bcf	3,6	;RP1=0, select bank0
  2728     0704  00D5               	movwf	??_CLK_CONFIG+1
  2729     0705  30F1               	movlw	241
  2730     0706  00D4               	movwf	??_CLK_CONFIG
  2731     0707                     u2557:
  2732     0707  0BD4               	decfsz	??_CLK_CONFIG,f
  2733     0708  2F07               	goto	u2557
  2734     0709  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2735     070A  2F07               	goto	u2557
  2736     070B                     l2371:
  2737                           
  2738                           ;maestro.c: 272:                     horas--;
  2739     070B  30FF               	movlw	255
  2740     070C  1283               	bcf	3,5	;RP0=0, select bank0
  2741     070D  1303               	bcf	3,6	;RP1=0, select bank0
  2742     070E  00D4               	movwf	??_CLK_CONFIG
  2743     070F  0854               	movf	??_CLK_CONFIG,w
  2744     0710  07A2               	addwf	_horas,f
  2745     0711                     l2373:
  2746                           
  2747                           ;maestro.c: 273:                     if(horas == -1){
  2748     0711  0A22               	incf	_horas,w
  2749     0712  1D03               	btfss	3,2
  2750     0713  2F15               	goto	u2221
  2751     0714  2F16               	goto	u2220
  2752     0715                     u2221:
  2753     0715  2F17               	goto	l2377
  2754     0716                     u2220:
  2755     0716                     l2375:
  2756                           
  2757                           ;maestro.c: 274:                         horas = 0;
  2758     0716  01A2               	clrf	_horas
  2759     0717                     l2377:
  2760                           
  2761                           ;maestro.c: 278:     if (selector == 6)
  2762     0717  3006               	movlw	6
  2763     0718  0627               	xorwf	_selector,w
  2764     0719  1D03               	btfss	3,2
  2765     071A  2F1C               	goto	u2231
  2766     071B  2F1D               	goto	u2230
  2767     071C                     u2231:
  2768     071C  2F7E               	goto	l2409
  2769     071D                     u2230:
  2770     071D                     l2379:
  2771                           
  2772                           ;maestro.c: 279:     {;maestro.c: 280:      Lcd_Set_Cursor(1,1);
  2773     071D  01F4               	clrf	Lcd_Set_Cursor@b
  2774     071E  0AF4               	incf	Lcd_Set_Cursor@b,f
  2775     071F  3001               	movlw	1
  2776     0720  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  2777     0725                     l2381:
  2778                           
  2779                           ;maestro.c: 281:                 sprintf(buffer, "minutosuto: %02u", minutos);
  2780     0725  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2781     0726  1283               	bcf	3,5	;RP0=0, select bank0
  2782     0727  1303               	bcf	3,6	;RP1=0, select bank0
  2783     0728  00BD               	movwf	sprintf@f
  2784     0729  0821               	movf	_minutos,w
  2785     072A  00BE               	movwf	?_sprintf+1
  2786     072B  01BF               	clrf	?_sprintf+2
  2787     072C  1BBE               	btfsc	?_sprintf+1,7
  2788     072D  03BF               	decf	?_sprintf+2,f
  2789     072E  3029               	movlw	(low (_buffer| 0))& (0+255)
  2790     072F  120A  118A  21C8  120A  118A  	fcall	_sprintf
  2791     0734                     l2383:
  2792                           
  2793                           ;maestro.c: 282:                 Lcd_Write_String(buffer);
  2794     0734  3029               	movlw	(low (_buffer| 0))& (0+255)
  2795     0735  00F5               	movwf	Lcd_Write_String@a
  2796     0736  3000               	movlw	0
  2797     0737  00F6               	movwf	Lcd_Write_String@a+1
  2798     0738  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  2799     073D                     l2385:
  2800                           
  2801                           ;maestro.c: 283:                 if(PORTAbits.RA1 == 1)
  2802     073D  1283               	bcf	3,5	;RP0=0, select bank0
  2803     073E  1303               	bcf	3,6	;RP1=0, select bank0
  2804     073F  1C85               	btfss	5,1	;volatile
  2805     0740  2F42               	goto	u2241
  2806     0741  2F43               	goto	u2240
  2807     0742                     u2241:
  2808     0742  2F60               	goto	l2397
  2809     0743                     u2240:
  2810     0743                     l146:
  2811     0743  1885               	btfsc	5,1	;volatile
  2812     0744  2F46               	goto	u2251
  2813     0745  2F47               	goto	u2250
  2814     0746                     u2251:
  2815     0746  2F43               	goto	l146
  2816     0747                     u2250:
  2817     0747                     l2389:
  2818                           
  2819                           ;maestro.c: 286:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2820     0747  3034               	movlw	52
  2821     0748  1283               	bcf	3,5	;RP0=0, select bank0
  2822     0749  1303               	bcf	3,6	;RP1=0, select bank0
  2823     074A  00D5               	movwf	??_CLK_CONFIG+1
  2824     074B  30F1               	movlw	241
  2825     074C  00D4               	movwf	??_CLK_CONFIG
  2826     074D                     u2567:
  2827     074D  0BD4               	decfsz	??_CLK_CONFIG,f
  2828     074E  2F4D               	goto	u2567
  2829     074F  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2830     0750  2F4D               	goto	u2567
  2831     0751                     l2391:
  2832                           
  2833                           ;maestro.c: 287:                     minutos++;
  2834     0751  3001               	movlw	1
  2835     0752  1283               	bcf	3,5	;RP0=0, select bank0
  2836     0753  1303               	bcf	3,6	;RP1=0, select bank0
  2837     0754  00D4               	movwf	??_CLK_CONFIG
  2838     0755  0854               	movf	??_CLK_CONFIG,w
  2839     0756  07A1               	addwf	_minutos,f
  2840     0757                     l2393:
  2841                           
  2842                           ;maestro.c: 288:                     if(minutos > 59){
  2843     0757  0821               	movf	_minutos,w
  2844     0758  3A80               	xorlw	128
  2845     0759  3E44               	addlw	-188
  2846     075A  1C03               	skipc
  2847     075B  2F5D               	goto	u2261
  2848     075C  2F5E               	goto	u2260
  2849     075D                     u2261:
  2850     075D  2F60               	goto	l2397
  2851     075E                     u2260:
  2852     075E                     l2395:
  2853                           
  2854                           ;maestro.c: 289:                         minutos = 59;
  2855     075E  303B               	movlw	59
  2856     075F  00A1               	movwf	_minutos
  2857     0760                     l2397:
  2858                           
  2859                           ;maestro.c: 292:                 if(PORTAbits.RA2 == 1)
  2860     0760  1D05               	btfss	5,2	;volatile
  2861     0761  2F63               	goto	u2271
  2862     0762  2F64               	goto	u2270
  2863     0763                     u2271:
  2864     0763  2F7E               	goto	l2409
  2865     0764                     u2270:
  2866     0764                     l151:
  2867     0764  1905               	btfsc	5,2	;volatile
  2868     0765  2F67               	goto	u2281
  2869     0766  2F68               	goto	u2280
  2870     0767                     u2281:
  2871     0767  2F64               	goto	l151
  2872     0768                     u2280:
  2873     0768                     l2401:
  2874                           
  2875                           ;maestro.c: 295:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2876     0768  3034               	movlw	52
  2877     0769  1283               	bcf	3,5	;RP0=0, select bank0
  2878     076A  1303               	bcf	3,6	;RP1=0, select bank0
  2879     076B  00D5               	movwf	??_CLK_CONFIG+1
  2880     076C  30F1               	movlw	241
  2881     076D  00D4               	movwf	??_CLK_CONFIG
  2882     076E                     u2577:
  2883     076E  0BD4               	decfsz	??_CLK_CONFIG,f
  2884     076F  2F6E               	goto	u2577
  2885     0770  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2886     0771  2F6E               	goto	u2577
  2887     0772                     l2403:
  2888                           
  2889                           ;maestro.c: 296:                     minutos--;
  2890     0772  30FF               	movlw	255
  2891     0773  1283               	bcf	3,5	;RP0=0, select bank0
  2892     0774  1303               	bcf	3,6	;RP1=0, select bank0
  2893     0775  00D4               	movwf	??_CLK_CONFIG
  2894     0776  0854               	movf	??_CLK_CONFIG,w
  2895     0777  07A1               	addwf	_minutos,f
  2896     0778                     l2405:
  2897                           
  2898                           ;maestro.c: 297:                     if(minutos == -1){
  2899     0778  0A21               	incf	_minutos,w
  2900     0779  1D03               	btfss	3,2
  2901     077A  2F7C               	goto	u2291
  2902     077B  2F7D               	goto	u2290
  2903     077C                     u2291:
  2904     077C  2F7E               	goto	l2409
  2905     077D                     u2290:
  2906     077D                     l2407:
  2907                           
  2908                           ;maestro.c: 298:                         minutos = 0;
  2909     077D  01A1               	clrf	_minutos
  2910     077E                     l2409:
  2911                           
  2912                           ;maestro.c: 302:     if (selector == 7)
  2913     077E  3007               	movlw	7
  2914     077F  0627               	xorwf	_selector,w
  2915     0780  1D03               	btfss	3,2
  2916     0781  2F83               	goto	u2301
  2917     0782  2F84               	goto	u2300
  2918     0783                     u2301:
  2919     0783  2FE5               	goto	l166
  2920     0784                     u2300:
  2921     0784                     l2411:
  2922                           
  2923                           ;maestro.c: 303:     {;maestro.c: 304:      Lcd_Set_Cursor(1,1);
  2924     0784  01F4               	clrf	Lcd_Set_Cursor@b
  2925     0785  0AF4               	incf	Lcd_Set_Cursor@b,f
  2926     0786  3001               	movlw	1
  2927     0787  120A  158A  2772  120A  118A  	fcall	_Lcd_Set_Cursor
  2928     078C                     l2413:
  2929                           
  2930                           ;maestro.c: 305:                 sprintf(buffer, "Segundo: %02u", segundos);
  2931     078C  304B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2932     078D  1283               	bcf	3,5	;RP0=0, select bank0
  2933     078E  1303               	bcf	3,6	;RP1=0, select bank0
  2934     078F  00BD               	movwf	sprintf@f
  2935     0790  0820               	movf	_segundos,w
  2936     0791  00BE               	movwf	?_sprintf+1
  2937     0792  01BF               	clrf	?_sprintf+2
  2938     0793  1BBE               	btfsc	?_sprintf+1,7
  2939     0794  03BF               	decf	?_sprintf+2,f
  2940     0795  3029               	movlw	(low (_buffer| 0))& (0+255)
  2941     0796  120A  118A  21C8  120A  118A  	fcall	_sprintf
  2942     079B                     l2415:
  2943                           
  2944                           ;maestro.c: 306:                 Lcd_Write_String(buffer);
  2945     079B  3029               	movlw	(low (_buffer| 0))& (0+255)
  2946     079C  00F5               	movwf	Lcd_Write_String@a
  2947     079D  3000               	movlw	0
  2948     079E  00F6               	movwf	Lcd_Write_String@a+1
  2949     079F  120A  158A  26EC  120A  118A  	fcall	_Lcd_Write_String
  2950     07A4                     l2417:
  2951                           
  2952                           ;maestro.c: 307:                 if(PORTAbits.RA1 == 1)
  2953     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  2954     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  2955     07A6  1C85               	btfss	5,1	;volatile
  2956     07A7  2FA9               	goto	u2311
  2957     07A8  2FAA               	goto	u2310
  2958     07A9                     u2311:
  2959     07A9  2FC7               	goto	l2429
  2960     07AA                     u2310:
  2961     07AA                     l157:
  2962     07AA  1885               	btfsc	5,1	;volatile
  2963     07AB  2FAD               	goto	u2321
  2964     07AC  2FAE               	goto	u2320
  2965     07AD                     u2321:
  2966     07AD  2FAA               	goto	l157
  2967     07AE                     u2320:
  2968     07AE                     l2421:
  2969                           
  2970                           ;maestro.c: 310:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2971     07AE  3034               	movlw	52
  2972     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  2973     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  2974     07B1  00D5               	movwf	??_CLK_CONFIG+1
  2975     07B2  30F1               	movlw	241
  2976     07B3  00D4               	movwf	??_CLK_CONFIG
  2977     07B4                     u2587:
  2978     07B4  0BD4               	decfsz	??_CLK_CONFIG,f
  2979     07B5  2FB4               	goto	u2587
  2980     07B6  0BD5               	decfsz	??_CLK_CONFIG+1,f
  2981     07B7  2FB4               	goto	u2587
  2982     07B8                     l2423:
  2983                           
  2984                           ;maestro.c: 311:                     segundos++;
  2985     07B8  3001               	movlw	1
  2986     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  2987     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  2988     07BB  00D4               	movwf	??_CLK_CONFIG
  2989     07BC  0854               	movf	??_CLK_CONFIG,w
  2990     07BD  07A0               	addwf	_segundos,f
  2991     07BE                     l2425:
  2992                           
  2993                           ;maestro.c: 312:                     if(segundos > 59){
  2994     07BE  0820               	movf	_segundos,w
  2995     07BF  3A80               	xorlw	128
  2996     07C0  3E44               	addlw	-188
  2997     07C1  1C03               	skipc
  2998     07C2  2FC4               	goto	u2331
  2999     07C3  2FC5               	goto	u2330
  3000     07C4                     u2331:
  3001     07C4  2FC7               	goto	l2429
  3002     07C5                     u2330:
  3003     07C5                     l2427:
  3004                           
  3005                           ;maestro.c: 313:                         segundos = 59;
  3006     07C5  303B               	movlw	59
  3007     07C6  00A0               	movwf	_segundos
  3008     07C7                     l2429:
  3009                           
  3010                           ;maestro.c: 316:                 if(PORTAbits.RA2 == 1)
  3011     07C7  1D05               	btfss	5,2	;volatile
  3012     07C8  2FCA               	goto	u2341
  3013     07C9  2FCB               	goto	u2340
  3014     07CA                     u2341:
  3015     07CA  2FE5               	goto	l166
  3016     07CB                     u2340:
  3017     07CB                     l162:
  3018     07CB  1905               	btfsc	5,2	;volatile
  3019     07CC  2FCE               	goto	u2351
  3020     07CD  2FCF               	goto	u2350
  3021     07CE                     u2351:
  3022     07CE  2FCB               	goto	l162
  3023     07CF                     u2350:
  3024     07CF                     l2433:
  3025                           
  3026                           ;maestro.c: 319:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  3027     07CF  3034               	movlw	52
  3028     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  3029     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  3030     07D2  00D5               	movwf	??_CLK_CONFIG+1
  3031     07D3  30F1               	movlw	241
  3032     07D4  00D4               	movwf	??_CLK_CONFIG
  3033     07D5                     u2597:
  3034     07D5  0BD4               	decfsz	??_CLK_CONFIG,f
  3035     07D6  2FD5               	goto	u2597
  3036     07D7  0BD5               	decfsz	??_CLK_CONFIG+1,f
  3037     07D8  2FD5               	goto	u2597
  3038     07D9                     l2435:
  3039                           
  3040                           ;maestro.c: 320:                     segundos--;
  3041     07D9  30FF               	movlw	255
  3042     07DA  1283               	bcf	3,5	;RP0=0, select bank0
  3043     07DB  1303               	bcf	3,6	;RP1=0, select bank0
  3044     07DC  00D4               	movwf	??_CLK_CONFIG
  3045     07DD  0854               	movf	??_CLK_CONFIG,w
  3046     07DE  07A0               	addwf	_segundos,f
  3047     07DF                     l2437:
  3048                           
  3049                           ;maestro.c: 321:                     if(segundos == -1){
  3050     07DF  0A20               	incf	_segundos,w
  3051     07E0  1D03               	btfss	3,2
  3052     07E1  2FE3               	goto	u2361
  3053     07E2  2FE4               	goto	u2360
  3054     07E3                     u2361:
  3055     07E3  2FE5               	goto	l166
  3056     07E4                     u2360:
  3057     07E4                     l2439:
  3058                           
  3059                           ;maestro.c: 322:                         segundos = 0;
  3060     07E4  01A0               	clrf	_segundos
  3061     07E5                     l166:
  3062     07E5  0008               	return
  3063     07E6                     __end_of_CLK_CONFIG:
  3064                           
  3065                           	psect	text6
  3066     01C8                     __ptext6:	
  3067 ;; *************** function _sprintf *****************
  3068 ;; Defined at:
  3069 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  sp              1    wreg     PTR unsigned char 
  3072 ;;		 -> buffer(20), 
  3073 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3074 ;;		 -> STR_13(3), STR_12(14), STR_11(17), STR_10(11), 
  3075 ;;		 -> STR_9(7), STR_8(15), STR_7(10), STR_6(10), 
  3076 ;;		 -> STR_5(10), STR_4(17), STR_3(15), STR_2(4), 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  sp              1   22[BANK0 ] PTR unsigned char 
  3079 ;;		 -> buffer(20), 
  3080 ;;  tmpval          4    0        struct .
  3081 ;;  width           2   20[BANK0 ] int 
  3082 ;;  val             2   16[BANK0 ] unsigned int 
  3083 ;;  len             2   14[BANK0 ] unsigned int 
  3084 ;;  cp              2   11[BANK0 ] PTR const unsigned char 
  3085 ;;		 -> STR_14(7), ?_sprintf(2), dw(77), 
  3086 ;;  c               1   19[BANK0 ] unsigned char 
  3087 ;;  flag            1   18[BANK0 ] unsigned char 
  3088 ;;  ap              1   13[BANK0 ] PTR void [1]
  3089 ;;		 -> ?_sprintf(2), 
  3090 ;;  prec            1   10[BANK0 ] char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  2    0[BANK0 ] int 
  3093 ;; Registers used:
  3094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       7       0       0       0
  3101 ;;      Locals:         0      13       0       0       0
  3102 ;;      Temps:          0       3       0       0       0
  3103 ;;      Totals:         0      23       0       0       0
  3104 ;;Total ram usage:       23 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 1
  3107 ;; This function calls:
  3108 ;;		___lwdiv
  3109 ;;		___lwmod
  3110 ;;		___wmul
  3111 ;;		_isdigit
  3112 ;; This function is called by:
  3113 ;;		_CLK_CONFIG
  3114 ;;		_DS3231_Get_DayOfWeek
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118     01C8                     _sprintf:	
  3119                           ;psect for function _sprintf
  3120                           
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3124                           ;sprintf@sp stored from wreg
  3125     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  3126     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  3127     01CA  00D3               	movwf	sprintf@sp
  3128     01CB                     l1981:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  3131     01CB  303E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3132     01CC  00CA               	movwf	sprintf@ap
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3135     01CD  2C0E               	goto	l2123
  3136     01CE                     l1983:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3139     01CE  3025               	movlw	37
  3140     01CF  0650               	xorwf	sprintf@c,w
  3141     01D0  1903               	btfsc	3,2
  3142     01D1  29D3               	goto	u1611
  3143     01D2  29D4               	goto	u1610
  3144     01D3                     u1611:
  3145     01D3  29DE               	goto	l1989
  3146     01D4                     u1610:
  3147     01D4                     l1985:
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3150     01D4  0853               	movf	sprintf@sp,w
  3151     01D5  0084               	movwf	4
  3152     01D6  0850               	movf	sprintf@c,w
  3153     01D7  1383               	bcf	3,7	;select IRP bank0
  3154     01D8  0080               	movwf	0
  3155     01D9                     l1987:
  3156     01D9  3001               	movlw	1
  3157     01DA  00C4               	movwf	??_sprintf
  3158     01DB  0844               	movf	??_sprintf,w
  3159     01DC  07D3               	addwf	sprintf@sp,f
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  3162     01DD  2C0E               	goto	l2123
  3163     01DE                     l1989:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3166     01DE  01D1               	clrf	sprintf@width
  3167     01DF  01D2               	clrf	sprintf@width+1
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3170     01E0  01CF               	clrf	sprintf@flag
  3171     01E1  29E7               	goto	l1995
  3172     01E2                     l423:	
  3173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  3174                           
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  3177     01E2  154F               	bsf	sprintf@flag,2
  3178     01E3                     l1991:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  3181     01E3  3001               	movlw	1
  3182     01E4  00C4               	movwf	??_sprintf
  3183     01E5  0844               	movf	??_sprintf,w
  3184     01E6  07BD               	addwf	sprintf@f,f
  3185     01E7                     l1995:	
  3186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  3187                           
  3188     01E7  083D               	movf	sprintf@f,w
  3189     01E8  0084               	movwf	4
  3190     01E9  120A  118A  200D  120A  118A  	fcall	stringdir
  3191     01EE  00C4               	movwf	??_sprintf
  3192     01EF  01C5               	clrf	??_sprintf+1
  3193                           
  3194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3195                           ; Switch size 1, requested type "simple"
  3196                           ; Number of cases is 1, Range of values is 0 to 0
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte            4     3 (average)
  3200                           ; direct_byte           11     8 (fixed)
  3201                           ; jumptable            260     6 (fixed)
  3202                           ;	Chosen strategy is simple_byte
  3203     01F0  0845               	movf	??_sprintf+1,w
  3204     01F1  3A00               	xorlw	0	; case 0
  3205     01F2  1903               	skipnz
  3206     01F3  29F5               	goto	l2537
  3207     01F4  29FA               	goto	l1997
  3208     01F5                     l2537:
  3209                           
  3210                           ; Switch size 1, requested type "simple"
  3211                           ; Number of cases is 1, Range of values is 48 to 48
  3212                           ; switch strategies available:
  3213                           ; Name         Instructions Cycles
  3214                           ; simple_byte            4     3 (average)
  3215                           ; direct_byte           14    11 (fixed)
  3216                           ; jumptable            263     9 (fixed)
  3217                           ;	Chosen strategy is simple_byte
  3218     01F5  0844               	movf	??_sprintf,w
  3219     01F6  3A30               	xorlw	48	; case 48
  3220     01F7  1903               	skipnz
  3221     01F8  29E2               	goto	l423
  3222     01F9  29FA               	goto	l1997
  3223     01FA                     l1997:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3226     01FA  083D               	movf	sprintf@f,w
  3227     01FB  0084               	movwf	4
  3228     01FC  120A  118A  200D  120A  118A  	fcall	stringdir
  3229     0201  120A  158A  2545  120A  118A  	fcall	_isdigit
  3230     0206  1C03               	btfss	3,0
  3231     0207  2A09               	goto	u1621
  3232     0208  2A0A               	goto	u1620
  3233     0209                     u1621:
  3234     0209  2AD0               	goto	l2045
  3235     020A                     u1620:
  3236     020A                     l1999:
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3239     020A  1283               	bcf	3,5	;RP0=0, select bank0
  3240     020B  1303               	bcf	3,6	;RP1=0, select bank0
  3241     020C  01D1               	clrf	sprintf@width
  3242     020D  01D2               	clrf	sprintf@width+1
  3243     020E                     l2001:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3246     020E  300A               	movlw	10
  3247     020F  00F0               	movwf	___wmul@multiplier
  3248     0210  3000               	movlw	0
  3249     0211  00F1               	movwf	___wmul@multiplier+1
  3250     0212  1283               	bcf	3,5	;RP0=0, select bank0
  3251     0213  1303               	bcf	3,6	;RP1=0, select bank0
  3252     0214  0852               	movf	sprintf@width+1,w
  3253     0215  00F3               	movwf	___wmul@multiplicand+1
  3254     0216  0851               	movf	sprintf@width,w
  3255     0217  00F2               	movwf	___wmul@multiplicand
  3256     0218  120A  158A  25F2  120A  118A  	fcall	___wmul
  3257     021D  0871               	movf	?___wmul+1,w
  3258     021E  1283               	bcf	3,5	;RP0=0, select bank0
  3259     021F  1303               	bcf	3,6	;RP1=0, select bank0
  3260     0220  00D2               	movwf	sprintf@width+1
  3261     0221  0870               	movf	?___wmul,w
  3262     0222  00D1               	movwf	sprintf@width
  3263     0223                     l2003:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3266     0223  083D               	movf	sprintf@f,w
  3267     0224  0084               	movwf	4
  3268     0225  120A  118A  200D  120A  118A  	fcall	stringdir
  3269     022A  3ED0               	addlw	208
  3270     022B  00C4               	movwf	??_sprintf
  3271     022C  30FF               	movlw	255
  3272     022D  1803               	skipnc
  3273     022E  3000               	movlw	0
  3274     022F  00C5               	movwf	??_sprintf+1
  3275     0230  0844               	movf	??_sprintf,w
  3276     0231  07D1               	addwf	sprintf@width,f
  3277     0232  1803               	skipnc
  3278     0233  0AD2               	incf	sprintf@width+1,f
  3279     0234  0845               	movf	??_sprintf+1,w
  3280     0235  07D2               	addwf	sprintf@width+1,f
  3281     0236                     l2005:
  3282     0236  3001               	movlw	1
  3283     0237  00C4               	movwf	??_sprintf
  3284     0238  0844               	movf	??_sprintf,w
  3285     0239  07BD               	addwf	sprintf@f,f
  3286     023A                     l2007:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3289     023A  083D               	movf	sprintf@f,w
  3290     023B  0084               	movwf	4
  3291     023C  120A  118A  200D  120A  118A  	fcall	stringdir
  3292     0241  120A  158A  2545  120A  118A  	fcall	_isdigit
  3293     0246  1803               	btfsc	3,0
  3294     0247  2A49               	goto	u1631
  3295     0248  2A4A               	goto	u1630
  3296     0249                     u1631:
  3297     0249  2A0E               	goto	l2001
  3298     024A                     u1630:
  3299     024A  2AD0               	goto	l2045
  3300     024B                     l2009:
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  3303     024B  084A               	movf	sprintf@ap,w
  3304     024C  0084               	movwf	4
  3305     024D  1383               	bcf	3,7	;select IRP bank0
  3306     024E  0800               	movf	0,w
  3307     024F  00C8               	movwf	sprintf@cp
  3308     0250  3000               	movlw	0
  3309     0251  00C9               	movwf	sprintf@cp+1
  3310     0252                     l2011:
  3311     0252  3001               	movlw	1
  3312     0253  00C4               	movwf	??_sprintf
  3313     0254  0844               	movf	??_sprintf,w
  3314     0255  07CA               	addwf	sprintf@ap,f
  3315     0256                     l2013:
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  3318     0256  0848               	movf	sprintf@cp,w
  3319     0257  0449               	iorwf	sprintf@cp+1,w
  3320     0258  1D03               	btfss	3,2
  3321     0259  2A5B               	goto	u1641
  3322     025A  2A5C               	goto	u1640
  3323     025B                     u1641:
  3324     025B  2A60               	goto	l2017
  3325     025C                     u1640:
  3326     025C                     l2015:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  3329     025C  3082               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3330     025D  00C8               	movwf	sprintf@cp
  3331     025E  3080               	movlw	128
  3332     025F  00C9               	movwf	sprintf@cp+1
  3333     0260                     l2017:
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  3336     0260  01CB               	clrf	sprintf@len
  3337     0261  01CC               	clrf	sprintf@len+1
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  3340     0262  2A69               	goto	l2021
  3341     0263                     l2019:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 773:     len++;
  3344     0263  3001               	movlw	1
  3345     0264  07CB               	addwf	sprintf@len,f
  3346     0265  1803               	skipnc
  3347     0266  0ACC               	incf	sprintf@len+1,f
  3348     0267  3000               	movlw	0
  3349     0268  07CC               	addwf	sprintf@len+1,f
  3350     0269                     l2021:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  3353     0269  084B               	movf	sprintf@len,w
  3354     026A  0748               	addwf	sprintf@cp,w
  3355     026B  0084               	movwf	4
  3356     026C  0849               	movf	sprintf@cp+1,w
  3357     026D  1803               	skipnc
  3358     026E  0A49               	incf	sprintf@cp+1,w
  3359     026F  00FF               	movwf	btemp+1
  3360     0270  120A  118A  2003  120A  118A  	fcall	stringtab
  3361     0275  3A00               	xorlw	0
  3362     0276  1D03               	skipz
  3363     0277  2A79               	goto	u1651
  3364     0278  2A7A               	goto	u1650
  3365     0279                     u1651:
  3366     0279  2A63               	goto	l2019
  3367     027A                     u1650:
  3368     027A                     l2023:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  3371     027A  0852               	movf	sprintf@width+1,w
  3372     027B  024C               	subwf	sprintf@len+1,w
  3373     027C  1D03               	skipz
  3374     027D  2A80               	goto	u1665
  3375     027E  0851               	movf	sprintf@width,w
  3376     027F  024B               	subwf	sprintf@len,w
  3377     0280                     u1665:
  3378     0280  1803               	skipnc
  3379     0281  2A83               	goto	u1661
  3380     0282  2A84               	goto	u1660
  3381     0283                     u1661:
  3382     0283  2A8B               	goto	l2027
  3383     0284                     u1660:
  3384     0284                     l2025:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  3387     0284  084B               	movf	sprintf@len,w
  3388     0285  02D1               	subwf	sprintf@width,f
  3389     0286  084C               	movf	sprintf@len+1,w
  3390     0287  1C03               	skipc
  3391     0288  03D2               	decf	sprintf@width+1,f
  3392     0289  02D2               	subwf	sprintf@width+1,f
  3393     028A  2A97               	goto	l2033
  3394     028B                     l2027:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  3397     028B  01D1               	clrf	sprintf@width
  3398     028C  01D2               	clrf	sprintf@width+1
  3399     028D  2A97               	goto	l2033
  3400     028E                     l2029:
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  3403     028E  0853               	movf	sprintf@sp,w
  3404     028F  0084               	movwf	4
  3405     0290  3020               	movlw	32
  3406     0291  1383               	bcf	3,7	;select IRP bank0
  3407     0292  0080               	movwf	0
  3408     0293                     l2031:
  3409     0293  3001               	movlw	1
  3410     0294  00C4               	movwf	??_sprintf
  3411     0295  0844               	movf	??_sprintf,w
  3412     0296  07D3               	addwf	sprintf@sp,f
  3413     0297                     l2033:
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  3416     0297  30FF               	movlw	255
  3417     0298  07D1               	addwf	sprintf@width,f
  3418     0299  1803               	skipnc
  3419     029A  0AD2               	incf	sprintf@width+1,f
  3420     029B  30FF               	movlw	255
  3421     029C  07D2               	addwf	sprintf@width+1,f
  3422     029D  0A51               	incf	sprintf@width,w
  3423     029E  1D03               	skipz
  3424     029F  2AA4               	goto	u1671
  3425     02A0  0A52               	incf	sprintf@width+1,w
  3426     02A1  1D03               	btfss	3,2
  3427     02A2  2AA4               	goto	u1671
  3428     02A3  2AA5               	goto	u1670
  3429     02A4                     u1671:
  3430     02A4  2A8E               	goto	l2029
  3431     02A5                     u1670:
  3432     02A5  2ABF               	goto	l2041
  3433     02A6                     l2035:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  3436     02A6  0849               	movf	sprintf@cp+1,w
  3437     02A7  00FF               	movwf	btemp+1
  3438     02A8  0848               	movf	sprintf@cp,w
  3439     02A9  0084               	movwf	4
  3440     02AA  120A  118A  2003  120A  118A  	fcall	stringtab
  3441     02AF  00C4               	movwf	??_sprintf
  3442     02B0  0853               	movf	sprintf@sp,w
  3443     02B1  0084               	movwf	4
  3444     02B2  0844               	movf	??_sprintf,w
  3445     02B3  1383               	bcf	3,7	;select IRP bank0
  3446     02B4  0080               	movwf	0
  3447     02B5                     l2037:
  3448     02B5  3001               	movlw	1
  3449     02B6  07C8               	addwf	sprintf@cp,f
  3450     02B7  1803               	skipnc
  3451     02B8  0AC9               	incf	sprintf@cp+1,f
  3452     02B9  3000               	movlw	0
  3453     02BA  07C9               	addwf	sprintf@cp+1,f
  3454     02BB                     l2039:
  3455     02BB  3001               	movlw	1
  3456     02BC  00C4               	movwf	??_sprintf
  3457     02BD  0844               	movf	??_sprintf,w
  3458     02BE  07D3               	addwf	sprintf@sp,f
  3459     02BF                     l2041:
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  3462     02BF  3001               	movlw	1
  3463     02C0  02CB               	subwf	sprintf@len,f
  3464     02C1  3000               	movlw	0
  3465     02C2  1C03               	skipc
  3466     02C3  03CC               	decf	sprintf@len+1,f
  3467     02C4  02CC               	subwf	sprintf@len+1,f
  3468     02C5  0A4B               	incf	sprintf@len,w
  3469     02C6  1D03               	skipz
  3470     02C7  2ACC               	goto	u1681
  3471     02C8  0A4C               	incf	sprintf@len+1,w
  3472     02C9  1D03               	btfss	3,2
  3473     02CA  2ACC               	goto	u1681
  3474     02CB  2ACD               	goto	u1680
  3475     02CC                     u1681:
  3476     02CC  2AA6               	goto	l2035
  3477     02CD                     u1680:
  3478     02CD  2C0E               	goto	l2123
  3479     02CE                     l450:	
  3480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 843:   case 'u':
  3481                           
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          x40;
  3484     02CE  174F               	bsf	sprintf@flag,6
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  3487     02CF  2AF5               	goto	l435
  3488     02D0                     l2045:
  3489     02D0  3001               	movlw	1
  3490     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  3491     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  3492     02D3  07BD               	addwf	sprintf@f,f
  3493     02D4  30FF               	movlw	-1
  3494     02D5  073D               	addwf	sprintf@f,w
  3495     02D6  0084               	movwf	4
  3496     02D7  120A  118A  200D  120A  118A  	fcall	stringdir
  3497     02DC  00D0               	movwf	sprintf@c
  3498     02DD  00C4               	movwf	??_sprintf
  3499     02DE  01C5               	clrf	??_sprintf+1
  3500                           
  3501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3502                           ; Switch size 1, requested type "simple"
  3503                           ; Number of cases is 1, Range of values is 0 to 0
  3504                           ; switch strategies available:
  3505                           ; Name         Instructions Cycles
  3506                           ; simple_byte            4     3 (average)
  3507                           ; direct_byte           11     8 (fixed)
  3508                           ; jumptable            260     6 (fixed)
  3509                           ;	Chosen strategy is simple_byte
  3510     02DF  0845               	movf	??_sprintf+1,w
  3511     02E0  3A00               	xorlw	0	; case 0
  3512     02E1  1903               	skipnz
  3513     02E2  2AE4               	goto	l2539
  3514     02E3  2C0E               	goto	l2123
  3515     02E4                     l2539:
  3516                           
  3517                           ; Switch size 1, requested type "simple"
  3518                           ; Number of cases is 5, Range of values is 0 to 117
  3519                           ; switch strategies available:
  3520                           ; Name         Instructions Cycles
  3521                           ; simple_byte           16     9 (average)
  3522                           ; jumptable            260     6 (fixed)
  3523                           ;	Chosen strategy is simple_byte
  3524     02E4  0844               	movf	??_sprintf,w
  3525     02E5  3A00               	xorlw	0	; case 0
  3526     02E6  1903               	skipnz
  3527     02E7  2C1E               	goto	l2125
  3528     02E8  3A64               	xorlw	100	; case 100
  3529     02E9  1903               	skipnz
  3530     02EA  2AF5               	goto	l435
  3531     02EB  3A0D               	xorlw	13	; case 105
  3532     02EC  1903               	skipnz
  3533     02ED  2AF5               	goto	l435
  3534     02EE  3A1A               	xorlw	26	; case 115
  3535     02EF  1903               	skipnz
  3536     02F0  2A4B               	goto	l2009
  3537     02F1  3A06               	xorlw	6	; case 117
  3538     02F2  1903               	skipnz
  3539     02F3  2ACE               	goto	l450
  3540     02F4  2C0E               	goto	l2123
  3541     02F5                     l435:
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x40) == 0x00)
  3544     02F5  1B4F               	btfsc	sprintf@flag,6
  3545     02F6  2AF8               	goto	u1691
  3546     02F7  2AF9               	goto	u1690
  3547     02F8                     u1691:
  3548     02F8  2B13               	goto	l2057
  3549     02F9                     u1690:
  3550     02F9                     l2047:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3553     02F9  084A               	movf	sprintf@ap,w
  3554     02FA  0084               	movwf	4
  3555     02FB  1383               	bcf	3,7	;select IRP bank0
  3556     02FC  0800               	movf	0,w
  3557     02FD  00CD               	movwf	sprintf@val
  3558     02FE  0A84               	incf	4,f
  3559     02FF  0800               	movf	0,w
  3560     0300  00CE               	movwf	sprintf@val+1
  3561     0301                     l2049:
  3562     0301  3002               	movlw	2
  3563     0302  00C4               	movwf	??_sprintf
  3564     0303  0844               	movf	??_sprintf,w
  3565     0304  07CA               	addwf	sprintf@ap,f
  3566     0305                     l2051:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3569     0305  1FCE               	btfss	sprintf@val+1,7
  3570     0306  2B08               	goto	u1701
  3571     0307  2B09               	goto	u1700
  3572     0308                     u1701:
  3573     0308  2B1F               	goto	l2061
  3574     0309                     u1700:
  3575     0309                     l2053:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3578     0309  3003               	movlw	3
  3579     030A  00C4               	movwf	??_sprintf
  3580     030B  0844               	movf	??_sprintf,w
  3581     030C  04CF               	iorwf	sprintf@flag,f
  3582     030D                     l2055:
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3585     030D  09CD               	comf	sprintf@val,f
  3586     030E  09CE               	comf	sprintf@val+1,f
  3587     030F  0ACD               	incf	sprintf@val,f
  3588     0310  1903               	skipnz
  3589     0311  0ACE               	incf	sprintf@val+1,f
  3590     0312  2B1F               	goto	l2061
  3591     0313                     l2057:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3594     0313  084A               	movf	sprintf@ap,w
  3595     0314  0084               	movwf	4
  3596     0315  1383               	bcf	3,7	;select IRP bank0
  3597     0316  0800               	movf	0,w
  3598     0317  00CD               	movwf	sprintf@val
  3599     0318  0A84               	incf	4,f
  3600     0319  0800               	movf	0,w
  3601     031A  00CE               	movwf	sprintf@val+1
  3602     031B                     l2059:
  3603     031B  3002               	movlw	2
  3604     031C  00C4               	movwf	??_sprintf
  3605     031D  0844               	movf	??_sprintf,w
  3606     031E  07CA               	addwf	sprintf@ap,f
  3607     031F                     l2061:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3610     031F  01D0               	clrf	sprintf@c
  3611     0320  0AD0               	incf	sprintf@c,f
  3612     0321                     l2067:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3615     0321  0850               	movf	sprintf@c,w
  3616     0322  00C4               	movwf	??_sprintf
  3617     0323  0744               	addwf	??_sprintf,w
  3618     0324  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3619     0325  0084               	movwf	4
  3620     0326  120A  118A  200D  120A  118A  	fcall	stringdir
  3621     032B  00C5               	movwf	??_sprintf+1
  3622     032C  120A  118A  200D  120A  118A  	fcall	stringdir
  3623     0331  00C6               	movwf	??_sprintf+2
  3624     0332  0846               	movf	??_sprintf+2,w
  3625     0333  024E               	subwf	sprintf@val+1,w
  3626     0334  1D03               	skipz
  3627     0335  2B38               	goto	u1715
  3628     0336  0845               	movf	??_sprintf+1,w
  3629     0337  024D               	subwf	sprintf@val,w
  3630     0338                     u1715:
  3631     0338  1803               	skipnc
  3632     0339  2B3B               	goto	u1711
  3633     033A  2B3C               	goto	u1710
  3634     033B                     u1711:
  3635     033B  2B3D               	goto	l2071
  3636     033C                     u1710:
  3637     033C  2B47               	goto	l2073
  3638     033D                     l2071:
  3639     033D  3001               	movlw	1
  3640     033E  00C4               	movwf	??_sprintf
  3641     033F  0844               	movf	??_sprintf,w
  3642     0340  07D0               	addwf	sprintf@c,f
  3643     0341  3005               	movlw	5
  3644     0342  0650               	xorwf	sprintf@c,w
  3645     0343  1D03               	btfss	3,2
  3646     0344  2B46               	goto	u1721
  3647     0345  2B47               	goto	u1720
  3648     0346                     u1721:
  3649     0346  2B21               	goto	l2067
  3650     0347                     u1720:
  3651     0347                     l2073:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3654     0347  0851               	movf	sprintf@width,w
  3655     0348  0452               	iorwf	sprintf@width+1,w
  3656     0349  1903               	btfsc	3,2
  3657     034A  2B4C               	goto	u1731
  3658     034B  2B4D               	goto	u1730
  3659     034C                     u1731:
  3660     034C  2B59               	goto	l457
  3661     034D                     u1730:
  3662     034D                     l2075:
  3663     034D  084F               	movf	sprintf@flag,w
  3664     034E  3903               	andlw	3
  3665     034F  1903               	btfsc	3,2
  3666     0350  2B52               	goto	u1741
  3667     0351  2B53               	goto	u1740
  3668     0352                     u1741:
  3669     0352  2B59               	goto	l457
  3670     0353                     u1740:
  3671     0353                     l2077:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3674     0353  30FF               	movlw	255
  3675     0354  07D1               	addwf	sprintf@width,f
  3676     0355  1803               	skipnc
  3677     0356  0AD2               	incf	sprintf@width+1,f
  3678     0357  30FF               	movlw	255
  3679     0358  07D2               	addwf	sprintf@width+1,f
  3680     0359                     l457:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3683     0359  0852               	movf	sprintf@width+1,w
  3684     035A  3A80               	xorlw	128
  3685     035B  3C80               	sublw	128
  3686     035C  1D03               	skipz
  3687     035D  2B60               	goto	u1755
  3688     035E  0851               	movf	sprintf@width,w
  3689     035F  0250               	subwf	sprintf@c,w
  3690     0360                     u1755:
  3691     0360  1803               	skipnc
  3692     0361  2B63               	goto	u1751
  3693     0362  2B64               	goto	u1750
  3694     0363                     u1751:
  3695     0363  2B70               	goto	l2081
  3696     0364                     u1750:
  3697     0364                     l2079:
  3698                           
  3699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3700     0364  1283               	bcf	3,5	;RP0=0, select bank0
  3701     0365  1303               	bcf	3,6	;RP1=0, select bank0
  3702     0366  0850               	movf	sprintf@c,w
  3703     0367  00C4               	movwf	??_sprintf
  3704     0368  01C5               	clrf	??_sprintf+1
  3705     0369  0844               	movf	??_sprintf,w
  3706     036A  02D1               	subwf	sprintf@width,f
  3707     036B  0845               	movf	??_sprintf+1,w
  3708     036C  1C03               	skipc
  3709     036D  03D2               	decf	sprintf@width+1,f
  3710     036E  02D2               	subwf	sprintf@width+1,f
  3711     036F  2B74               	goto	l2083
  3712     0370                     l2081:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3715     0370  1283               	bcf	3,5	;RP0=0, select bank0
  3716     0371  1303               	bcf	3,6	;RP1=0, select bank0
  3717     0372  01D1               	clrf	sprintf@width
  3718     0373  01D2               	clrf	sprintf@width+1
  3719     0374                     l2083:
  3720                           
  3721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3722     0374  1D4F               	btfss	sprintf@flag,2
  3723     0375  2B77               	goto	u1761
  3724     0376  2B78               	goto	u1760
  3725     0377                     u1761:
  3726     0377  2BA3               	goto	l2099
  3727     0378                     u1760:
  3728     0378                     l2085:
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  3731     0378  084F               	movf	sprintf@flag,w
  3732     0379  3903               	andlw	3
  3733     037A  1903               	btfsc	3,2
  3734     037B  2B7D               	goto	u1771
  3735     037C  2B7E               	goto	u1770
  3736     037D                     u1771:
  3737     037D  2B87               	goto	l2091
  3738     037E                     u1770:
  3739     037E                     l2087:
  3740                           
  3741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  3742     037E  0853               	movf	sprintf@sp,w
  3743     037F  0084               	movwf	4
  3744     0380  302D               	movlw	45
  3745     0381  1383               	bcf	3,7	;select IRP bank0
  3746     0382  0080               	movwf	0
  3747     0383                     l2089:
  3748     0383  3001               	movlw	1
  3749     0384  00C4               	movwf	??_sprintf
  3750     0385  0844               	movf	??_sprintf,w
  3751     0386  07D3               	addwf	sprintf@sp,f
  3752     0387                     l2091:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3755     0387  0851               	movf	sprintf@width,w
  3756     0388  0452               	iorwf	sprintf@width+1,w
  3757     0389  1903               	btfsc	3,2
  3758     038A  2B8C               	goto	u1781
  3759     038B  2B8D               	goto	u1780
  3760     038C                     u1781:
  3761     038C  2BCD               	goto	l2113
  3762     038D                     u1780:
  3763     038D                     l2093:
  3764                           
  3765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3766     038D  0853               	movf	sprintf@sp,w
  3767     038E  0084               	movwf	4
  3768     038F  3030               	movlw	48
  3769     0390  1383               	bcf	3,7	;select IRP bank0
  3770     0391  0080               	movwf	0
  3771     0392                     l2095:
  3772     0392  3001               	movlw	1
  3773     0393  00C4               	movwf	??_sprintf
  3774     0394  0844               	movf	??_sprintf,w
  3775     0395  07D3               	addwf	sprintf@sp,f
  3776     0396                     l2097:
  3777     0396  30FF               	movlw	255
  3778     0397  07D1               	addwf	sprintf@width,f
  3779     0398  1803               	skipnc
  3780     0399  0AD2               	incf	sprintf@width+1,f
  3781     039A  30FF               	movlw	255
  3782     039B  07D2               	addwf	sprintf@width+1,f
  3783     039C  0851               	movf	sprintf@width,w
  3784     039D  0452               	iorwf	sprintf@width+1,w
  3785     039E  1D03               	btfss	3,2
  3786     039F  2BA1               	goto	u1791
  3787     03A0  2BA2               	goto	u1790
  3788     03A1                     u1791:
  3789     03A1  2B8D               	goto	l2093
  3790     03A2                     u1790:
  3791     03A2  2BCD               	goto	l2113
  3792     03A3                     l2099:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3795     03A3  0851               	movf	sprintf@width,w
  3796     03A4  0452               	iorwf	sprintf@width+1,w
  3797     03A5  1903               	btfsc	3,2
  3798     03A6  2BA8               	goto	u1801
  3799     03A7  2BA9               	goto	u1800
  3800     03A8                     u1801:
  3801     03A8  2BBE               	goto	l2107
  3802     03A9                     u1800:
  3803     03A9                     l2101:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3806     03A9  0853               	movf	sprintf@sp,w
  3807     03AA  0084               	movwf	4
  3808     03AB  3020               	movlw	32
  3809     03AC  1383               	bcf	3,7	;select IRP bank0
  3810     03AD  0080               	movwf	0
  3811     03AE                     l2103:
  3812     03AE  3001               	movlw	1
  3813     03AF  00C4               	movwf	??_sprintf
  3814     03B0  0844               	movf	??_sprintf,w
  3815     03B1  07D3               	addwf	sprintf@sp,f
  3816     03B2                     l2105:
  3817     03B2  30FF               	movlw	255
  3818     03B3  07D1               	addwf	sprintf@width,f
  3819     03B4  1803               	skipnc
  3820     03B5  0AD2               	incf	sprintf@width+1,f
  3821     03B6  30FF               	movlw	255
  3822     03B7  07D2               	addwf	sprintf@width+1,f
  3823     03B8  0851               	movf	sprintf@width,w
  3824     03B9  0452               	iorwf	sprintf@width+1,w
  3825     03BA  1D03               	btfss	3,2
  3826     03BB  2BBD               	goto	u1811
  3827     03BC  2BBE               	goto	u1810
  3828     03BD                     u1811:
  3829     03BD  2BA9               	goto	l2101
  3830     03BE                     u1810:
  3831     03BE                     l2107:
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3834     03BE  084F               	movf	sprintf@flag,w
  3835     03BF  3903               	andlw	3
  3836     03C0  1903               	btfsc	3,2
  3837     03C1  2BC3               	goto	u1821
  3838     03C2  2BC4               	goto	u1820
  3839     03C3                     u1821:
  3840     03C3  2BCD               	goto	l2113
  3841     03C4                     u1820:
  3842     03C4                     l2109:
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3845     03C4  0853               	movf	sprintf@sp,w
  3846     03C5  0084               	movwf	4
  3847     03C6  302D               	movlw	45
  3848     03C7  1383               	bcf	3,7	;select IRP bank0
  3849     03C8  0080               	movwf	0
  3850     03C9                     l2111:
  3851     03C9  3001               	movlw	1
  3852     03CA  00C4               	movwf	??_sprintf
  3853     03CB  0844               	movf	??_sprintf,w
  3854     03CC  07D3               	addwf	sprintf@sp,f
  3855     03CD                     l2113:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3858     03CD  0850               	movf	sprintf@c,w
  3859     03CE  00C7               	movwf	sprintf@prec
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3862     03CF  2C05               	goto	l2121
  3863     03D0                     l2115:
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3866     03D0  300A               	movlw	10
  3867     03D1  00F8               	movwf	___lwmod@divisor
  3868     03D2  3000               	movlw	0
  3869     03D3  00F9               	movwf	___lwmod@divisor+1
  3870     03D4  0847               	movf	sprintf@prec,w
  3871     03D5  00C4               	movwf	??_sprintf
  3872     03D6  0744               	addwf	??_sprintf,w
  3873     03D7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3874     03D8  0084               	movwf	4
  3875     03D9  120A  118A  200D  120A  118A  	fcall	stringdir
  3876     03DE  00F0               	movwf	___lwdiv@divisor
  3877     03DF  120A  118A  200D  120A  118A  	fcall	stringdir
  3878     03E4  00F1               	movwf	___lwdiv@divisor+1
  3879     03E5  084E               	movf	sprintf@val+1,w
  3880     03E6  00F3               	movwf	___lwdiv@dividend+1
  3881     03E7  084D               	movf	sprintf@val,w
  3882     03E8  00F2               	movwf	___lwdiv@dividend
  3883     03E9  120A  158A  272E  120A  118A  	fcall	___lwdiv
  3884     03EE  0871               	movf	?___lwdiv+1,w
  3885     03EF  00FB               	movwf	___lwmod@dividend+1
  3886     03F0  0870               	movf	?___lwdiv,w
  3887     03F1  00FA               	movwf	___lwmod@dividend
  3888     03F2  120A  158A  26B2  120A  118A  	fcall	___lwmod
  3889     03F7  0878               	movf	?___lwmod,w
  3890     03F8  3E30               	addlw	48
  3891     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  3892     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  3893     03FB  00D0               	movwf	sprintf@c
  3894     03FC                     l2117:
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3897     03FC  0853               	movf	sprintf@sp,w
  3898     03FD  0084               	movwf	4
  3899     03FE  0850               	movf	sprintf@c,w
  3900     03FF  1383               	bcf	3,7	;select IRP bank0
  3901     0400  0080               	movwf	0
  3902     0401                     l2119:
  3903     0401  3001               	movlw	1
  3904     0402  00C4               	movwf	??_sprintf
  3905     0403  0844               	movf	??_sprintf,w
  3906     0404  07D3               	addwf	sprintf@sp,f
  3907     0405                     l2121:
  3908                           
  3909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3910     0405  30FF               	movlw	255
  3911     0406  00C4               	movwf	??_sprintf
  3912     0407  0844               	movf	??_sprintf,w
  3913     0408  07C7               	addwf	sprintf@prec,f
  3914     0409  0A47               	incf	sprintf@prec,w
  3915     040A  1D03               	btfss	3,2
  3916     040B  2C0D               	goto	u1831
  3917     040C  2C0E               	goto	u1830
  3918     040D                     u1831:
  3919     040D  2BD0               	goto	l2115
  3920     040E                     u1830:
  3921     040E                     l2123:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3924     040E  3001               	movlw	1
  3925     040F  07BD               	addwf	sprintf@f,f
  3926     0410  30FF               	movlw	-1
  3927     0411  073D               	addwf	sprintf@f,w
  3928     0412  0084               	movwf	4
  3929     0413  120A  118A  200D  120A  118A  	fcall	stringdir
  3930     0418  00D0               	movwf	sprintf@c
  3931     0419  0850               	movf	sprintf@c,w
  3932     041A  1D03               	btfss	3,2
  3933     041B  2C1D               	goto	u1841
  3934     041C  2C1E               	goto	u1840
  3935     041D                     u1841:
  3936     041D  29CE               	goto	l1983
  3937     041E                     u1840:
  3938     041E                     l2125:
  3939                           
  3940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3941     041E  0853               	movf	sprintf@sp,w
  3942     041F  0084               	movwf	4
  3943     0420  1383               	bcf	3,7	;select IRP bank0
  3944     0421  0180               	clrf	0
  3945     0422                     l474:
  3946     0422  0008               	return
  3947     0423                     __end_of_sprintf:
  3948                           
  3949                           	psect	text7
  3950     0D45                     __ptext7:	
  3951 ;; *************** function _isdigit *****************
  3952 ;; Defined at:
  3953 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  c               1    wreg     unsigned char 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  c               1    1[COMMON] unsigned char 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;		None               void
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3967 ;;      Params:         0       0       0       0       0
  3968 ;;      Locals:         2       0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0
  3970 ;;      Totals:         2       0       0       0       0
  3971 ;;Total ram usage:        2 bytes
  3972 ;; Hardware stack levels used: 1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_sprintf
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980     0D45                     _isdigit:	
  3981                           ;psect for function _isdigit
  3982                           
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3986                           ;isdigit@c stored from wreg
  3987     0D45  00F1               	movwf	isdigit@c
  3988     0D46                     l1861:
  3989     0D46  01F0               	clrf	_isdigit$922
  3990     0D47                     l1863:
  3991     0D47  303A               	movlw	58
  3992     0D48  0271               	subwf	isdigit@c,w
  3993     0D49  1803               	skipnc
  3994     0D4A  2D4C               	goto	u1331
  3995     0D4B  2D4D               	goto	u1330
  3996     0D4C                     u1331:
  3997     0D4C  2D55               	goto	l1869
  3998     0D4D                     u1330:
  3999     0D4D                     l1865:
  4000     0D4D  3030               	movlw	48
  4001     0D4E  0271               	subwf	isdigit@c,w
  4002     0D4F  1C03               	skipc
  4003     0D50  2D52               	goto	u1341
  4004     0D51  2D53               	goto	u1340
  4005     0D52                     u1341:
  4006     0D52  2D55               	goto	l1869
  4007     0D53                     u1340:
  4008     0D53                     l1867:
  4009     0D53  01F0               	clrf	_isdigit$922
  4010     0D54  0AF0               	incf	_isdigit$922,f
  4011     0D55                     l1869:
  4012     0D55  0C70               	rrf	_isdigit$922,w
  4013     0D56                     l931:
  4014     0D56  0008               	return
  4015     0D57                     __end_of_isdigit:
  4016                           
  4017                           	psect	text8
  4018     0DF2                     __ptext8:	
  4019 ;; *************** function ___wmul *****************
  4020 ;; Defined at:
  4021 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  multiplier      2    0[COMMON] unsigned int 
  4024 ;;  multiplicand    2    2[COMMON] unsigned int 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  product         2    4[COMMON] unsigned int 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  2    0[COMMON] unsigned int 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         4       0       0       0       0
  4037 ;;      Locals:         2       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         6       0       0       0       0
  4040 ;;Total ram usage:        6 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_sprintf
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049     0DF2                     ___wmul:	
  4050                           ;psect for function ___wmul
  4051                           
  4052     0DF2                     l1873:	
  4053                           ;incstack = 0
  4054                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4055                           
  4056     0DF2  01F4               	clrf	___wmul@product
  4057     0DF3  01F5               	clrf	___wmul@product+1
  4058     0DF4                     l1875:
  4059     0DF4  1C70               	btfss	___wmul@multiplier,0
  4060     0DF5  2DF7               	goto	u1351
  4061     0DF6  2DF8               	goto	u1350
  4062     0DF7                     u1351:
  4063     0DF7  2DFE               	goto	l478
  4064     0DF8                     u1350:
  4065     0DF8                     l1877:
  4066     0DF8  0872               	movf	___wmul@multiplicand,w
  4067     0DF9  07F4               	addwf	___wmul@product,f
  4068     0DFA  1803               	skipnc
  4069     0DFB  0AF5               	incf	___wmul@product+1,f
  4070     0DFC  0873               	movf	___wmul@multiplicand+1,w
  4071     0DFD  07F5               	addwf	___wmul@product+1,f
  4072     0DFE                     l478:
  4073     0DFE  3001               	movlw	1
  4074     0DFF                     u1365:
  4075     0DFF  1003               	clrc
  4076     0E00  0DF2               	rlf	___wmul@multiplicand,f
  4077     0E01  0DF3               	rlf	___wmul@multiplicand+1,f
  4078     0E02  3EFF               	addlw	-1
  4079     0E03  1D03               	skipz
  4080     0E04  2DFF               	goto	u1365
  4081     0E05                     l1879:
  4082     0E05  3001               	movlw	1
  4083     0E06                     u1375:
  4084     0E06  1003               	clrc
  4085     0E07  0CF1               	rrf	___wmul@multiplier+1,f
  4086     0E08  0CF0               	rrf	___wmul@multiplier,f
  4087     0E09  3EFF               	addlw	-1
  4088     0E0A  1D03               	skipz
  4089     0E0B  2E06               	goto	u1375
  4090     0E0C                     l1881:
  4091     0E0C  0870               	movf	___wmul@multiplier,w
  4092     0E0D  0471               	iorwf	___wmul@multiplier+1,w
  4093     0E0E  1D03               	btfss	3,2
  4094     0E0F  2E11               	goto	u1381
  4095     0E10  2E12               	goto	u1380
  4096     0E11                     u1381:
  4097     0E11  2DF4               	goto	l1875
  4098     0E12                     u1380:
  4099     0E12                     l1883:
  4100     0E12  0875               	movf	___wmul@product+1,w
  4101     0E13  00F1               	movwf	?___wmul+1
  4102     0E14  0874               	movf	___wmul@product,w
  4103     0E15  00F0               	movwf	?___wmul
  4104     0E16                     l480:
  4105     0E16  0008               	return
  4106     0E17                     __end_of___wmul:
  4107                           
  4108                           	psect	text9
  4109     0EB2                     __ptext9:	
  4110 ;; *************** function ___lwmod *****************
  4111 ;; Defined at:
  4112 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  divisor         2    8[COMMON] unsigned int 
  4115 ;;  dividend        2   10[COMMON] unsigned int 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  counter         1   13[COMMON] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2    8[COMMON] unsigned int 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4127 ;;      Params:         4       0       0       0       0
  4128 ;;      Locals:         1       0       0       0       0
  4129 ;;      Temps:          1       0       0       0       0
  4130 ;;      Totals:         6       0       0       0       0
  4131 ;;Total ram usage:        6 bytes
  4132 ;; Hardware stack levels used: 1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_sprintf
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140     0EB2                     ___lwmod:	
  4141                           ;psect for function ___lwmod
  4142                           
  4143     0EB2                     l1913:	
  4144                           ;incstack = 0
  4145                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4146                           
  4147     0EB2  0878               	movf	___lwmod@divisor,w
  4148     0EB3  0479               	iorwf	___lwmod@divisor+1,w
  4149     0EB4  1903               	btfsc	3,2
  4150     0EB5  2EB7               	goto	u1461
  4151     0EB6  2EB8               	goto	u1460
  4152     0EB7                     u1461:
  4153     0EB7  2EE7               	goto	l1931
  4154     0EB8                     u1460:
  4155     0EB8                     l1915:
  4156     0EB8  01FD               	clrf	___lwmod@counter
  4157     0EB9  0AFD               	incf	___lwmod@counter,f
  4158     0EBA  2EC6               	goto	l1921
  4159     0EBB                     l1917:
  4160     0EBB  3001               	movlw	1
  4161     0EBC                     u1475:
  4162     0EBC  1003               	clrc
  4163     0EBD  0DF8               	rlf	___lwmod@divisor,f
  4164     0EBE  0DF9               	rlf	___lwmod@divisor+1,f
  4165     0EBF  3EFF               	addlw	-1
  4166     0EC0  1D03               	skipz
  4167     0EC1  2EBC               	goto	u1475
  4168     0EC2                     l1919:
  4169     0EC2  3001               	movlw	1
  4170     0EC3  00FC               	movwf	??___lwmod
  4171     0EC4  087C               	movf	??___lwmod,w
  4172     0EC5  07FD               	addwf	___lwmod@counter,f
  4173     0EC6                     l1921:
  4174     0EC6  1FF9               	btfss	___lwmod@divisor+1,7
  4175     0EC7  2EC9               	goto	u1481
  4176     0EC8  2ECA               	goto	u1480
  4177     0EC9                     u1481:
  4178     0EC9  2EBB               	goto	l1917
  4179     0ECA                     u1480:
  4180     0ECA                     l1923:
  4181     0ECA  0879               	movf	___lwmod@divisor+1,w
  4182     0ECB  027B               	subwf	___lwmod@dividend+1,w
  4183     0ECC  1D03               	skipz
  4184     0ECD  2ED0               	goto	u1495
  4185     0ECE  0878               	movf	___lwmod@divisor,w
  4186     0ECF  027A               	subwf	___lwmod@dividend,w
  4187     0ED0                     u1495:
  4188     0ED0  1C03               	skipc
  4189     0ED1  2ED3               	goto	u1491
  4190     0ED2  2ED4               	goto	u1490
  4191     0ED3                     u1491:
  4192     0ED3  2EDA               	goto	l1927
  4193     0ED4                     u1490:
  4194     0ED4                     l1925:
  4195     0ED4  0878               	movf	___lwmod@divisor,w
  4196     0ED5  02FA               	subwf	___lwmod@dividend,f
  4197     0ED6  0879               	movf	___lwmod@divisor+1,w
  4198     0ED7  1C03               	skipc
  4199     0ED8  03FB               	decf	___lwmod@dividend+1,f
  4200     0ED9  02FB               	subwf	___lwmod@dividend+1,f
  4201     0EDA                     l1927:
  4202     0EDA  3001               	movlw	1
  4203     0EDB                     u1505:
  4204     0EDB  1003               	clrc
  4205     0EDC  0CF9               	rrf	___lwmod@divisor+1,f
  4206     0EDD  0CF8               	rrf	___lwmod@divisor,f
  4207     0EDE  3EFF               	addlw	-1
  4208     0EDF  1D03               	skipz
  4209     0EE0  2EDB               	goto	u1505
  4210     0EE1                     l1929:
  4211     0EE1  3001               	movlw	1
  4212     0EE2  02FD               	subwf	___lwmod@counter,f
  4213     0EE3  1D03               	btfss	3,2
  4214     0EE4  2EE6               	goto	u1511
  4215     0EE5  2EE7               	goto	u1510
  4216     0EE6                     u1511:
  4217     0EE6  2ECA               	goto	l1923
  4218     0EE7                     u1510:
  4219     0EE7                     l1931:
  4220     0EE7  087B               	movf	___lwmod@dividend+1,w
  4221     0EE8  00F9               	movwf	?___lwmod+1
  4222     0EE9  087A               	movf	___lwmod@dividend,w
  4223     0EEA  00F8               	movwf	?___lwmod
  4224     0EEB                     l760:
  4225     0EEB  0008               	return
  4226     0EEC                     __end_of___lwmod:
  4227                           
  4228                           	psect	text10
  4229     0F2E                     __ptext10:	
  4230 ;; *************** function ___lwdiv *****************
  4231 ;; Defined at:
  4232 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  divisor         2    0[COMMON] unsigned int 
  4235 ;;  dividend        2    2[COMMON] unsigned int 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  quotient        2    5[COMMON] unsigned int 
  4238 ;;  counter         1    7[COMMON] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2    0[COMMON] unsigned int 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         4       0       0       0       0
  4249 ;;      Locals:         3       0       0       0       0
  4250 ;;      Temps:          1       0       0       0       0
  4251 ;;      Totals:         8       0       0       0       0
  4252 ;;Total ram usage:        8 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_sprintf
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261     0F2E                     ___lwdiv:	
  4262                           ;psect for function ___lwdiv
  4263                           
  4264     0F2E                     l1887:	
  4265                           ;incstack = 0
  4266                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4267                           
  4268     0F2E  01F5               	clrf	___lwdiv@quotient
  4269     0F2F  01F6               	clrf	___lwdiv@quotient+1
  4270     0F30                     l1889:
  4271     0F30  0870               	movf	___lwdiv@divisor,w
  4272     0F31  0471               	iorwf	___lwdiv@divisor+1,w
  4273     0F32  1903               	btfsc	3,2
  4274     0F33  2F35               	goto	u1391
  4275     0F34  2F36               	goto	u1390
  4276     0F35                     u1391:
  4277     0F35  2F6D               	goto	l1909
  4278     0F36                     u1390:
  4279     0F36                     l1891:
  4280     0F36  01F7               	clrf	___lwdiv@counter
  4281     0F37  0AF7               	incf	___lwdiv@counter,f
  4282     0F38  2F44               	goto	l1897
  4283     0F39                     l1893:
  4284     0F39  3001               	movlw	1
  4285     0F3A                     u1405:
  4286     0F3A  1003               	clrc
  4287     0F3B  0DF0               	rlf	___lwdiv@divisor,f
  4288     0F3C  0DF1               	rlf	___lwdiv@divisor+1,f
  4289     0F3D  3EFF               	addlw	-1
  4290     0F3E  1D03               	skipz
  4291     0F3F  2F3A               	goto	u1405
  4292     0F40                     l1895:
  4293     0F40  3001               	movlw	1
  4294     0F41  00F4               	movwf	??___lwdiv
  4295     0F42  0874               	movf	??___lwdiv,w
  4296     0F43  07F7               	addwf	___lwdiv@counter,f
  4297     0F44                     l1897:
  4298     0F44  1FF1               	btfss	___lwdiv@divisor+1,7
  4299     0F45  2F47               	goto	u1411
  4300     0F46  2F48               	goto	u1410
  4301     0F47                     u1411:
  4302     0F47  2F39               	goto	l1893
  4303     0F48                     u1410:
  4304     0F48                     l1899:
  4305     0F48  3001               	movlw	1
  4306     0F49                     u1425:
  4307     0F49  1003               	clrc
  4308     0F4A  0DF5               	rlf	___lwdiv@quotient,f
  4309     0F4B  0DF6               	rlf	___lwdiv@quotient+1,f
  4310     0F4C  3EFF               	addlw	-1
  4311     0F4D  1D03               	skipz
  4312     0F4E  2F49               	goto	u1425
  4313     0F4F  0871               	movf	___lwdiv@divisor+1,w
  4314     0F50  0273               	subwf	___lwdiv@dividend+1,w
  4315     0F51  1D03               	skipz
  4316     0F52  2F55               	goto	u1435
  4317     0F53  0870               	movf	___lwdiv@divisor,w
  4318     0F54  0272               	subwf	___lwdiv@dividend,w
  4319     0F55                     u1435:
  4320     0F55  1C03               	skipc
  4321     0F56  2F58               	goto	u1431
  4322     0F57  2F59               	goto	u1430
  4323     0F58                     u1431:
  4324     0F58  2F60               	goto	l1905
  4325     0F59                     u1430:
  4326     0F59                     l1901:
  4327     0F59  0870               	movf	___lwdiv@divisor,w
  4328     0F5A  02F2               	subwf	___lwdiv@dividend,f
  4329     0F5B  0871               	movf	___lwdiv@divisor+1,w
  4330     0F5C  1C03               	skipc
  4331     0F5D  03F3               	decf	___lwdiv@dividend+1,f
  4332     0F5E  02F3               	subwf	___lwdiv@dividend+1,f
  4333     0F5F                     l1903:
  4334     0F5F  1475               	bsf	___lwdiv@quotient,0
  4335     0F60                     l1905:
  4336     0F60  3001               	movlw	1
  4337     0F61                     u1445:
  4338     0F61  1003               	clrc
  4339     0F62  0CF1               	rrf	___lwdiv@divisor+1,f
  4340     0F63  0CF0               	rrf	___lwdiv@divisor,f
  4341     0F64  3EFF               	addlw	-1
  4342     0F65  1D03               	skipz
  4343     0F66  2F61               	goto	u1445
  4344     0F67                     l1907:
  4345     0F67  3001               	movlw	1
  4346     0F68  02F7               	subwf	___lwdiv@counter,f
  4347     0F69  1D03               	btfss	3,2
  4348     0F6A  2F6C               	goto	u1451
  4349     0F6B  2F6D               	goto	u1450
  4350     0F6C                     u1451:
  4351     0F6C  2F48               	goto	l1899
  4352     0F6D                     u1450:
  4353     0F6D                     l1909:
  4354     0F6D  0876               	movf	___lwdiv@quotient+1,w
  4355     0F6E  00F1               	movwf	?___lwdiv+1
  4356     0F6F  0875               	movf	___lwdiv@quotient,w
  4357     0F70  00F0               	movwf	?___lwdiv
  4358     0F71                     l750:
  4359     0F71  0008               	return
  4360     0F72                     __end_of___lwdiv:
  4361                           
  4362                           	psect	text11
  4363     0D6A                     __ptext11:	
  4364 ;; *************** function ___bmul *****************
  4365 ;; Defined at:
  4366 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  multiplier      1    wreg     unsigned char 
  4369 ;;  multiplicand    1    0[COMMON] unsigned char 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  multiplier      1    3[COMMON] unsigned char 
  4372 ;;  product         1    2[COMMON] unsigned char 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      unsigned char 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4382 ;;      Params:         1       0       0       0       0
  4383 ;;      Locals:         2       0       0       0       0
  4384 ;;      Temps:          1       0       0       0       0
  4385 ;;      Totals:         4       0       0       0       0
  4386 ;;Total ram usage:        4 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_CLK_CONFIG
  4392 ;;		_DS3231_Get_DayOfWeek
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396     0D6A                     ___bmul:	
  4397                           ;psect for function ___bmul
  4398                           
  4399                           
  4400                           ;incstack = 0
  4401                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4402                           ;___bmul@multiplier stored from wreg
  4403     0D6A  00F3               	movwf	___bmul@multiplier
  4404     0D6B                     l2137:
  4405     0D6B  01F2               	clrf	___bmul@product
  4406     0D6C                     l2139:
  4407     0D6C  1C73               	btfss	___bmul@multiplier,0
  4408     0D6D  2D6F               	goto	u1851
  4409     0D6E  2D70               	goto	u1850
  4410     0D6F                     u1851:
  4411     0D6F  2D74               	goto	l2143
  4412     0D70                     u1850:
  4413     0D70                     l2141:
  4414     0D70  0870               	movf	___bmul@multiplicand,w
  4415     0D71  00F1               	movwf	??___bmul
  4416     0D72  0871               	movf	??___bmul,w
  4417     0D73  07F2               	addwf	___bmul@product,f
  4418     0D74                     l2143:
  4419     0D74  1003               	clrc
  4420     0D75  0DF0               	rlf	___bmul@multiplicand,f
  4421     0D76                     l2145:
  4422     0D76  1003               	clrc
  4423     0D77  0CF3               	rrf	___bmul@multiplier,f
  4424     0D78  0873               	movf	___bmul@multiplier,w
  4425     0D79  1D03               	btfss	3,2
  4426     0D7A  2D7C               	goto	u1861
  4427     0D7B  2D7D               	goto	u1860
  4428     0D7C                     u1861:
  4429     0D7C  2D6C               	goto	l2139
  4430     0D7D                     u1860:
  4431     0D7D                     l2147:
  4432     0D7D  0872               	movf	___bmul@product,w
  4433     0D7E                     l504:
  4434     0D7E  0008               	return
  4435     0D7F                     __end_of___bmul:
  4436                           
  4437                           	psect	text12
  4438     0EEC                     __ptext12:	
  4439 ;; *************** function _Lcd_Write_String *****************
  4440 ;; Defined at:
  4441 ;;		line 98 in file "LCD.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  a               2    5[COMMON] PTR unsigned char 
  4444 ;;		 -> buffer(20), STR_1(5), 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  i               2   10[COMMON] int 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         2       0       0       0       0
  4457 ;;      Locals:         2       0       0       0       0
  4458 ;;      Temps:          3       0       0       0       0
  4459 ;;      Totals:         7       0       0       0       0
  4460 ;;Total ram usage:        7 bytes
  4461 ;; Hardware stack levels used: 1
  4462 ;; Hardware stack levels required when called: 2
  4463 ;; This function calls:
  4464 ;;		_Lcd_Write_Char
  4465 ;; This function is called by:
  4466 ;;		_CLK_CONFIG
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470     0EEC                     _Lcd_Write_String:	
  4471                           ;psect for function _Lcd_Write_String
  4472                           
  4473     0EEC                     l1973:	
  4474                           ;incstack = 0
  4475                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4476                           
  4477                           
  4478                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4479     0EEC  01FA               	clrf	Lcd_Write_String@i
  4480     0EED  01FB               	clrf	Lcd_Write_String@i+1
  4481     0EEE  2F11               	goto	l1979
  4482     0EEF                     l1975:
  4483                           
  4484                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  4485     0EEF  087A               	movf	Lcd_Write_String@i,w
  4486     0EF0  0775               	addwf	Lcd_Write_String@a,w
  4487     0EF1  00F8               	movwf	??_Lcd_Write_String+1
  4488     0EF2  0876               	movf	Lcd_Write_String@a+1,w
  4489     0EF3  00F7               	movwf	??_Lcd_Write_String
  4490     0EF4  1803               	skipnc
  4491     0EF5  0AF7               	incf	??_Lcd_Write_String,f
  4492     0EF6  1FFA               	btfss	Lcd_Write_String@i,7
  4493     0EF7  2EF9               	goto	u1580
  4494     0EF8  03F7               	decf	??_Lcd_Write_String,f
  4495     0EF9                     u1580:
  4496     0EF9  0877               	movf	??_Lcd_Write_String,w
  4497     0EFA  00F9               	movwf	??_Lcd_Write_String+2
  4498     0EFB  0879               	movf	??_Lcd_Write_String+2,w
  4499     0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  4500     0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  4501     0EFE  00FF               	movwf	btemp+1
  4502     0EFF  0878               	movf	??_Lcd_Write_String+1,w
  4503     0F00  0084               	movwf	4
  4504     0F01  120A  118A  2003  120A  158A  	fcall	stringtab
  4505     0F06  120A  158A  2646  120A  158A  	fcall	_Lcd_Write_Char
  4506     0F0B                     l1977:
  4507     0F0B  3001               	movlw	1
  4508     0F0C  07FA               	addwf	Lcd_Write_String@i,f
  4509     0F0D  1803               	skipnc
  4510     0F0E  0AFB               	incf	Lcd_Write_String@i+1,f
  4511     0F0F  3000               	movlw	0
  4512     0F10  07FB               	addwf	Lcd_Write_String@i+1,f
  4513     0F11                     l1979:
  4514     0F11  087A               	movf	Lcd_Write_String@i,w
  4515     0F12  0775               	addwf	Lcd_Write_String@a,w
  4516     0F13  00F8               	movwf	??_Lcd_Write_String+1
  4517     0F14  0876               	movf	Lcd_Write_String@a+1,w
  4518     0F15  00F7               	movwf	??_Lcd_Write_String
  4519     0F16  1803               	skipnc
  4520     0F17  0AF7               	incf	??_Lcd_Write_String,f
  4521     0F18  1FFA               	btfss	Lcd_Write_String@i,7
  4522     0F19  2F1B               	goto	u1590
  4523     0F1A  03F7               	decf	??_Lcd_Write_String,f
  4524     0F1B                     u1590:
  4525     0F1B  0877               	movf	??_Lcd_Write_String,w
  4526     0F1C  00F9               	movwf	??_Lcd_Write_String+2
  4527     0F1D  0879               	movf	??_Lcd_Write_String+2,w
  4528     0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  4529     0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  4530     0F20  00FF               	movwf	btemp+1
  4531     0F21  0878               	movf	??_Lcd_Write_String+1,w
  4532     0F22  0084               	movwf	4
  4533     0F23  120A  118A  2003  120A  158A  	fcall	stringtab
  4534     0F28  3A00               	xorlw	0
  4535     0F29  1D03               	skipz
  4536     0F2A  2F2C               	goto	u1601
  4537     0F2B  2F2D               	goto	u1600
  4538     0F2C                     u1601:
  4539     0F2C  2EEF               	goto	l1975
  4540     0F2D                     u1600:
  4541     0F2D                     l271:
  4542     0F2D  0008               	return
  4543     0F2E                     __end_of_Lcd_Write_String:
  4544                           
  4545                           	psect	text13
  4546     0E46                     __ptext13:	
  4547 ;; *************** function _Lcd_Write_Char *****************
  4548 ;; Defined at:
  4549 ;;		line 83 in file "LCD.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  a               1    wreg     unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  a               1    4[COMMON] unsigned char 
  4554 ;;  y               1    3[COMMON] unsigned char 
  4555 ;;  temp            1    2[COMMON] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, pclath, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         0       0       0       0       0
  4566 ;;      Locals:         3       0       0       0       0
  4567 ;;      Temps:          1       0       0       0       0
  4568 ;;      Totals:         4       0       0       0       0
  4569 ;;Total ram usage:        4 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 1
  4572 ;; This function calls:
  4573 ;;		_Lcd_Port
  4574 ;; This function is called by:
  4575 ;;		_Lcd_Write_String
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579     0E46                     _Lcd_Write_Char:	
  4580                           ;psect for function _Lcd_Write_Char
  4581                           
  4582                           
  4583                           ;incstack = 0
  4584                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4585                           ;Lcd_Write_Char@a stored from wreg
  4586     0E46  00F4               	movwf	Lcd_Write_Char@a
  4587     0E47                     l1811:
  4588                           
  4589                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  4590     0E47  0874               	movf	Lcd_Write_Char@a,w
  4591     0E48  390F               	andlw	15
  4592     0E49  00F2               	movwf	Lcd_Write_Char@temp
  4593                           
  4594                           ;LCD.c: 86:     y = a & 0xF0;
  4595     0E4A  0874               	movf	Lcd_Write_Char@a,w
  4596     0E4B  39F0               	andlw	240
  4597     0E4C  00F3               	movwf	Lcd_Write_Char@y
  4598     0E4D                     l1813:
  4599                           
  4600                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  4601     0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  4602     0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  4603     0E4F  1708               	bsf	8,6	;volatile
  4604     0E50                     l1815:
  4605                           
  4606                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  4607     0E50  0873               	movf	Lcd_Write_Char@y,w
  4608     0E51  00F1               	movwf	??_Lcd_Write_Char
  4609     0E52  3004               	movlw	4
  4610     0E53                     u1315:
  4611     0E53  1003               	clrc
  4612     0E54  0CF1               	rrf	??_Lcd_Write_Char,f
  4613     0E55  3EFF               	addlw	-1
  4614     0E56  1D03               	skipz
  4615     0E57  2E53               	goto	u1315
  4616     0E58  0871               	movf	??_Lcd_Write_Char,w
  4617     0E59  120A  158A  25D0  120A  158A  	fcall	_Lcd_Port
  4618     0E5E                     l1817:
  4619                           
  4620                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  4621     0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  4622     0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  4623     0E60  1788               	bsf	8,7	;volatile
  4624     0E61                     l1819:
  4625                           
  4626                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4627     0E61  301A               	movlw	26
  4628     0E62  00F1               	movwf	??_Lcd_Write_Char
  4629     0E63                     u2607:
  4630     0E63  0BF1               	decfsz	??_Lcd_Write_Char,f
  4631     0E64  2E63               	goto	u2607
  4632     0E65  0000               	nop
  4633     0E66                     l1821:
  4634                           
  4635                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  4636     0E66  1283               	bcf	3,5	;RP0=0, select bank0
  4637     0E67  1303               	bcf	3,6	;RP1=0, select bank0
  4638     0E68  1388               	bcf	8,7	;volatile
  4639     0E69                     l1823:
  4640                           
  4641                           ;LCD.c: 92:     Lcd_Port(temp);
  4642     0E69  0872               	movf	Lcd_Write_Char@temp,w
  4643     0E6A  120A  158A  25D0  120A  158A  	fcall	_Lcd_Port
  4644     0E6F                     l1825:
  4645                           
  4646                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  4647     0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  4648     0E70  1303               	bcf	3,6	;RP1=0, select bank0
  4649     0E71  1788               	bsf	8,7	;volatile
  4650     0E72                     l1827:
  4651                           
  4652                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4653     0E72  301A               	movlw	26
  4654     0E73  00F1               	movwf	??_Lcd_Write_Char
  4655     0E74                     u2617:
  4656     0E74  0BF1               	decfsz	??_Lcd_Write_Char,f
  4657     0E75  2E74               	goto	u2617
  4658     0E76  0000               	nop
  4659     0E77                     l1829:
  4660                           
  4661                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  4662     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4663     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4664     0E79  1388               	bcf	8,7	;volatile
  4665     0E7A                     l265:
  4666     0E7A  0008               	return
  4667     0E7B                     __end_of_Lcd_Write_Char:
  4668                           
  4669                           	psect	text14
  4670     0F72                     __ptext14:	
  4671 ;; *************** function _Lcd_Set_Cursor *****************
  4672 ;; Defined at:
  4673 ;;		line 48 in file "LCD.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  a               1    wreg     unsigned char 
  4676 ;;  b               1    4[COMMON] unsigned char 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  a               1    6[COMMON] unsigned char 
  4679 ;;  temp            1    9[COMMON] unsigned char 
  4680 ;;  y               1    8[COMMON] unsigned char 
  4681 ;;  z               1    7[COMMON] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4691 ;;      Params:         1       0       0       0       0
  4692 ;;      Locals:         4       0       0       0       0
  4693 ;;      Temps:          1       0       0       0       0
  4694 ;;      Totals:         6       0       0       0       0
  4695 ;;Total ram usage:        6 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 2
  4698 ;; This function calls:
  4699 ;;		_Lcd_Cmd
  4700 ;; This function is called by:
  4701 ;;		_CLK_CONFIG
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705     0F72                     _Lcd_Set_Cursor:	
  4706                           ;psect for function _Lcd_Set_Cursor
  4707                           
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4711                           ;Lcd_Set_Cursor@a stored from wreg
  4712     0F72  00F6               	movwf	Lcd_Set_Cursor@a
  4713     0F73                     l1953:
  4714                           
  4715                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  4716     0F73  0376               	decf	Lcd_Set_Cursor@a,w
  4717     0F74  1D03               	btfss	3,2
  4718     0F75  2F77               	goto	u1541
  4719     0F76  2F78               	goto	u1540
  4720     0F77                     u1541:
  4721     0F77  2F95               	goto	l1963
  4722     0F78                     u1540:
  4723     0F78                     l1955:
  4724                           
  4725                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  4726     0F78  0874               	movf	Lcd_Set_Cursor@b,w
  4727     0F79  3E7F               	addlw	127
  4728     0F7A  00F9               	movwf	Lcd_Set_Cursor@temp
  4729                           
  4730                           ;LCD.c: 52:         z = temp >> 4;
  4731     0F7B  0879               	movf	Lcd_Set_Cursor@temp,w
  4732     0F7C  00F5               	movwf	??_Lcd_Set_Cursor
  4733     0F7D  3004               	movlw	4
  4734     0F7E                     u1555:
  4735     0F7E  1003               	clrc
  4736     0F7F  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4737     0F80  3EFF               	addlw	-1
  4738     0F81  1D03               	skipz
  4739     0F82  2F7E               	goto	u1555
  4740     0F83  0875               	movf	??_Lcd_Set_Cursor,w
  4741     0F84  00F7               	movwf	Lcd_Set_Cursor@z
  4742     0F85                     l1957:
  4743                           
  4744                           ;LCD.c: 53:         y = temp & 0x0F;
  4745     0F85  0879               	movf	Lcd_Set_Cursor@temp,w
  4746     0F86  390F               	andlw	15
  4747     0F87  00F8               	movwf	Lcd_Set_Cursor@y
  4748     0F88                     l1959:
  4749                           
  4750                           ;LCD.c: 54:         Lcd_Cmd(z);
  4751     0F88  0877               	movf	Lcd_Set_Cursor@z,w
  4752     0F89  120A  158A  2597  120A  158A  	fcall	_Lcd_Cmd
  4753     0F8E                     l1961:
  4754                           
  4755                           ;LCD.c: 55:         Lcd_Cmd(y);
  4756     0F8E  0878               	movf	Lcd_Set_Cursor@y,w
  4757     0F8F  120A  158A  2597  120A  158A  	fcall	_Lcd_Cmd
  4758                           
  4759                           ;LCD.c: 56:     } else if (a == 2) {
  4760     0F94  2FB7               	goto	l259
  4761     0F95                     l1963:
  4762     0F95  3002               	movlw	2
  4763     0F96  0676               	xorwf	Lcd_Set_Cursor@a,w
  4764     0F97  1D03               	btfss	3,2
  4765     0F98  2F9A               	goto	u1561
  4766     0F99  2F9B               	goto	u1560
  4767     0F9A                     u1561:
  4768     0F9A  2FB7               	goto	l259
  4769     0F9B                     u1560:
  4770     0F9B                     l1965:
  4771                           
  4772                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  4773     0F9B  0874               	movf	Lcd_Set_Cursor@b,w
  4774     0F9C  3EBF               	addlw	191
  4775     0F9D  00F9               	movwf	Lcd_Set_Cursor@temp
  4776                           
  4777                           ;LCD.c: 58:         z = temp >> 4;
  4778     0F9E  0879               	movf	Lcd_Set_Cursor@temp,w
  4779     0F9F  00F5               	movwf	??_Lcd_Set_Cursor
  4780     0FA0  3004               	movlw	4
  4781     0FA1                     u1575:
  4782     0FA1  1003               	clrc
  4783     0FA2  0CF5               	rrf	??_Lcd_Set_Cursor,f
  4784     0FA3  3EFF               	addlw	-1
  4785     0FA4  1D03               	skipz
  4786     0FA5  2FA1               	goto	u1575
  4787     0FA6  0875               	movf	??_Lcd_Set_Cursor,w
  4788     0FA7  00F7               	movwf	Lcd_Set_Cursor@z
  4789     0FA8                     l1967:
  4790                           
  4791                           ;LCD.c: 59:         y = temp & 0x0F;
  4792     0FA8  0879               	movf	Lcd_Set_Cursor@temp,w
  4793     0FA9  390F               	andlw	15
  4794     0FAA  00F8               	movwf	Lcd_Set_Cursor@y
  4795     0FAB                     l1969:
  4796                           
  4797                           ;LCD.c: 60:         Lcd_Cmd(z);
  4798     0FAB  0877               	movf	Lcd_Set_Cursor@z,w
  4799     0FAC  120A  158A  2597  120A  158A  	fcall	_Lcd_Cmd
  4800     0FB1                     l1971:
  4801                           
  4802                           ;LCD.c: 61:         Lcd_Cmd(y);
  4803     0FB1  0878               	movf	Lcd_Set_Cursor@y,w
  4804     0FB2  120A  158A  2597  120A  158A  	fcall	_Lcd_Cmd
  4805     0FB7                     l259:
  4806     0FB7  0008               	return
  4807     0FB8                     __end_of_Lcd_Set_Cursor:
  4808                           
  4809                           	psect	text15
  4810     0D97                     __ptext15:	
  4811 ;; *************** function _Lcd_Cmd *****************
  4812 ;; Defined at:
  4813 ;;		line 35 in file "LCD.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  a               1    wreg     unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  a               1    3[COMMON] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         0       0       0       0       0
  4828 ;;      Locals:         1       0       0       0       0
  4829 ;;      Temps:          2       0       0       0       0
  4830 ;;      Totals:         3       0       0       0       0
  4831 ;;Total ram usage:        3 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 1
  4834 ;; This function calls:
  4835 ;;		_Lcd_Port
  4836 ;; This function is called by:
  4837 ;;		_Lcd_Clear
  4838 ;;		_Lcd_Set_Cursor
  4839 ;;		_Lcd_Init
  4840 ;;		_Lcd_Shift_Right
  4841 ;;		_Lcd_Shift_Left
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845     0D97                     _Lcd_Cmd:	
  4846                           ;psect for function _Lcd_Cmd
  4847                           
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4851                           ;Lcd_Cmd@a stored from wreg
  4852     0D97  00F3               	movwf	Lcd_Cmd@a
  4853     0D98                     l1801:
  4854                           
  4855                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  4856     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  4857     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  4858     0D9A  1308               	bcf	8,6	;volatile
  4859     0D9B                     l1803:
  4860                           
  4861                           ;LCD.c: 37:     Lcd_Port(a);
  4862     0D9B  0873               	movf	Lcd_Cmd@a,w
  4863     0D9C  120A  158A  25D0  120A  158A  	fcall	_Lcd_Port
  4864     0DA1                     l1805:
  4865                           
  4866                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  4867     0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  4868     0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  4869     0DA3  1788               	bsf	8,7	;volatile
  4870     0DA4                     l1807:
  4871                           
  4872                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4873     0DA4  300B               	movlw	11
  4874     0DA5  00F2               	movwf	??_Lcd_Cmd+1
  4875     0DA6  3062               	movlw	98
  4876     0DA7  00F1               	movwf	??_Lcd_Cmd
  4877     0DA8                     u2627:
  4878     0DA8  0BF1               	decfsz	??_Lcd_Cmd,f
  4879     0DA9  2DA8               	goto	u2627
  4880     0DAA  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4881     0DAB  2DA8               	goto	u2627
  4882     0DAC  0000               	nop
  4883     0DAD                     l1809:
  4884                           
  4885                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  4886     0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4887     0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4888     0DAF  1388               	bcf	8,7	;volatile
  4889     0DB0                     l250:
  4890     0DB0  0008               	return
  4891     0DB1                     __end_of_Lcd_Cmd:
  4892                           
  4893                           	psect	text16
  4894     0DD0                     __ptext16:	
  4895 ;; *************** function _Lcd_Port *****************
  4896 ;; Defined at:
  4897 ;;		line 13 in file "LCD.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  a               1    wreg     unsigned char 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  a               1    0[COMMON] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4911 ;;      Params:         0       0       0       0       0
  4912 ;;      Locals:         1       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0
  4914 ;;      Totals:         1       0       0       0       0
  4915 ;;Total ram usage:        1 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_Lcd_Cmd
  4921 ;;		_Lcd_Init
  4922 ;;		_Lcd_Write_Char
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926     0DD0                     _Lcd_Port:	
  4927                           ;psect for function _Lcd_Port
  4928                           
  4929                           
  4930                           ;incstack = 0
  4931                           ; Regs used in _Lcd_Port: [wreg]
  4932                           ;Lcd_Port@a stored from wreg
  4933     0DD0  00F0               	movwf	Lcd_Port@a
  4934     0DD1                     l1791:
  4935                           
  4936                           ;LCD.c: 14:     if (a & 1)
  4937     0DD1  1C70               	btfss	Lcd_Port@a,0
  4938     0DD2  2DD4               	goto	u1271
  4939     0DD3  2DD5               	goto	u1270
  4940     0DD4                     u1271:
  4941     0DD4  2DD9               	goto	l239
  4942     0DD5                     u1270:
  4943     0DD5                     l1793:
  4944                           
  4945                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  4946     0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  4947     0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  4948     0DD7  1606               	bsf	6,4	;volatile
  4949     0DD8  2DDC               	goto	l240
  4950     0DD9                     l239:	
  4951                           ;LCD.c: 16:     else
  4952                           
  4953                           
  4954                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  4955     0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  4956     0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  4957     0DDB  1206               	bcf	6,4	;volatile
  4958     0DDC                     l240:
  4959                           
  4960                           ;LCD.c: 19:     if (a & 2)
  4961     0DDC  1CF0               	btfss	Lcd_Port@a,1
  4962     0DDD  2DDF               	goto	u1281
  4963     0DDE  2DE0               	goto	u1280
  4964     0DDF                     u1281:
  4965     0DDF  2DE2               	goto	l241
  4966     0DE0                     u1280:
  4967     0DE0                     l1795:
  4968                           
  4969                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  4970     0DE0  1686               	bsf	6,5	;volatile
  4971     0DE1  2DE3               	goto	l242
  4972     0DE2                     l241:	
  4973                           ;LCD.c: 21:     else
  4974                           
  4975                           
  4976                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  4977     0DE2  1286               	bcf	6,5	;volatile
  4978     0DE3                     l242:
  4979                           
  4980                           ;LCD.c: 24:     if (a & 4)
  4981     0DE3  1D70               	btfss	Lcd_Port@a,2
  4982     0DE4  2DE6               	goto	u1291
  4983     0DE5  2DE7               	goto	u1290
  4984     0DE6                     u1291:
  4985     0DE6  2DE9               	goto	l243
  4986     0DE7                     u1290:
  4987     0DE7                     l1797:
  4988                           
  4989                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  4990     0DE7  1706               	bsf	6,6	;volatile
  4991     0DE8  2DEA               	goto	l244
  4992     0DE9                     l243:	
  4993                           ;LCD.c: 26:     else
  4994                           
  4995                           
  4996                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  4997     0DE9  1306               	bcf	6,6	;volatile
  4998     0DEA                     l244:
  4999                           
  5000                           ;LCD.c: 29:     if (a & 8)
  5001     0DEA  1DF0               	btfss	Lcd_Port@a,3
  5002     0DEB  2DED               	goto	u1301
  5003     0DEC  2DEE               	goto	u1300
  5004     0DED                     u1301:
  5005     0DED  2DF0               	goto	l245
  5006     0DEE                     u1300:
  5007     0DEE                     l1799:
  5008                           
  5009                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  5010     0DEE  1786               	bsf	6,7	;volatile
  5011     0DEF  2DF1               	goto	l247
  5012     0DF0                     l245:	
  5013                           ;LCD.c: 31:     else
  5014                           
  5015                           
  5016                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  5017     0DF0  1386               	bcf	6,7	;volatile
  5018     0DF1                     l247:
  5019     0DF1  0008               	return
  5020     0DF2                     __end_of_Lcd_Port:
  5021                           
  5022                           	psect	text17
  5023     0E7B                     __ptext17:	
  5024 ;; *************** function _DS3231_Get_Time *****************
  5025 ;; Defined at:
  5026 ;;		line 36 in file "ds3231.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  hr              2    4[COMMON] PTR unsigned char 
  5029 ;;		 -> RAM(512), 
  5030 ;;  min             2    6[COMMON] PTR unsigned char 
  5031 ;;		 -> RAM(512), 
  5032 ;;  sec             2    8[COMMON] PTR unsigned char 
  5033 ;;		 -> RAM(512), 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5045 ;;      Params:         6       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0
  5048 ;;      Totals:         6       0       0       0       0
  5049 ;;Total ram usage:        6 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; Hardware stack levels required when called: 2
  5052 ;; This function calls:
  5053 ;;		_DS3231_Bcd_Bin
  5054 ;;		_DS3231_Read
  5055 ;; This function is called by:
  5056 ;;		_CLK_CONFIG
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060     0E7B                     _DS3231_Get_Time:	
  5061                           ;psect for function _DS3231_Get_Time
  5062                           
  5063     0E7B                     l1951:	
  5064                           ;incstack = 0
  5065                           ; Regs used in _DS3231_Get_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5066                           
  5067                           
  5068                           ;ds3231.c: 36: void DS3231_Get_Time(uint8_t *hr, uint8_t *min, uint8_t *sec);ds3231.c: 3
      +                          7: {;ds3231.c: 38:     *sec = DS3231_Bcd_Bin(DS3231_Read(0x00) & 0x7F);
  5069     0E7B  0878               	movf	DS3231_Get_Time@sec,w
  5070     0E7C  0084               	movwf	4
  5071     0E7D  1783               	bsf	3,7
  5072     0E7E  1C79               	btfss	DS3231_Get_Time@sec+1,0
  5073     0E7F  1383               	bcf	3,7
  5074     0E80  3000               	movlw	0
  5075     0E81  120A  158A  2617  120A  158A  	fcall	_DS3231_Read
  5076     0E86  397F               	andlw	127
  5077     0E87  120A  158A  257F  120A  158A  	fcall	_DS3231_Bcd_Bin
  5078     0E8C  0080               	movwf	0
  5079                           
  5080                           ;ds3231.c: 39:     *min = DS3231_Bcd_Bin(DS3231_Read(0x01) & 0x7F);
  5081     0E8D  0876               	movf	DS3231_Get_Time@min,w
  5082     0E8E  0084               	movwf	4
  5083     0E8F  1783               	bsf	3,7
  5084     0E90  1C77               	btfss	DS3231_Get_Time@min+1,0
  5085     0E91  1383               	bcf	3,7
  5086     0E92  3001               	movlw	1
  5087     0E93  120A  158A  2617  120A  158A  	fcall	_DS3231_Read
  5088     0E98  397F               	andlw	127
  5089     0E99  120A  158A  257F  120A  158A  	fcall	_DS3231_Bcd_Bin
  5090     0E9E  0080               	movwf	0
  5091                           
  5092                           ;ds3231.c: 40:     *hr = DS3231_Bcd_Bin(DS3231_Read(0x02) & 0x3F);
  5093     0E9F  0874               	movf	DS3231_Get_Time@hr,w
  5094     0EA0  0084               	movwf	4
  5095     0EA1  1783               	bsf	3,7
  5096     0EA2  1C75               	btfss	DS3231_Get_Time@hr+1,0
  5097     0EA3  1383               	bcf	3,7
  5098     0EA4  3002               	movlw	2
  5099     0EA5  120A  158A  2617  120A  158A  	fcall	_DS3231_Read
  5100     0EAA  393F               	andlw	63
  5101     0EAB  120A  158A  257F  120A  158A  	fcall	_DS3231_Bcd_Bin
  5102     0EB0  0080               	movwf	0
  5103     0EB1                     l308:
  5104     0EB1  0008               	return
  5105     0EB2                     __end_of_DS3231_Get_Time:
  5106                           
  5107                           	psect	text18
  5108     0FB8                     __ptext18:	
  5109 ;; *************** function _DS3231_Get_Date *****************
  5110 ;; Defined at:
  5111 ;;		line 28 in file "ds3231.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  day             2    4[COMMON] PTR unsigned char 
  5114 ;;		 -> DS3231_Get_DayOfWeek@lday(1), RAM(512), 
  5115 ;;  mth             2    6[COMMON] PTR unsigned char 
  5116 ;;		 -> DS3231_Get_DayOfWeek@lmonth(1), RAM(512), 
  5117 ;;  year            2    8[COMMON] PTR unsigned char 
  5118 ;;		 -> DS3231_Get_DayOfWeek@lyr(1), RAM(512), 
  5119 ;;  dow             2   10[COMMON] PTR unsigned char 
  5120 ;;		 -> DS3231_Get_DayOfWeek@ldow(1), RAM(512), 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5132 ;;      Params:         8       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0
  5135 ;;      Totals:         8       0       0       0       0
  5136 ;;Total ram usage:        8 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 2
  5139 ;; This function calls:
  5140 ;;		_DS3231_Bcd_Bin
  5141 ;;		_DS3231_Read
  5142 ;; This function is called by:
  5143 ;;		_CLK_CONFIG
  5144 ;;		_DS3231_Get_DayOfWeek
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148     0FB8                     _DS3231_Get_Date:	
  5149                           ;psect for function _DS3231_Get_Date
  5150                           
  5151     0FB8                     l1949:	
  5152                           ;incstack = 0
  5153                           ; Regs used in _DS3231_Get_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5154                           
  5155                           
  5156                           ;ds3231.c: 28: void DS3231_Get_Date(uint8_t *day, uint8_t *mth, uint8_t *year, uint8_t *
      +                          dow);ds3231.c: 29: {;ds3231.c: 30:     *dow = DS3231_Bcd_Bin(DS3231_Read(0x03) & 0x7F);
  5157     0FB8  087A               	movf	DS3231_Get_Date@dow,w
  5158     0FB9  0084               	movwf	4
  5159     0FBA  1783               	bsf	3,7
  5160     0FBB  1C7B               	btfss	DS3231_Get_Date@dow+1,0
  5161     0FBC  1383               	bcf	3,7
  5162     0FBD  3003               	movlw	3
  5163     0FBE  120A  158A  2617  120A  158A  	fcall	_DS3231_Read
  5164     0FC3  397F               	andlw	127
  5165     0FC4  120A  158A  257F  120A  158A  	fcall	_DS3231_Bcd_Bin
  5166     0FC9  0080               	movwf	0
  5167                           
  5168                           ;ds3231.c: 31:     *day = DS3231_Bcd_Bin(DS3231_Read(0x04) & 0x3F);
  5169     0FCA  0874               	movf	DS3231_Get_Date@day,w
  5170     0FCB  0084               	movwf	4
  5171     0FCC  1783               	bsf	3,7
  5172     0FCD  1C75               	btfss	DS3231_Get_Date@day+1,0
  5173     0FCE  1383               	bcf	3,7
  5174     0FCF  3004               	movlw	4
  5175     0FD0  120A  158A  2617  120A  158A  	fcall	_DS3231_Read
  5176     0FD5  393F               	andlw	63
  5177     0FD6  120A  158A  257F  120A  158A  	fcall	_DS3231_Bcd_Bin
  5178     0FDB  0080               	movwf	0
  5179                           
  5180                           ;ds3231.c: 32:     *mth = DS3231_Bcd_Bin(DS3231_Read(0x05) & 0x1F);
  5181     0FDC  0876               	movf	DS3231_Get_Date@mth,w
  5182     0FDD  0084               	movwf	4
  5183     0FDE  1783               	bsf	3,7
  5184     0FDF  1C77               	btfss	DS3231_Get_Date@mth+1,0
  5185     0FE0  1383               	bcf	3,7
  5186     0FE1  3005               	movlw	5
  5187     0FE2  120A  158A  2617  120A  158A  	fcall	_DS3231_Read
  5188     0FE7  391F               	andlw	31
  5189     0FE8  120A  158A  257F  120A  158A  	fcall	_DS3231_Bcd_Bin
  5190     0FED  0080               	movwf	0
  5191                           
  5192                           ;ds3231.c: 33:     *year = DS3231_Bcd_Bin(DS3231_Read(0x06));
  5193     0FEE  0878               	movf	DS3231_Get_Date@year,w
  5194     0FEF  0084               	movwf	4
  5195     0FF0  1783               	bsf	3,7
  5196     0FF1  1C79               	btfss	DS3231_Get_Date@year+1,0
  5197     0FF2  1383               	bcf	3,7
  5198     0FF3  3006               	movlw	6
  5199     0FF4  120A  158A  2617  120A  158A  	fcall	_DS3231_Read
  5200     0FF9  120A  158A  257F  120A  158A  	fcall	_DS3231_Bcd_Bin
  5201     0FFE  0080               	movwf	0
  5202     0FFF                     l305:
  5203     0FFF  0008               	return
  5204     1000                     __end_of_DS3231_Get_Date:
  5205                           
  5206                           	psect	text19
  5207     0E17                     __ptext19:	
  5208 ;; *************** function _DS3231_Read *****************
  5209 ;; Defined at:
  5210 ;;		line 53 in file "ds3231.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  reg             1    wreg     unsigned char 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  reg             1    1[COMMON] unsigned char 
  5215 ;;  data            1    2[COMMON] unsigned char 
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  1    wreg      unsigned char 
  5218 ;; Registers used:
  5219 ;;		wreg, status,2, status,0, pclath, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5225 ;;      Params:         0       0       0       0       0
  5226 ;;      Locals:         2       0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0
  5228 ;;      Totals:         2       0       0       0       0
  5229 ;;Total ram usage:        2 bytes
  5230 ;; Hardware stack levels used: 1
  5231 ;; Hardware stack levels required when called: 1
  5232 ;; This function calls:
  5233 ;;		_I2C_Nack
  5234 ;;		_I2C_Read
  5235 ;;		_I2C_Restart
  5236 ;;		_I2C_Start
  5237 ;;		_I2C_Stop
  5238 ;;		_I2C_Write
  5239 ;; This function is called by:
  5240 ;;		_DS3231_Get_Date
  5241 ;;		_DS3231_Get_Time
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245     0E17                     _DS3231_Read:	
  5246                           ;psect for function _DS3231_Read
  5247                           
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _DS3231_Read: [wreg+status,2+status,0+pclath+cstack]
  5251                           ;DS3231_Read@reg stored from wreg
  5252     0E17  00F1               	movwf	DS3231_Read@reg
  5253     0E18                     l1831:
  5254     0E18                     l1833:
  5255                           
  5256                           ;ds3231.c: 56:     I2C_Start();
  5257     0E18  120A  158A  2500  120A  158A  	fcall	_I2C_Start
  5258     0E1D                     l1835:
  5259                           
  5260                           ;ds3231.c: 57:     I2C_Write(0xD0);
  5261     0E1D  30D0               	movlw	208
  5262     0E1E  120A  158A  2537  120A  158A  	fcall	_I2C_Write
  5263     0E23                     l1837:
  5264                           
  5265                           ;ds3231.c: 58:     I2C_Write(reg);
  5266     0E23  0871               	movf	DS3231_Read@reg,w
  5267     0E24  120A  158A  2537  120A  158A  	fcall	_I2C_Write
  5268     0E29                     l1839:
  5269                           
  5270                           ;ds3231.c: 59:     I2C_Restart();
  5271     0E29  120A  158A  24F6  120A  158A  	fcall	_I2C_Restart
  5272     0E2E                     l1841:
  5273                           
  5274                           ;ds3231.c: 60:     I2C_Write(0xD0 | 0x01);
  5275     0E2E  30D1               	movlw	209
  5276     0E2F  120A  158A  2537  120A  158A  	fcall	_I2C_Write
  5277     0E34                     l1843:
  5278                           
  5279                           ;ds3231.c: 61:     data = I2C_Read();
  5280     0E34  120A  158A  251F  120A  158A  	fcall	_I2C_Read
  5281     0E39  00F2               	movwf	DS3231_Read@data
  5282     0E3A                     l1845:
  5283                           
  5284                           ;ds3231.c: 62:     I2C_Nack();
  5285     0E3A  120A  158A  2514  120A  158A  	fcall	_I2C_Nack
  5286     0E3F                     l1847:
  5287                           
  5288                           ;ds3231.c: 63:     I2C_Stop();
  5289     0E3F  120A  158A  250A  120A  158A  	fcall	_I2C_Stop
  5290     0E44                     l1849:
  5291                           
  5292                           ;ds3231.c: 64:     return data;
  5293     0E44  0872               	movf	DS3231_Read@data,w
  5294     0E45                     l314:
  5295     0E45  0008               	return
  5296     0E46                     __end_of_DS3231_Read:
  5297                           
  5298                           	psect	text20
  5299     0D37                     __ptext20:	
  5300 ;; *************** function _I2C_Write *****************
  5301 ;; Defined at:
  5302 ;;		line 64 in file "i2c.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  data            1    wreg     unsigned char 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  data            1    0[COMMON] unsigned char 
  5307 ;;  b_ok            2    0        short 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  2    8[None  ] short 
  5310 ;; Registers used:
  5311 ;;		wreg
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5317 ;;      Params:         0       0       0       0       0
  5318 ;;      Locals:         1       0       0       0       0
  5319 ;;      Temps:          0       0       0       0       0
  5320 ;;      Totals:         1       0       0       0       0
  5321 ;;Total ram usage:        1 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_main
  5327 ;;		_DS3231_Read
  5328 ;;		_DS3231_Set_Date_Time
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332     0D37                     _I2C_Write:	
  5333                           ;psect for function _I2C_Write
  5334                           
  5335                           
  5336                           ;incstack = 0
  5337                           ; Regs used in _I2C_Write: [wreg]
  5338                           ;I2C_Write@data stored from wreg
  5339     0D37  00F0               	movwf	I2C_Write@data
  5340     0D38                     l1773:
  5341                           
  5342                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  5343     0D38  0870               	movf	I2C_Write@data,w
  5344     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  5345     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  5346     0D3B  0093               	movwf	19	;volatile
  5347     0D3C                     l221:	
  5348                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  5349                           
  5350     0D3C  1D8C               	btfss	12,3	;volatile
  5351     0D3D  2D3F               	goto	u1221
  5352     0D3E  2D40               	goto	u1220
  5353     0D3F                     u1221:
  5354     0D3F  2D3C               	goto	l221
  5355     0D40                     u1220:
  5356     0D40                     l223:
  5357                           
  5358                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  5359     0D40  118C               	bcf	12,3	;volatile
  5360     0D41                     l1775:
  5361     0D41  1683               	bsf	3,5	;RP0=1, select bank1
  5362     0D42  1303               	bcf	3,6	;RP1=0, select bank1
  5363     0D43  0811               	movf	17,w	;volatile
  5364     0D44                     l224:
  5365     0D44  0008               	return
  5366     0D45                     __end_of_I2C_Write:
  5367                           
  5368                           	psect	text21
  5369     0D0A                     __ptext21:	
  5370 ;; *************** function _I2C_Stop *****************
  5371 ;; Defined at:
  5372 ;;		line 34 in file "i2c.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;		None
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;		None
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      void 
  5379 ;; Registers used:
  5380 ;;		None
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5386 ;;      Params:         0       0       0       0       0
  5387 ;;      Locals:         0       0       0       0       0
  5388 ;;      Temps:          0       0       0       0       0
  5389 ;;      Totals:         0       0       0       0       0
  5390 ;;Total ram usage:        0 bytes
  5391 ;; Hardware stack levels used: 1
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		_main
  5396 ;;		_DS3231_Read
  5397 ;;		_DS3231_Set_Date_Time
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401     0D0A                     _I2C_Stop:	
  5402                           ;psect for function _I2C_Stop
  5403                           
  5404     0D0A                     l1785:	
  5405                           ;incstack = 0
  5406                           ; Regs used in _I2C_Stop: []
  5407                           
  5408                           
  5409                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  5410     0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  5411     0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  5412     0D0C  1511               	bsf	17,2	;volatile
  5413     0D0D                     l197:	
  5414                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  5415                           
  5416     0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  5417     0D0E  1D8C               	btfss	12,3	;volatile
  5418     0D0F  2D11               	goto	u1241
  5419     0D10  2D12               	goto	u1240
  5420     0D11                     u1241:
  5421     0D11  2D0D               	goto	l197
  5422     0D12                     u1240:
  5423     0D12                     l199:
  5424                           
  5425                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  5426     0D12  118C               	bcf	12,3	;volatile
  5427     0D13                     l200:
  5428     0D13  0008               	return
  5429     0D14                     __end_of_I2C_Stop:
  5430                           
  5431                           	psect	text22
  5432     0D00                     __ptext22:	
  5433 ;; *************** function _I2C_Start *****************
  5434 ;; Defined at:
  5435 ;;		line 27 in file "i2c.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		None
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5449 ;;      Params:         0       0       0       0       0
  5450 ;;      Locals:         0       0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0
  5452 ;;      Totals:         0       0       0       0       0
  5453 ;;Total ram usage:        0 bytes
  5454 ;; Hardware stack levels used: 1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_main
  5459 ;;		_DS3231_Read
  5460 ;;		_DS3231_Set_Date_Time
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464     0D00                     _I2C_Start:	
  5465                           ;psect for function _I2C_Start
  5466                           
  5467     0D00                     l1771:	
  5468                           ;incstack = 0
  5469                           ; Regs used in _I2C_Start: []
  5470                           
  5471                           
  5472                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  5473     0D00  1683               	bsf	3,5	;RP0=1, select bank1
  5474     0D01  1303               	bcf	3,6	;RP1=0, select bank1
  5475     0D02  1411               	bsf	17,0	;volatile
  5476     0D03                     l191:	
  5477                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  5478                           
  5479     0D03  1283               	bcf	3,5	;RP0=0, select bank0
  5480     0D04  1D8C               	btfss	12,3	;volatile
  5481     0D05  2D07               	goto	u1211
  5482     0D06  2D08               	goto	u1210
  5483     0D07                     u1211:
  5484     0D07  2D03               	goto	l191
  5485     0D08                     u1210:
  5486     0D08                     l193:
  5487                           
  5488                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  5489     0D08  118C               	bcf	12,3	;volatile
  5490     0D09                     l194:
  5491     0D09  0008               	return
  5492     0D0A                     __end_of_I2C_Start:
  5493                           
  5494                           	psect	text23
  5495     0CF6                     __ptext23:	
  5496 ;; *************** function _I2C_Restart *****************
  5497 ;; Defined at:
  5498 ;;		line 41 in file "i2c.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		None
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5512 ;;      Params:         0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0
  5515 ;;      Totals:         0       0       0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_DS3231_Read
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525     0CF6                     _I2C_Restart:	
  5526                           ;psect for function _I2C_Restart
  5527                           
  5528     0CF6                     l1787:	
  5529                           ;incstack = 0
  5530                           ; Regs used in _I2C_Restart: []
  5531                           
  5532                           
  5533                           ;i2c.c: 43:     SSPCON2bits.RSEN = 1;
  5534     0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  5535     0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  5536     0CF8  1491               	bsf	17,1	;volatile
  5537     0CF9                     l203:	
  5538                           ;i2c.c: 44:     while(PIR1bits.SSPIF == 0);
  5539                           
  5540     0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  5541     0CFA  1D8C               	btfss	12,3	;volatile
  5542     0CFB  2CFD               	goto	u1251
  5543     0CFC  2CFE               	goto	u1250
  5544     0CFD                     u1251:
  5545     0CFD  2CF9               	goto	l203
  5546     0CFE                     u1250:
  5547     0CFE                     l205:
  5548                           
  5549                           ;i2c.c: 45:     PIR1bits.SSPIF = 0;
  5550     0CFE  118C               	bcf	12,3	;volatile
  5551     0CFF                     l206:
  5552     0CFF  0008               	return
  5553     0D00                     __end_of_I2C_Restart:
  5554                           
  5555                           	psect	text24
  5556     0D1F                     __ptext24:	
  5557 ;; *************** function _I2C_Read *****************
  5558 ;; Defined at:
  5559 ;;		line 73 in file "i2c.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0
  5576 ;;      Totals:         0       0       0       0       0
  5577 ;;Total ram usage:        0 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_main
  5583 ;;		_DS3231_Read
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587     0D1F                     _I2C_Read:	
  5588                           ;psect for function _I2C_Read
  5589                           
  5590     0D1F                     l1779:	
  5591                           ;incstack = 0
  5592                           ; Regs used in _I2C_Read: [wreg]
  5593                           
  5594                           
  5595                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
  5596     0D1F  1683               	bsf	3,5	;RP0=1, select bank1
  5597     0D20  1303               	bcf	3,6	;RP1=0, select bank1
  5598     0D21  1591               	bsf	17,3	;volatile
  5599     0D22                     l227:	
  5600                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
  5601                           
  5602     0D22  1283               	bcf	3,5	;RP0=0, select bank0
  5603     0D23  1D8C               	btfss	12,3	;volatile
  5604     0D24  2D26               	goto	u1231
  5605     0D25  2D27               	goto	u1230
  5606     0D26                     u1231:
  5607     0D26  2D22               	goto	l227
  5608     0D27                     u1230:
  5609     0D27                     l229:
  5610                           
  5611                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
  5612     0D27  118C               	bcf	12,3	;volatile
  5613     0D28                     l1781:
  5614                           
  5615                           ;i2c.c: 78:     return SSPBUF;
  5616     0D28  0813               	movf	19,w	;volatile
  5617     0D29                     l230:
  5618     0D29  0008               	return
  5619     0D2A                     __end_of_I2C_Read:
  5620                           
  5621                           	psect	text25
  5622     0D14                     __ptext25:	
  5623 ;; *************** function _I2C_Nack *****************
  5624 ;; Defined at:
  5625 ;;		line 56 in file "i2c.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;		None
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		None
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       0       0       0       0
  5640 ;;      Locals:         0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0
  5642 ;;      Totals:         0       0       0       0       0
  5643 ;;Total ram usage:        0 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_DS3231_Read
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652     0D14                     _I2C_Nack:	
  5653                           ;psect for function _I2C_Nack
  5654                           
  5655     0D14                     l1789:	
  5656                           ;incstack = 0
  5657                           ; Regs used in _I2C_Nack: []
  5658                           
  5659                           
  5660                           ;i2c.c: 58:     SSPCON2bits.ACKDT = 1;
  5661     0D14  1683               	bsf	3,5	;RP0=1, select bank1
  5662     0D15  1303               	bcf	3,6	;RP1=0, select bank1
  5663     0D16  1691               	bsf	17,5	;volatile
  5664                           
  5665                           ;i2c.c: 59:  SSPCON2bits.ACKEN = 1;
  5666     0D17  1611               	bsf	17,4	;volatile
  5667     0D18                     l215:	
  5668                           ;i2c.c: 60:  while(PIR1bits.SSPIF == 0);
  5669                           
  5670     0D18  1283               	bcf	3,5	;RP0=0, select bank0
  5671     0D19  1D8C               	btfss	12,3	;volatile
  5672     0D1A  2D1C               	goto	u1261
  5673     0D1B  2D1D               	goto	u1260
  5674     0D1C                     u1261:
  5675     0D1C  2D18               	goto	l215
  5676     0D1D                     u1260:
  5677     0D1D                     l217:
  5678                           
  5679                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
  5680     0D1D  118C               	bcf	12,3	;volatile
  5681     0D1E                     l218:
  5682     0D1E  0008               	return
  5683     0D1F                     __end_of_I2C_Nack:
  5684                           
  5685                           	psect	text26
  5686     0D7F                     __ptext26:	
  5687 ;; *************** function _DS3231_Bcd_Bin *****************
  5688 ;; Defined at:
  5689 ;;		line 86 in file "ds3231.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  bcd_value       1    wreg     unsigned char 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  bcd_value       1    2[COMMON] unsigned char 
  5694 ;;  temp            1    3[COMMON] unsigned char 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      unsigned char 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5704 ;;      Params:         0       0       0       0       0
  5705 ;;      Locals:         2       0       0       0       0
  5706 ;;      Temps:          2       0       0       0       0
  5707 ;;      Totals:         4       0       0       0       0
  5708 ;;Total ram usage:        4 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_DS3231_Get_Date
  5714 ;;		_DS3231_Get_Time
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718     0D7F                     _DS3231_Bcd_Bin:	
  5719                           ;psect for function _DS3231_Bcd_Bin
  5720                           
  5721                           
  5722                           ;incstack = 0
  5723                           ; Regs used in _DS3231_Bcd_Bin: [wreg+status,2+status,0]
  5724                           ;DS3231_Bcd_Bin@bcd_value stored from wreg
  5725     0D7F  00F2               	movwf	DS3231_Bcd_Bin@bcd_value
  5726     0D80                     l1853:
  5727                           
  5728                           ;ds3231.c: 86: uint8_t DS3231_Bcd_Bin(uint8_t bcd_value);ds3231.c: 87: {;ds3231.c: 88:  
      +                             uint8_t temp;;ds3231.c: 89:     temp = bcd_value;
  5729     0D80  0872               	movf	DS3231_Bcd_Bin@bcd_value,w
  5730     0D81  00F3               	movwf	DS3231_Bcd_Bin@temp
  5731                           
  5732                           ;ds3231.c: 90:     temp >>= 1;
  5733     0D82  1003               	clrc
  5734     0D83  0CF3               	rrf	DS3231_Bcd_Bin@temp,f
  5735     0D84                     l1855:
  5736                           
  5737                           ;ds3231.c: 91:     temp &= 0x78;
  5738     0D84  3078               	movlw	120
  5739     0D85  00F0               	movwf	??_DS3231_Bcd_Bin
  5740     0D86  0870               	movf	??_DS3231_Bcd_Bin,w
  5741     0D87  05F3               	andwf	DS3231_Bcd_Bin@temp,f
  5742     0D88                     l1857:
  5743                           
  5744                           ;ds3231.c: 92:     return(temp + (temp >> 2) + (bcd_value & 0x0f));
  5745     0D88  0873               	movf	DS3231_Bcd_Bin@temp,w
  5746     0D89  00F0               	movwf	??_DS3231_Bcd_Bin
  5747     0D8A  3002               	movlw	2
  5748     0D8B                     u1325:
  5749     0D8B  1003               	clrc
  5750     0D8C  0CF0               	rrf	??_DS3231_Bcd_Bin,f
  5751     0D8D  3EFF               	addlw	-1
  5752     0D8E  1D03               	skipz
  5753     0D8F  2D8B               	goto	u1325
  5754     0D90  0872               	movf	DS3231_Bcd_Bin@bcd_value,w
  5755     0D91  390F               	andlw	15
  5756     0D92  0770               	addwf	??_DS3231_Bcd_Bin,w
  5757     0D93  00F1               	movwf	??_DS3231_Bcd_Bin+1
  5758     0D94  0873               	movf	DS3231_Bcd_Bin@temp,w
  5759     0D95  0771               	addwf	??_DS3231_Bcd_Bin+1,w
  5760     0D96                     l325:
  5761     0D96  0008               	return
  5762     0D97                     __end_of_DS3231_Bcd_Bin:
  5763     007E                     btemp	set	126	;btemp
  5764     007E                     wtemp0	set	126
  5765                           
  5766                           	psect	idloc
  5767                           
  5768                           ;Config register IDLOC0 @ 0x2000
  5769                           ;	unspecified, using default values
  5770     2000                     	org	8192
  5771     2000  3FFF               	dw	16383
  5772                           
  5773                           ;Config register IDLOC1 @ 0x2001
  5774                           ;	unspecified, using default values
  5775     2001                     	org	8193
  5776     2001  3FFF               	dw	16383
  5777                           
  5778                           ;Config register IDLOC2 @ 0x2002
  5779                           ;	unspecified, using default values
  5780     2002                     	org	8194
  5781     2002  3FFF               	dw	16383
  5782                           
  5783                           ;Config register IDLOC3 @ 0x2003
  5784                           ;	unspecified, using default values
  5785     2003                     	org	8195
  5786     2003  3FFF               	dw	16383
  5787                           
  5788                           	psect	config
  5789                           
  5790                           ;Config register CONFIG1 @ 0x2007
  5791                           ;	Oscillator Selection bits
  5792                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5793                           ;	Watchdog Timer Enable bit
  5794                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5795                           ;	Power-up Timer Enable bit
  5796                           ;	PWRTE = OFF, PWRT disabled
  5797                           ;	RE3/MCLR pin function select bit
  5798                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5799                           ;	Code Protection bit
  5800                           ;	CP = OFF, Program memory code protection is disabled
  5801                           ;	Data Code Protection bit
  5802                           ;	CPD = OFF, Data memory code protection is disabled
  5803                           ;	Brown Out Reset Selection bits
  5804                           ;	BOREN = OFF, BOR disabled
  5805                           ;	Internal External Switchover bit
  5806                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5807                           ;	Fail-Safe Clock Monitor Enabled bit
  5808                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5809                           ;	Low Voltage Programming Enable bit
  5810                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5811                           ;	In-Circuit Debugger Mode bit
  5812                           ;	DEBUG = 0x1, unprogramme  5813     2007                     	org	8199
  5814     2007  20D4               	dw	8404
  5815                           
  5816                           ;Config register CONFIG2 @ 0x2008
  5817                           ;	Brown-out Reset Selection bit
  5818                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5819                           ;	Flash Program Memory Self Write Enable bits
  5820                           ;	WRT = OFF, Write protection off
  5821     2008                     	org	8200
  5822     2008  3FFF               	dw	16383

Data Sizes:
    Strings     145
    Constant    10
    Data        77
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      57
    BANK1            80      0      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    CLK_CONFIG$1107	PTR unsigned char  size(1) Largest target is 77
		 -> dw(BANK1[77]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 77
		 -> STR_14(CODE[7]), ?_sprintf(BANK0[2]), dw(BANK1[77]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[3]), STR_12(CODE[14]), STR_11(CODE[17]), STR_10(CODE[11]), 
		 -> STR_9(CODE[7]), STR_8(CODE[15]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[17]), STR_3(CODE[15]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    DS3231_Get_Time@hr	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Time@min	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Time@sec	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Date@year	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lyr(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@mth	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lmonth(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@day	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lday(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@dow	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@ldow(COMMON[1]), RAM(DATA[512]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Init_Master
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _DS3231_Get_Time->_DS3231_Bcd_Bin
    _DS3231_Get_Date->_DS3231_Bcd_Bin
    _DS3231_Read->_I2C_Write

Critical Paths under _main in BANK0

    _main->_CLK_CONFIG
    _CLK_CONFIG->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8015
                                             26 BANK0      2     2      0
                         _CLK_CONFIG
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _Lcd_Clear
                           _Lcd_Init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      66
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _CLK_CONFIG                                           3     3      0    7612
                                             23 BANK0      3     3      0
                    _DS3231_Get_Date
                    _DS3231_Get_Time
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             ___bmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    3674
                                              0 BANK0     23    16      7
                             ___bmul (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     444
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     144
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1180
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1292
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DS3231_Get_Time                                      6     0      6     460
                                              4 COMMON     6     0      6
                     _DS3231_Bcd_Bin
                        _DS3231_Read
 ---------------------------------------------------------------------------------
 (2) _DS3231_Get_Date                                      8     0      8     862
                                              4 COMMON     8     0      8
                     _DS3231_Bcd_Bin
                        _DS3231_Read
 ---------------------------------------------------------------------------------
 (3) _DS3231_Read                                          2     2      0      75
                                              1 COMMON     2     2      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DS3231_Bcd_Bin                                       4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CLK_CONFIG
     _DS3231_Get_Date
       _DS3231_Bcd_Bin
       _DS3231_Read
         _I2C_Nack
         _I2C_Read
         _I2C_Restart
         _I2C_Start
         _I2C_Stop
         _I2C_Write
     _DS3231_Get_Time
       _DS3231_Bcd_Bin
       _DS3231_Read
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___bmul
     _sprintf
       ___bmul (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _I2C_Read
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _setup
     _I2C_Init_Master

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      39       5       71.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      94      12        0.0%
ABS                  0      0      94       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 00:54:30 2023

                       pc 0002            ___bmul@product 0072                        l91 0513  
                      l85 00CB                        l77 0148                        l96 0534  
                      _dw 00A0                        fsr 0004       ___wmul@multiplicand 0072  
                     l102 057D                       l200 0D13                       l113 05E7  
                     l203 0CF9                       l107 059E                       l140 06FD  
                     l124 0675                       l205 0CFE                       l221 0D3C  
                     l230 0D29                       l206 0CFF                       l118 0608  
                     l215 0D18                       l223 0D40                       l151 0764  
                     l135 06DC                       l224 0D44                       l240 0DDC  
                     l217 0D1D                       l305 0FFF                       l241 0DE2  
                     l129 0696                       l218 0D1E                       l314 0E45  
                     l242 0DE3                       l250 0DB0                       l162 07CB  
                     l146 0743                       l227 0D22                       l243 0DE9  
                     l308 0EB1                       l244 0DEA                       l325 0D96  
                     l229 0D27                       l245 0DF0                       l157 07AA  
                     l253 0D36                       l166 07E5                       l262 01C7  
                     l191 0D03                       l247 0DF1                       l239 0DD9  
                     l271 0F2D                       l423 01E2                       l504 0D7E  
                     l193 0D08                       l265 0E7A                       l194 0D09  
                     l450 02CE                       l259 0FB7                       l435 02F5  
                     l188 0DCF                       l197 0D0D                       l199 0D12  
                     l480 0E16                       l457 0359                       l474 0422  
                     l750 0F71                       l478 0DFE                       l760 0EEB  
                     l931 0D56                       _dia 0026                       _ano 0024  
                     _dow 0023                       _mes 0025                       fsr0 0004  
                     indf 0000                      l2001 020E                      l2011 0252  
                    l2003 0223                      l2101 03A9                      l2021 0269  
                    l2013 0256                      l2005 0236                      l2111 03C9  
                    l2103 03AE                      l2031 0293                      l2023 027A  
                    l2015 025C                      l2007 023A                      l2121 0405  
                    l2105 03B2                      l2113 03CD                      l2041 02BF  
                    l2033 0297                      l2025 0284                      l2017 0260  
                    l2009 024B                      l2201 049C                      l2115 03D0  
                    l2107 03BE                      l2051 0305                      l2035 02A6  
                    l2027 028B                      l2019 0263                      l2123 040E  
                    l2211 04DD                      l2203 04A4                      l2141 0D70  
                    l2117 03FC                      l2109 03C4                      l2053 0309  
                    l2061 031F                      l2125 041E                      l2037 02B5  
                    l2029 028E                      l2045 02D0                      l2301 060C  
                    l2221 050D                      l2205 04AD                      l2213 04E6  
                    l2143 0D74                      l2119 0401                      l2071 033D  
                    l2055 030D                      l2047 02F9                      l2039 02BB  
                    l2311 0628                      l2303 0616                      l2231 052E  
                    l2215 04ED                      l2207 04BC                      l2151 00B1  
                    l2145 0D76                      l2137 0D6B                      l2081 0370  
                    l2073 0347                      l2049 0301                      l2057 0313  
                    l2401 0768                      l2321 066F                      l2313 0630  
                    l2305 061C                      l2241 0548                      l2225 0517  
                    l2233 0530                      l2217 04F5                      l2209 04D5  
                    l2161 00BF                      l2153 00B8                      l2147 0D7D  
                    l2139 0D6C                      l2091 0387                      l2083 0374  
                    l2075 034D                      l2067 0321                      l2059 031B  
                    l2411 0784                      l2403 0772                      l2331 0690  
                    l2315 063F                      l2307 0621                      l2251 056E  
                    l2243 054F                      l2227 0521                      l2219 0504  
                    l2171 016A                      l2163 00C2                      l2155 00BA  
                    l2093 038D                      l2085 0378                      l2077 0353  
                    l2421 07AE                      l2413 078C                      l2405 0778  
                    l2341 06AA                      l2325 0679                      l2333 0692  
                    l2317 0650                      l2309 0622                      l2261 0591  
                    l2253 0577                      l2237 0538                      l2229 0527  
                    l2245 0551                      l2181 01C2                      l2173 0170  
                    l2165 00C3                      l2157 00BD                      l2095 0392  
                    l2087 037E                      l2079 0364                      l2423 07B8  
                    l2415 079B                      l2407 077D                      l2351 06CD  
                    l2343 06AF                      l2327 0683                      l2319 0666  
                    l2271 05AC                      l2263 0598                      l2247 0557  
                    l2239 0542                      l2191 0458                      l2183 0D2A  
                    l2175 0179                      l2167 00C4                      l2159 00BE  
                    l1801 0D98                      l2097 0396                      l2089 0383  
                    l2433 07CF                      l2425 07BE                      l2417 07A4  
                    l2409 077E                      l2361 06F0                      l2353 06D6  
                    l2337 069A                      l2329 0689                      l2345 06B0  
                    l2281 05C9                      l2273 05B2                      l2257 0581  
                    l2265 059A                      l2249 055F                      l2193 0461  
                    l2185 0423                      l2177 0188                      l2169 00C5  
                    l2441 0119                      l1803 0D9B                      l1811 0E47  
                    l2099 03A3                      l2435 07D9                      l2427 07C5  
                    l2371 070B                      l2363 06F7                      l2347 06B6  
                    l2339 06A4                      l2291 05F5                      l2283 05D8  
                    l2275 05B9                      l2259 058B                      l2195 0469  
                    l2187 042A                      l2179 018E                      l2451 013B  
                    l2443 0123                      l1805 0DA1                      l1821 0E66  
                    l1813 0E4D                      l1901 0F59                      l2437 07DF  
                    l2429 07C7                      l2381 0725                      l2373 0711  
                    l2357 06E0                      l2365 06F9                      l2349 06BE  
                    l2293 05FB                      l2285 05E1                      l2269 05A2  
                    l2277 05BB                      l2197 047A                      l2189 0450  
                    l2461 015B                      l2453 0142                      l2445 0128  
                    l1831 0E18                      l1807 0DA4                      l1823 0E69  
                    l1815 0E50                      l1903 0F5F                      l2439 07E4  
                    l2391 0751                      l2383 0734                      l2375 0716  
                    l2359 06EA                      l2295 0602                      l2279 05C1  
                    l2199 0483                      l2463 0161                      l2447 012E  
                    l1841 0E2E                      l1833 0E18                      l1809 0DAD  
                    l1825 0E6F                      l1817 0E5E                      l1905 0F60  
                    l1921 0EC6                      l1913 0EB2                      l2537 01F5  
                    l2393 0757                      l2385 073D                      l2369 0701  
                    l2377 0717                      l2289 05EB                      l2297 0604  
                    l2457 014C                      l2449 0136                      l1771 0D00  
                    l1843 0E34                      l1835 0E1D                      l1827 0E72  
                    l1819 0E61                      l1907 0F67                      l1923 0ECA  
                    l1915 0EB8                      l1931 0EE7                      l2539 02E4  
                    l2395 075E                      l2379 071D                      l2459 0156  
                    l1853 0D80                      l1781 0D28                      l1773 0D38  
                    l1845 0E3A                      l1837 0E23                      l1829 0E77  
                    l1909 0F6D                      l1925 0ED4                      l1917 0EBB  
                    l1861 0D46                      l2389 0747                      l2397 0760  
                    l1941 0DBF                      l1855 0D84                      l1775 0D41  
                    l1847 0E3F                      l1839 0E29                      l1951 0E7B  
                    l1791 0DD1                      l1927 0EDA                      l1919 0EC2  
                    l1863 0D47                      l1943 0DC5                      l1935 0DB2  
                    l1857 0D88                      l1785 0D0A                      l1849 0E44  
                    l1793 0DD5                      l1961 0F8E                      l1953 0F73  
                    l1929 0EE1                      l1881 0E0C                      l1873 0DF2  
                    l1865 0D4D                      l1945 0DC8                      l1937 0DB6  
                    l1779 0D1F                      l1787 0CF6                      l1795 0DE0  
                    l1971 0FB1                      l1955 0F78                      l1963 0F95  
                    l1891 0F36                      l1883 0E12                      l1875 0DF4  
                    l1867 0D53                      l1947 0DCD                      l1939 0DBC  
                    l1789 0D14                      l1949 0FB8                      l1797 0DE7  
                    l1965 0F9B                      l1957 0F85                      l1973 0EEC  
                    l1893 0F39                      l1877 0DF8                      l1869 0D55  
                    l1981 01CB                      l1799 0DEE                      l1967 0FA8  
                    l1959 0F88                      l1975 0EEF                      l1895 0F40  
                    l1887 0F2E                      l1879 0E05                      l1991 01E3  
                    l1983 01CE                      l1969 0FAB                      l1977 0F0B  
                    l1897 0F44                      l1889 0F30                      l1985 01D4  
                    l1979 0F11                      l1899 0F48                      l1995 01E7  
                    l1987 01D9                      l1997 01FA                      l1989 01DE  
                    l1999 020A                      STR_1 00A2                      STR_2 00A7  
                    STR_3 004E                      STR_4 002E                      STR_5 0080  
                    STR_6 008A                      STR_7 0076                      STR_8 003F  
                    STR_9 009B                      u2000 05A2                      u2001 05A1  
                    u1210 0D08                      u2010 05B9                      u1211 0D07  
                    u2011 05B8                      u1220 0D40                      u1300 0DEE  
                    u2100 0675                      u2020 05C1                      u1221 0D3F  
                    u1301 0DED                      u2101 0674                      u2021 05C0  
                    u1230 0D27                      u2110 0679                      u2030 05E7  
                    u1231 0D26                      u2111 0678                      u2031 05E6  
                    u1240 0D12                      u2200 06FD                      u2120 0690  
                    u2040 05EB                      u1241 0D11                      u2201 06FC  
                    u2121 068F                      u2041 05EA                      u1250 0CFE  
                    u1410 0F48                      u1330 0D4D                      u2210 0701  
                    u2130 0696                      u2050 0602                      u1251 0CFD  
                    u1315 0E53                      u1411 0F47                      u1331 0D4C  
                    u2211 0700                      u2131 0695                      u2051 0601  
                    u1260 0D1D                      u1340 0D53                      u2300 0784  
                    u2220 0716                      u2140 069A                      u2060 0608  
                    u1325 0D8B                      u1261 0D1C                      u1405 0F3A  
                    u1341 0D52                      u2301 0783                      u2221 0715  
                    u2141 0699                      u2061 0607                      u1270 0DD5  
                    u1430 0F59                      u1510 0EE7                      u1350 0DF8  
                    u2310 07AA                      u2230 071D                      u2150 06AF  
                    u2070 060C                      u1271 0DD4                      u1431 0F58  
                    u1511 0EE6                      u1351 0DF7                      u2311 07A9  
                    u2231 071C                      u2151 06AE                      u2071 060B  
                    u1280 0DE0                      u1600 0F2D                      u2320 07AE  
                    u2240 0743                      u2160 06B6                      u2080 0621  
                    u1520 0DC5                      u1281 0DDF                      u1601 0F2C  
                    u1425 0F49                      u1505 0EDB                      u2321 07AD  
                    u2241 0742                      u2161 06B5                      u2081 0620  
                    u1521 0DC4                      u1290 0DE7                      u1450 0F6D  
                    u1610 01D4                      u2330 07C5                      u2250 0747  
                    u2170 06DC                      u2090 0628                      u1530 0DCD  
                    u1291 0DE6                      u1451 0F6C                      u1435 0F55  
                    u1611 01D3                      u2331 07C4                      u2251 0746  
                    u2171 06DB                      u2091 0627                      u1531 0DCC  
                    u1540 0F78                      u1460 0EB8                      u1380 0E12  
                    u1700 0309                      u1620 020A                      u2340 07CB  
                    u2260 075E                      u2180 06E0                      u1541 0F77  
                    u1445 0F61                      u1461 0EB7                      u1381 0E11  
                    u1365 0DFF                      u1701 0308                      u1621 0209  
                    u2341 07CA                      u2261 075D                      u2181 06DF  
                    u1390 0F36                      u1710 033C                      u1630 024A  
                    u2350 07CF                      u2270 0764                      u2190 06F7  
                    u1391 0F35                      u1375 0E06                      u1711 033B  
                    u1631 0249                      u2351 07CE                      u2271 0763  
                    u2191 06F6                      u2407 0152                      u1560 0F9B  
                    u1480 0ECA                      u1800 03A9                      u1720 0347  
                    u1640 025C                      u2360 07E4                      u2280 0768  
                    u1561 0F9A                      u1481 0EC9                      u1801 03A8  
                    u1721 0346                      u1641 025B                      u2361 07E3  
                    u2281 0767                      u2417 0174                      u1490 0ED4  
                    u1810 03BE                      u1730 034D                      u1650 027A  
                    u2290 077D                      u2370 0148                      u1555 0F7E  
                    u1491 0ED3                      u1475 0EBC                      u1811 03BD  
                    u1731 034C                      u1715 0338                      u1651 0279  
                    u2291 077C                      u2507 05F1                      u2427 0183  
                    u2371 0147                      u1580 0EF9                      u1820 03C4  
                    u1740 0353                      u1660 0284                      u1900 0517  
                    u2380 014C                      u1821 03C3                      u1741 0352  
                    u1661 0283                      u2517 0612                      u1901 0516  
                    u2437 0190                      u2381 014B                      u1590 0F1B  
                    u1830 040E                      u1750 0364                      u1670 02A5  
                    u1910 052E                      u1575 0FA1                      u2607 0E63  
                    u1495 0ED0                      u1831 040D                      u1751 0363  
                    u1671 02A4                      u2527 067F                      u1911 052D  
                    u2447 01C4                      u1840 041E                      u1760 0378  
                    u1680 02CD                      u1920 0534                      u2617 0E74  
                    u1841 041D                      u1761 0377                      u1681 02CC  
                    u1665 0280                      u2537 06A0                      u1921 0533  
                    u2457 04B5                      u1850 0D70                      u1770 037E  
                    u1690 02F9                      u1930 0538                      u2627 0DA8  
                    u1851 0D6F                      u1771 037D                      u1755 0360  
                    u1691 02F8                      u2547 06E6                      u1931 0537  
                    u2467 051D                      u1860 0D7D                      u1780 038D  
                    u1940 054F                      u1861 0D7C                      u1781 038C  
                    u2557 0707                      u1941 054E                      u2477 053E  
                    u2397 013F                      u1790 03A2                      u1950 0557  
                    u1870 042A                      u1791 03A1                      u2567 074D  
                    u2487 0587                      u1951 0556                      u1871 0429  
                    u1960 057D                      u1880 04ED                      u2577 076E  
                    u2497 05A8                      u1961 057C                      u1881 04EC  
                    u1970 0581                      u1890 0513                      u2587 07B4  
                    u1971 0580                      u1891 0512                      u1980 0598  
                    u2597 07D5                      u1981 0597                      u1990 059E  
                    u1991 059D         ?_Lcd_Write_String 0075                      _main 0119  
        __end_of_I2C_Nack 0D1F          __end_of_I2C_Read 0D2A                      btemp 007E  
        __end_of_I2C_Stop 0D14                      start 0000        ??_Lcd_Write_String 0077  
        ?_I2C_Init_Master 0070           __end_of_Lcd_Cmd 0DB1         ??_DS3231_Get_Date 007C  
       ___bmul@multiplier 0073         ??_DS3231_Get_Time 007A                     ?_main 0070  
                   STR_10 006B                     STR_11 001D                     STR_12 005D  
                   STR_13 00AB                     STR_14 0094           __end_of___lwdiv 0F72  
         __end_of___lwmod 0EEC                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088           __end_of_dpowers 001D                     _horas 0022  
         __end_of_isdigit 0D57                     _setup 00B1         __end_of_I2C_Start 0D0A  
       __end_of_I2C_Write 0D45                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0423          __end_of_Lcd_Init 01C8  
        __end_of_Lcd_Port 0DF2           __initialization 07E6              __end_of_main 016A  
          _DS3231_Bcd_Bin 0D7F                    ??_main 0057       DS3231_Get_Date@year 0078  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _SSPADD 0093                    _SSPCON 0014                    _SSPBUF 0013  
  __end_of_DS3231_Bcd_Bin 0D97                    ___bmul 0D6A                    ___wmul 0DF2  
               ??___lwdiv 0074                 ??___lwmod 007C                    _buffer 0029  
               ?_I2C_Nack 0070                 ??_isdigit 0070                 ?_I2C_Read 0070  
               ?_I2C_Stop 0070              ??_CLK_CONFIG 0054                 ??_sprintf 0044  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077        DS3231_Bcd_Bin@temp 0073   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 0D37       ___bmul@multiplicand 0070            __pcstackCOMMON 0070  
         ?_DS3231_Bcd_Bin 0070              __pidataBANK1 00CC        __end_of_CLK_CONFIG 07E6  
           __end_of_setup 00CC            _Lcd_Set_Cursor 0F72                ??_I2C_Nack 0070  
              ??_I2C_Read 0070                ??_I2C_Stop 0070                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070              sprintf@width 0051                   ??_setup 0071  
         _DS3231_Get_Date 0FB8           _DS3231_Get_Time 0E7B                __pbssBANK0 0020  
           ??_DS3231_Read 0071                __pmaintext 0119                   ?___bmul 0070  
                 ?___wmul 0070    __end_of_Lcd_Set_Cursor 0FB8             ??_I2C_Restart 0070  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 0E46  
                 _Lcd_Cmd 0D97                 _I2C_Start 0D00                 _I2C_Write 0D37  
     __end_of_DS3231_Read 0E46                   ___lwdiv 0F2E                   ___lwmod 0EB2  
         ?_Lcd_Set_Cursor 0074                   __ptext1 00B1                   __ptext2 0DB1  
                 __ptext3 016A                   __ptext4 0D2A                   __ptext5 0423  
                 __ptext6 01C8                   __ptext7 0D45                   __ptext8 0DF2  
                 __ptext9 0EB2                   _dpowers 0013   __end_of_DS3231_Get_Date 1000  
                 _isdigit 0D45   __end_of_DS3231_Get_Time 0EB2                   _minutos 0021  
                 _sprintf 01C8                   clrloop0 0CEF       __end_of_I2C_Restart 0D00  
  __end_of_Lcd_Write_Char 0E7B      end_of_initialization 07FC                ?_I2C_Start 0070  
              ?_I2C_Write 0070                 Lcd_Port@a 0070                 _PORTAbits 0005  
               _PORTBbits 0006                 _PORTDbits 0008                 _TRISCbits 0087  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075         Lcd_Write_String@i 007A  
             _DS3231_Read 0E17          ??_DS3231_Bcd_Bin 0070                 _Lcd_Clear 0D2A  
          __end_of___bmul 0D7F            __end_of___wmul 0E17          _Lcd_Write_String 0EEC  
             _I2C_Restart 0CF6          ?_DS3231_Get_Date 0074       start_initialization 07E6  
        ?_DS3231_Get_Time 0074         ??_I2C_Init_Master 0070     I2C_Init_Master@sp_i2c 0070  
      DS3231_Get_Date@day 0074        DS3231_Get_Date@dow 007A        DS3231_Get_Date@mth 0076  
             ??_I2C_Start 0070               ??_I2C_Write 0070                ?_Lcd_Clear 0070  
                ??___bmul 0071                  ??___wmul 0074                init_fetch0 0D57  
             __pdataBANK1 00A0           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
      DS3231_Get_Time@min 0076        DS3231_Get_Time@sec 0078                 ___latbits 0002  
           __pcstackBANK0 003D                  ?_Lcd_Cmd 0070               sprintf@flag 004F  
             sprintf@prec 0047          ___lwdiv@dividend 0072          ??_Lcd_Set_Cursor 0075  
                ?___lwdiv 0070                  ?___lwmod 0078                 __pstrings 0003  
                _I2C_Nack 0D14                  ?_isdigit 0070                  _I2C_Read 0D1F  
                _I2C_Stop 0D0A          ___lwdiv@quotient 0075                  ?_sprintf 003D  
          ___wmul@product 0074   DS3231_Bcd_Bin@bcd_value 0072                 clear_ram0 0CEE  
         DS3231_Read@data 0072                  Lcd_Cmd@a 0073                  _PIR1bits 000C  
               _valor_ADC 0028               ??_Lcd_Clear 0074               __stringbase 0012  
       ___wmul@multiplier 0070          ??_Lcd_Write_Char 0071                  _Lcd_Init 016A  
                _Lcd_Port 0DD0  __end_of_Lcd_Write_String 0F2E              ?_DS3231_Read 0070  
         _I2C_Init_Master 0DB1             I2C_Write@data 0070         DS3231_Get_Time@hr 0074  
      __end_of__stringtab 0013               _isdigit$922 0070              ?_I2C_Restart 0070  
              sprintf@len 004B                sprintf@val 004D                _CLK_CONFIG 0423  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 0F2E  
                __ptext11 0D6A                  __ptext20 0D37                  __ptext12 0EEC  
                __ptext21 0D0A                  __ptext13 0E46                  __ptext22 0D00  
                __ptext14 0F72                  __ptext23 0CF6                  __ptext15 0D97  
                __ptext24 0D1F                  __ptext16 0DD0                  __ptext25 0D14  
                __ptext17 0E7B                  __ptext26 0D7F                  __ptext18 0FB8  
                __ptext19 0E17            DS3231_Read@reg 0071                  _selector 0027  
                _segundos 0020                  init_ram0 0D5B                  isdigit@c 0071  
      Lcd_Write_Char@temp 0072                 sprintf@ap 004A                 sprintf@cp 0048  
               sprintf@sp 0053          ___lwmod@dividend 007A   __end_of_I2C_Init_Master 0DD0  
               stringcode 000D                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
                sprintf@c 0050                  sprintf@f 003D           ___lwmod@divisor 0078  
         ___lwmod@counter 007D                  stringdir 000D                  stringtab 0003  
             ?_CLK_CONFIG 0070               _SSPCON2bits 0091  
